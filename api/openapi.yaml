openapi: 3.0.1
info:
  contact:
    name: Treezor
    url: https://treezor.com
  description: Official endpoint documentation for Treezor.
  title: Treezor API
  version: 24.11.21
servers:
- description: Sandbox environment
  url: https://<your-company-name>.sandbox.treezor.co
- description: Production environment
  url: https://<your-company-name>.api.treezor.co
tags:
- description: |
    Related articles: [Account Details](/guide/wallets/account-details.html) | [Wallets](/guide/wallets/introduction.html)
  name: Account Details
- description: |
    Related articles: [Account Statements](/guide/wallets/account-statements.html) | [Wallets](/guide/wallets/introduction.html)
  name: Account Statements
- description: |
    Related articles: [Card Acquiring](/guide/acquiring/introduction.html)
  name: Acquiring (Card Topups)
- description: |
    Related articles: [Card Acquiring](/guide/acquiring/introduction.html) | [Emulation](/guide/acquiring/faking-operations.html)
  name: Acquiring (Simulation)
- description: |
    Related articles: [Templates](/guide/api-basics/templates.html)
  name: API Templates
- description: |
    Related articles: [Authentication](/guide/api-basics/authentication.html)
  name: Authentication
- description: |
    Related articles: [Balances](/guide/wallets/balances.html) | [Wallets](/guide/wallets/introduction.html)
  name: Balances
- description: |
    Related articles: [Beneficiaries](/guide/transfers/beneficiaries.html) | [SEPA Transfers](/guide/transfers/introduction.html)
  name: Beneficiaries
- description: |
    Related articles: [Checking for veracity](/guide/users/legal-entity.html#checking-for-veracity) | [Legal Entities](/guide/users/legal-entity.html)
  name: Businesses
- description: "Related articles: [Cards](/guide/cards/introduction.html) | [Creation](/guide/cards/creation.html)\
    \ | [Modifications](/guide/cards/modification.html) \n"
  name: Cards
- description: |
    Related articles: [Bulk Creation](/guide/cards/creation.html#bulk-creation) | [Cards](/guide/cards/introduction.html)
  name: Cards Bulk Creation
- description: |
    **Deprecated**
  name: Cards Digitalization
- description: |
    Related articles: [Card enrollment](/guide/strong-customer-authentication/cards-enrollment.html) | [SCA](/guide/strong-customer-authentication/introduction.html)
  name: Card 3DSecure Enrollment (SCA)
- description: |
    Related articles: [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html)
  name: Card Rulesets (MDC)
- description: |
    Related articles: [Transactions](/guide/cards/transactions.html) | [Cards](/guide/cards/introduction.html)
  name: Card Transactions
- description: |
    Related articles: [List-based restrictions](/guide/cards/restrictions-limits.html#country-restrictions) | [Cards](/guide/cards/introduction.html)
  name: Country Restriction Groups
- description: |
    Related articles: [X-Pay](/guide/cards/x-pay-google-apple.html) | [Cards](/guide/cards/introduction.html)
  name: Digitalized Cards
- description: |
    Related articles: [Mandates](/guide/transfers/mandates.html) | [SEPA Direct Debit](/guide/transfers/direct-debit.html#emitted-direct-debits-sdde)
  name: Mandates
- description: |
    Related articles: [Mass Payout](/guide/transfers/credit-transfer.html#mass-scte-mass-payout) | [SEPA Transfers](/guide/transfers/introduction.html)
  name: Mass Payouts
- description: |
    Related articles: [List-based restrictions](/guide/cards/restrictions-limits.html#mcc-restrictions) | [Cards](/guide/cards/introduction.html)
  name: MCC Restriction Groups
- description: |
    Related articles: [List-based restrictions](/guide/cards/modification.html#list-based-restrictions) | [Cards](/guide/cards/introduction.html)
  name: Merchant ID Restriction Groups
- description: |
    Related articles: [MID Metadata](/guide/cards/restrictions-limits.html#mid-restrictions) | [Cards](/guide/cards/introduction.html)
  name: Merchant ID Metadata
- description: |
    Related articles: [Operations](/guide/operations/introduction.html)
  name: Operations
- description: |
    Related articles: [SCTR](/guide/transfers/credit-transfer.html#received-credit-transfers-sctr) | [SDDE](/guide/transfers/direct-debit.html#emitted-direct-debits-sdde) | [Card top-up](/guide/acquiring/introduction.html) | [Check](/guide/cheques/introduction.html)
  name: Payins
- description: |
    Related articles: [SCTR Recalls](/guide/transfers/sepa-recalls.html#receiving-sctr-recalls)
  name: Payin Refunds
- description: |
    Related articles: [Card Transactions](/guide/cards/transactions.html) | [SCTE](/guide/transfers/credit-transfer.html#emitted-credit-transfers-scte) | [SDDR](/guide/transfers/direct-debit.html#received-direct-debits-sddr)
  name: Payouts
- description: |
    Related articles: [SCTE Inst Recalls](/guide/transfers/sepa-recalls.html#emitting-scte-inst-recalls)
  name: Payout Refunds
- description: |
    Related articles: [Recalls & RROs](/guide/transfers/sepa-recalls.html)
  name: Recalls
- description: |
    Related articles: [Scheduled Payments](/guide/transfers/scheduled-payments.html) | [SCTE](/guide/transfers/credit-transfer.html#emitted-credit-transfers-scte) | [Wallet-to-Wallet](/guide/wallets/wallet-to-wallet.html)
  name: Scheduled Payments
- description: |
    Related articles: [SCA External Operations](/guide/strong-customer-authentication/endpoints-and-data.html#declaring-sca-external-operations) | [SCA](/guide/strong-customer-authentication/introduction.html)
  name: SCA External Operations
- description: |
    Related articles: [SCA Wallets](/guide/strong-customer-authentication/sca-wallets.html) | [SCA](/guide/strong-customer-authentication/introduction.html)
  name: SCA Wallets
- name: Simulation
- description: |
    Related articles: [Support Users](/guide/users/support.html) | [Dashboard Users](/guide/dashboard/dashboard-users.html)
  name: Support Users
- description: |
    Related articles: [Transactions](/guide/wallets/transactions.html) | [Wallets](/guide/wallets/introduction.html)
  name: Transactions
- description: |
    Related articles: [Wallet-to-Wallet](/guide/wallets/wallet-to-wallet.html) | [Wallets](/guide/wallets/introduction.html)
  name: Transfers
- description: |
    Related articles: [Document Pre-review](/guide/user-verification/documents-prereview.html) | [User verification](/guide/user-verification/introduction.html)
  name: User Document Pre-review
- description: |
    Related articles: [Documents](/guide/user-verification/documents.html) | [User verification](/guide/user-verification/introduction.html)
  name: User Documents
- description: |
    Related articles: [KYC Request](/guide/user-verification/kyc-request.html) | [User verification](/guide/user-verification/introduction.html)
  name: User KYC Review
- description: |
    Related articles: [Onboarding](/guide/users/onboarding.html) | [Users](/guide/users/introduction.html)
  name: User Onboarding
- description: |
    Related articles: [Tax residence](/guide/user-verification/tax-residence.html) | [User verification](/guide/user-verification/introduction.html)
  name: User Tax Residences
- description: |
    Related articles: [Physical Users](/guide/users/physical.html) | [Legal Entities](/guide/users/legal-entity.html) | [Users](https://docs.treezor.com/guide/users/introduction.html)
  name: Users
- description: |
    Related articles: [User verification](/guide/user-verification/introduction.html)
  name: Verification Solutions (KYC)
- description: |
    Related articles: [IBAN](/guide/wallets/iban.html) | [Wallets](/guide/wallets/introduction.html)
  name: Virtual IBANs
- description: |
    Related articles: [Wallets](/guide/wallets/introduction.html)
  name: Wallets
paths:
  /core-connect/account-details/{walletId}/raw:
    get:
      description: |
        Retrieve a Wallet RIB and IBAN in json format.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: getRawWalletAccountDetail
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRawWalletAccountDetail_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get JSON Account Details
      tags:
      - Account Details
      x-accepts:
      - application/json
  /core-connect/account-details/{walletId}/computed:
    get:
      description: |
        Retrieve a Wallet RIB and IBAN in PDF format.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: getComputedWalletAccountDetail
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getComputedWalletAccountDetail_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get PDF Account Details
      tags:
      - Account Details
      x-accepts:
      - application/json
  /oauth/token:
    post:
      description: |
        This endpoint is used to exchange authorization codes or refresh tokens for access tokens.
        The response will include the access token and optionally a refresh token, along with their expiration details.

        You may read more about [OAuth2](https://oauth.net/2/).
      operationId: putAuth
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putAuth_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putAuth_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security: []
      summary: The token endpoint of the authentication server
      tags:
      - Authentication
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /core-connect/balance/{walletId}/balance:
    get:
      description: Retrieve the Balance History of a Wallet.
      operationId: getWalletBalanceHistory
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: integer
        style: simple
      - description: Start date in RFC 3339 format
        explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          type: string
        style: form
      - description: End date in RFC-3339 format
        explode: true
        in: query
        name: dateTo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getWalletBalanceHistory_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read
      summary: Get Wallet Balance history
      tags:
      - Balances
      x-accepts:
      - application/json
  /core-connect/cardtransactions:
    get:
      description: Retrieve all the Card Transactions. This is the preferred request
        for a dashboard-oriented approach. You shouldn't expose this endpoint to your
        end users.
      operationId: getCoCardTransactions
      parameters:
      - description: "Pagination cursor, if you don't pass a cursor, result will start\
          \ at the first page."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The date and time from which the transactions are taken into
          account.
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The date and time up to which the transactions are taken into
          account.
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCoCardTransactions_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get all Card Transactions
      tags:
      - Card Transactions
      x-accepts:
      - application/json
  /core-connect/cardtransactions/{cardId}:
    get:
      description: Retrieve the Card Transactions for a specific card. This request
        is preferred for a dashboard-oriented usage. You shouldn't expose this endpoint
        to your end users.
      operationId: getCoCardTransaction
      parameters:
      - description: The unique identifier of the card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      - description: "Pagination cursor, if you don't pass a cursor, result will start\
          \ at the first page."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The date and time from which the transactions are taken into
          account.
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The date and time up to which the transactions are taken into
          account.
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The minimum amount of the transactions to be taken into account.
        explode: true
        in: query
        name: amountFrom
        required: false
        schema:
          example: 10.25
          type: number
        style: form
      - description: The maximum amount of the transactions to be taken into account.
        explode: true
        in: query
        name: amountTo
        required: false
        schema:
          example: 100.25
          type: number
        style: form
      - explode: true
        in: query
        name: paymentStatus
        required: false
        schema:
          items:
            enum:
            - A
            - R
            - S
            - C
            - I
            - V
            - M
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: paymentType
        required: false
        schema:
          items:
            enum:
            - Withdrawal
            - Payment
            type: string
          type: array
        style: form
      - description: |
          The unique identifier of the merchant. See [Merchant Identification Number (MID)](/guide/overview/glossary.html#merchant-identification-number-mid).
        explode: true
        in: query
        name: merchantId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCoCardTransactions_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Card Transactions
      tags:
      - Card Transactions
      x-accepts:
      - application/json
  /core-connect/support-user:
    get:
      description: Retrieve all the Support Users.
      operationId: getAllSupportUser
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SupportUserObject'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Get all Support Users
      tags:
      - Support Users
      x-accepts:
      - application/json
    post:
      description: Create a new Support User.
      operationId: createSupportUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSupportUser_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportUserObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Create Support User
      tags:
      - Support Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/support-user/{supportUserId}:
    delete:
      description: Delete a Support User
      operationId: deleteSupportUser
      parameters:
      - description: The unique identifier of the Support User.
        explode: false
        in: path
        name: supportUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Delete Support User
      tags:
      - Support Users
      x-accepts:
      - application/json
    get:
      description: Retrieve a Support User based on its `id`.
      operationId: findOneSupportUserById
      parameters:
      - description: The unique identifier of the Support User.
        explode: false
        in: path
        name: supportUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportUserObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Get Support User
      tags:
      - Support Users
      x-accepts:
      - application/json
    put:
      description: Modify a Support User information.
      operationId: updateSupportUser
      parameters:
      - description: The unique identifier of the Support User.
        explode: false
        in: path
        name: supportUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSupportUser_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportUserObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Update Support User
      tags:
      - Support Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/support-user/{supportUserId}/unblock:
    put:
      description: Unblock a Support User. Support Users may be blocked if they failed
        to login 3 times in a row.
      operationId: unblockSupportUser
      parameters:
      - description: The unique identifier of the Support User.
        explode: false
        in: path
        name: supportUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - support_user_management
      summary: Unblock Support User
      tags:
      - Support Users
      x-accepts:
      - application/json
  /core-connect/onboard/users/validate/{confirmationCode}:
    get:
      description: onboard user
      operationId: onboard-user-validate
      parameters:
      - description: Confirmation code
        explode: false
        in: path
        name: confirmationCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "301":
          description: OK
      security: []
      summary: Onboard User
      tags:
      - User Onboarding
      x-accepts:
      - application/json
  /core-connect/onboard/users:
    post:
      description: Create a User using the onboarding feature.
      operationId: onboard-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboard_user_request'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security: []
      summary: Onboard User
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/onboard/user/config:
    get:
      description: Retrieve the onboarding configuration file
      operationId: get-config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_config_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_config_200_response'
          description: OK
      security:
      - jwt:
        - admin
      summary: Get Onboarding Configuration File
      tags:
      - User Onboarding
      x-accepts:
      - application/json
    post:
      description: Configure onboarding file
      operationId: config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_config_200_response'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_config_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Configure Onboarding File
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/onboard/config:
    get:
      description: Get onboarding success url and onboarding error.
      operationId: getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getConfig_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Get Onboarding Callback URL
      tags:
      - User Onboarding
      x-accepts:
      - application/json
    put:
      description: |
        Update onboarding success url callback and/or onboarding error url callback
      operationId: updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getConfig_200_response_inner'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getConfig_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Update Onboarding Callback URL
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/onboarding/users:
    get:
      description: Retrieve all the onboarded users.
      operationId: getAllUsers
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: |
          `1` onboarding complete, `0` onboarding not complete
        explode: true
        in: query
        name: onboardingComplete
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllUsers_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get Onboarded Users
      tags:
      - User Onboarding
      x-accepts:
      - application/json
  /core-connect/password/users/{userId}:
    put:
      description: Change the password of a User.
      operationId: putUserPassword
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUserPassword_request'
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update User Password
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/password/forgot:
    post:
      description: Send an email with a password reset link
      operationId: postForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postForgotPassword_request'
      responses:
        "204":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Send Password Reset Email
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/password/change:
    put:
      description: Change the password user with the data collected from the user.
      operationId: putChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putChangePassword_request'
      responses:
        "204":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security: []
      summary: Change User Password
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/password/config:
    get:
      description: |
        Retrieve the password configuration. You may read [the dedicated documentation for this feature](/guide/users/onboarding.html#passwords)
      operationId: getPasswordConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPasswordConfig_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Get Password Configuration
      tags:
      - User Onboarding
      x-accepts:
      - application/json
    put:
      description: |
        Update the password configuration. You may read [the dedicated documentation for this feature](/guide/users/passwords.html#configuration)
      operationId: putPasswordConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getPasswordConfig_200_response'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPasswordConfig_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Update Password Configuration
      tags:
      - User Onboarding
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/mid/metadata:
    get:
      description: Retrieve all MID metadata.
      operationId: getAllMidMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
      security:
      - jwt:
        - admin
      summary: Get all MID metadata
      tags:
      - Merchant ID Metadata
      x-accepts:
      - application/json
    put:
      description: Create or update bulk metadata
      operationId: putMidMetadata
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/putMidMetadata_request_inner'
              type: array
      responses:
        "204":
          description: The resource was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Put Bulk metadata
      tags:
      - Merchant ID Metadata
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/mid/{mid}/metadata:
    get:
      description: Retrieve metadata for a Merchant Id.
      operationId: getMidMetadata
      parameters:
      - description: Mid
        explode: false
        in: path
        name: mid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
      security:
      - jwt:
        - admin
      summary: Get MID Metadata
      tags:
      - Merchant ID Metadata
      x-accepts:
      - application/json
    put:
      description: Store metadata for a Merchant Id.
      operationId: postMidMetadata
      parameters:
      - description: Mid
        explode: false
        in: path
        name: mid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postMidMetadata_201_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
      security:
      - jwt:
        - admin
      summary: Store MID Metadata
      tags:
      - Merchant ID Metadata
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/payouts/{payoutId}/proof:
    get:
      description: |
        Generate and download a proof of payout in .PDF format. See [Proof of Payout](/guide/transfers/proof-of-payout.html) for more information.
      operationId: getProofPayout
      parameters:
      - description: The unique identifier of the Payout.
        explode: false
        in: path
        name: payoutId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProofPayout_200_response'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Create Payout Proof
      tags:
      - Payouts
      x-accepts:
      - application/json
  /core-connect/card/bulk/{id}/report:
    get:
      description: Get a link to download the bulk creation report.
      operationId: getCardBulkReport
      parameters:
      - description: The unique identifier of the card bulk creation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCardBulkReport_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Get Report
      tags:
      - Cards Bulk Creation
      x-accepts:
      - application/json
  /core-connect/card/bulk:
    get:
      description: Search bulk card orders.
      operationId: getBulkCard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBulkCard_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Get Bulk Card Order
      tags:
      - Cards Bulk Creation
      x-accepts:
      - application/json
    post:
      description: |
        Create a Bulk Card order to create multiple cards at once.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postBulkCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBulkCard_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBulkCard_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Create Bulk Card Order
      tags:
      - Cards Bulk Creation
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/operations/{walletId}/report:
    get:
      description: Retrieve an Operations Report based on the corresponding Wallet
        `id`.
      operationId: getOperationsReport
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          The date and time from which the operations are taken into account for the report.
          The dates are to be html encoded (e.g., 2024-01-11T11:25:36+01:00 becomes `2024-01-11T11:25:36%2B01:00`)
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          example: 2024-06-05T00:00:00%2B02:00
          type: string
        style: form
      - description: |
          The date and time up to which the operations are taken into account for the report.
          The dates are to be html encoded (e.g., 2024-01-11T11:25:36+01:00 becomes `2024-01-11T11:25:36%2B01:00`)
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          example: 2024-07-05T00:00:00%2B02:00
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOperationsReport_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get Operations Report
      tags:
      - Operations
      x-accepts:
      - application/json
    post:
      description: Create a CSV export that includes all operations for a given Wallet
        on a given period.
      operationId: postOperationsReport
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postOperationsReport_request'
      responses:
        "201":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Create Operations Report
      tags:
      - Operations
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/merchantIdRestrictionGroups/{groupId}/mid/metadata:
    get:
      description: Retrieve all Merchant Ids with metadata.
      operationId: getAllMidMetadataBYyGroup
      parameters:
      - description: group Id
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: integer
        style: simple
      - description: cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllMidMetadataBYyGroup_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
      security:
      - jwt:
        - read_write
      summary: Get all MID with metadata
      tags:
      - Merchant ID Metadata
      x-accepts:
      - application/json
  /customization/templates/{templateName}/variables:
    get:
      description: Retrieve the list of variables for the given template
      operationId: getTemplateVariables
      parameters:
      - description: The name of the Template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - jwt:
        - admin
      summary: Get Template Variables
      tags:
      - API Templates
      x-accepts:
      - application/json
  /customization/templates/{templateName}/template:
    get:
      description: Retrieve the currently configured template.
      operationId: getTemplate
      parameters:
      - description: The name of the Template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplate_200_response'
          description: OK
      security:
      - jwt:
        - admin
      summary: Get Template
      tags:
      - API Templates
      x-accepts:
      - application/json
    put:
      description: Upload a replacement for an existing Template.
      operationId: putTemplateUpload
      parameters:
      - description: The name of the Template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: CREATED
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
      security:
      - jwt:
        - admin
      summary: Upload Template
      tags:
      - API Templates
      x-accepts:
      - application/json
  /customization/templates/{templateName}/example:
    get:
      description: Test your template by building one with dummy values.
      operationId: getTemplateExample
      parameters:
      - description: The name of the Template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplate_200_response'
          description: OK
      security:
      - jwt:
        - admin
      summary: Build Template Example
      tags:
      - API Templates
      x-accepts:
      - application/json
  /customization/templates/{templateName}:
    delete:
      description: Delete a Template.
      operationId: deleteTemplate
      parameters:
      - description: The name of the Template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - jwt:
        - admin
      summary: Delete Template
      tags:
      - API Templates
      x-accepts:
      - application/json
  /core-connect/users/{userId}/kyc/document:
    get:
      description: Retrieve all pre-review documents for given user
      operationId: getKYCDocuments
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getKYCDocuments_200_response_inner'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Search Pre-review Documents
      tags:
      - User Document Pre-review
      x-accepts:
      - application/json
    post:
      description: Generate a pre-signed form to upload documents for pre-review.
      operationId: getPreSignedKycForm
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getPreSignedKycForm_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getPreSignedKycForm_200_response_inner'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Upload Document Form
      tags:
      - User Document Pre-review
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/kyc/documents/{documentId}/status:
    put:
      description: Update the pre-review status and comment of the document.
      operationId: updateDocument
      parameters:
      - description: The unique identifier of the Document.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDocument_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getKYCDocuments_200_response_inner'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Pre-review Document
      tags:
      - User Document Pre-review
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/kyc/documents/{documentId}:
    delete:
      description: Delete a pre-review document.
      operationId: deleteKYCDocumentcument
      parameters:
      - description: The unique identifier of the Document (UUID).
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getKYCDocuments_200_response_inner'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Delete Pre-review Document
      tags:
      - User Document Pre-review
      x-accepts:
      - application/json
  /core-connect/kyc/documents/need-review:
    get:
      description: |
        Retrieve all pre-review documents to review. This endpoint is for [Onboarded Users](/guide/swagger/introduction.html#/User%20Onboarding) only.
      operationId: getKYCDocumentsToReview
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getKYCDocuments_200_response_inner'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Search Documents to pre-review
      tags:
      - User Document Pre-review
      x-accepts:
      - application/json
  /core-connect/kyc/documents/{documentId}/preview:
    get:
      description: Retrieve the pre-signed URL to download the pre-review document.
      operationId: getPresignedUrlDocument
      parameters:
      - description: The unique identifier of the Document (UUID).
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPresignedUrlDocument_200_response'
          description: The URL and content type of the file.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPresignedUrlDocument_403_response'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get Download URL
      tags:
      - User Document Pre-review
      x-accepts:
      - application/json
  /core-connect/mass-payouts/import:
    post:
      description: Import a SEPA.xml file for mass payout
      operationId: postMassPayoutImport
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postMassPayoutImport_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postMassPayoutImport_201_response'
          description: CREATED
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Import SEPA.xml File
      tags:
      - Mass Payouts
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /core-connect/mass-payouts/report/{reference}:
    get:
      description: |
        Check the progress of the process of creating the report file and allows you to retrieve it.
      operationId: getMassPayoutReportRef
      parameters:
      - description: Unique reference of the `MassPayoutImport` object.
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMassPayoutReportRef_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Mass Payout Report
      tags:
      - Mass Payouts
      x-accepts:
      - application/json
  /core-connect/operations:
    get:
      description: |
        Retrieve Operations that match your search conditions. The request must specify at least: `walletId`, `dateTo`, `dateFrom`.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html) for operations that are more than 90 days old.
      operationId: getOperations
      parameters:
      - description: The unique identifier of the card.
        explode: true
        in: query
        name: cardId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The unique identifier of the Wallet.
        explode: true
        in: query
        name: walletId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: |
          The start of the period to take into account operations.
          The dates are to be html encoded (e.g., 2024-01-11T11:25:36+01:00 becomes `2024-01-11T11:25:36%2B01:00`)
        explode: true
        in: query
        name: dateFrom
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          The end of the period to take into account operations.
          The dates are to be html encoded (e.g., 2024-01-11T11:25:36+01:00 becomes `2024-01-11T11:25:36%2B01:00`)
        explode: true
        in: query
        name: dateTo
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 15
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          The type of operation. Multiple values separated by a comma is authorized. May be:

          `cardTransaction`, `bankTransfer`, `instantBankTransfer`, `check`, `walletTransfer`, `bankDirectDebit`, `cardTopup`, `fees`, `creditNote`, `other`

          By default, Treezor returns all operation types when this field isn't defined.
        explode: true
        in: query
        name: operationType
        required: false
        schema:
          type: string
        style: form
      - description: |
          Pagination cursor, if you don't pass a cursor, result will start at the first page.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOperations_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Search Operations
      tags:
      - Operations
      x-accepts:
      - application/json
  /core-connect/sca/scawallets:
    get:
      description: "Retrieve the list of [SCA Wallets](/guide/strong-customer-authentication/sca-wallets.html)\
        \ for a given user."
      operationId: getSCAWallets
      parameters:
      - description: The unique identifier of the user.
        example: "123456"
        explode: true
        in: query
        name: userId
        required: true
        schema:
          type: string
        style: form
      - description: "Pagination cursor, if you don't pass a cursor, result will start\
          \ at the first page."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The list of wallet was successfully retrieved.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt:
        - read-only
      summary: Search SCA Wallets
      tags:
      - SCA Wallets
      x-accepts:
      - application/json
    post:
      description: "Create a new [SCA Wallet](/guide/strong-customer-authentication/sca-wallets.html)\
        \ manually."
      operationId: postScaWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postScaWallet_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The wallet was successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create SCA Wallet
      tags:
      - SCA Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/sca/scawallets/swap:
    post:
      description: Create an SCA Wallet while deleting the previous one as users should
        have only one device enrolled.
      operationId: swapSCAWallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/swapSCAWallets_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The list of wallet was successfully retrieved.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt:
        - read-write
      summary: Swap SCA Wallets
      tags:
      - SCA Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/sca/scawallets/{scaWalletId}:
    delete:
      description: Permanently delete an SCA Wallet.
      operationId: deleteScaWallet
      parameters:
      - description: The unique identifier of the SCA Wallet.
        explode: false
        in: path
        name: scaWalletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The wallet was successfully deleted.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt: []
      summary: Delete SCA Wallet
      tags:
      - SCA Wallets
      x-accepts:
      - application/json
    get:
      description: Retrieve an SCA Wallet by providing its `id`.
      operationId: getScaWallet
      parameters:
      - description: The unique identifier of the SCA Wallet.
        explode: false
        in: path
        name: scaWalletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The wallet was successfully retrieved.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: The wallet was not found.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt: []
      summary: Get SCA Wallet
      tags:
      - SCA Wallets
      x-accepts:
      - application/json
  /core-connect/sca/scawallets/{scaWalletId}/lock:
    put:
      description: |
        Locks an SCA Wallet so that none of the services it offers can be unlocked until it is unlocked.
      operationId: putScaWallet
      parameters:
      - description: The unique identifier of the SCA Wallet.
        explode: false
        in: path
        name: scaWalletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putScaWallet_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The wallet is locked.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: The lock reason field is required.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt: []
      summary: Lock SCA Wallet
      tags:
      - SCA Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/sca/scawallets/{scaWalletId}/unlock:
    put:
      description: Unlock an SCA Wallet.
      operationId: unlockScaWallet
      parameters:
      - description: The unique identifier of the SCA Wallet.
        explode: false
        in: path
        name: scaWalletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: The wallet is unlocked.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt: []
      summary: Unlock SCA Wallet
      tags:
      - SCA Wallets
      x-accepts:
      - application/json
  /core-connect/sca/scawallets/{scaWalletId}/resetPin:
    put:
      description: |
        This endpoint is used to reset the PIN code of a Wallet. <br> This web
        service should be used when a Customer has locked their Wallet after too
        many consecutive wrong PIN attempts. <br> Once the PIN has been reset,
        the Customer is able to set a new PIN via the mobile application,
        without having to enter the previous PIN.
      operationId: resetScaWalletPin
      parameters:
      - explode: false
        in: path
        name: scaWalletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaWalletObject'
          description: PIN has been reset.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt: []
      summary: Reset PIN
      tags:
      - SCA Wallets
      x-accepts:
      - application/json
  /core-connect/sca/setPasscode:
    put:
      description: |
        Change the passcode ([Web Native SCA](/guide/strong-customer-authentication/web-native.html)).
      operationId: setPasscode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setPasscode_request'
      responses:
        "204":
          description: Accepted
      security:
      - jwt:
        - read_write
      summary: Change Passcode
      tags:
      - SCA Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/sca/externalOperations:
    post:
      description: "Declare an SCA External Operation (i.e., a sensitive action that\
        \ was made outside of Treezor services)."
      operationId: postExtOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postExtOperation_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postExtOperation_200_response'
          description: The External Operation was successfully created.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create External Operation declaration
      tags:
      - SCA External Operations
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/sca/externalOperations/{externalOperationId}:
    put:
      description: "Modify an SCA External Operation declaration. \n\nThis feature\
        \ is only available for Per Operation operations, in other words for external\
        \ operations whose action name is: `externalMassPayoutOrderCreation`, \n`externalMassTransferOrderCreation`,\
        \ `externalScheduledPayoutOrder`, or `externalScheduledTransferOrder`.\n"
      operationId: putExtOperation
      parameters:
      - description: The unique identifier (uiid) of the ExternalOperation.
        explode: false
        in: path
        name: externalOperationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putExtOperation_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postExtOperation_200_response'
          description: The External Operation was successfully updated.
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getSCAWallets_default_response_inner'
                type: array
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update External Operation declaration
      tags:
      - SCA External Operations
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/payout-sddr:
    post:
      description: Simulate a received SEPA Direct Debit into one of your Wallet in
        Sandbox.
      operationId: SimulateSDDR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateSDDR_request'
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate SDDR Core
      tags:
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/sct-inst/payin:
    post:
      description: Simulate the reception of an instantaneous SEPA Credit Transfer
        into one of your Wallet in Sandbox.
      operationId: simulateSctInstReception
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simulateSctInstReception_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulateSctInstReception_201_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate SCTR Inst
      tags:
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/sct-inst/recall:
    post:
      description: Simulate a recall for an instantaneous SEPA Credit Transfer.
      operationId: simulateSctInstRecall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simulateSctInstRecall_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulateSctInstRecall_201_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate SCT Inst recall
      tags:
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/acquiring/payin:
    post:
      description: Simulate operations resulting from the card acquisition feature.
      operationId: SimulateAcquiringPayin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateAcquiringPayin_request'
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate Acquiring Payin
      tags:
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/operations:
    post:
      description: Create fake operations for a given Wallet.
      operationId: simulateOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simulateOperations_request'
      responses:
        "201":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate Operations
      tags:
      - Operations
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/cardtransactions:
    post:
      description: Simulate Card Transactions in Sandbox environment
      operationId: simulateCardTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simulateCardTransactions_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/simulateCardTransactions_201_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate Card Transactions
      tags:
      - Card Transactions
      - Simulation
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/statements/{walletId}/raw:
    get:
      description: |
        Retrieve the raw data (json) to build a Wallet account statement.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: getRawStatement
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: "The month of the statement (2 digits, e.g., `02`)"
        explode: true
        in: query
        name: month
        required: true
        schema:
          type: integer
        style: form
      - description: "The year of the statement (4 digits, e.g., `2023`)"
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRawStatement_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get JSON Account Statement
      tags:
      - Account Statements
      x-accepts:
      - application/json
  /core-connect/statements/{walletId}/computed:
    get:
      description: |
        Retrieve a Wallet account statement in pdf format.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: getPdfAccountStatement
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The month of the statement (2 digits leading with `0`)
        explode: true
        in: query
        name: month
        required: true
        schema:
          type: integer
        style: form
      - description: "The year of the statement (4 digits, e.g., `2022`)"
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getComputedWalletAccountDetail_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get PDF Account Statement
      tags:
      - Account Statements
      x-accepts:
      - application/json
  /v1/balances:
    get:
      description: Retrieve Balances for a given `walletId` or `userId`.
      operationId: getBalances
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Wallet whose Balance is to be retrieved.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the User whose Wallet Balances are to
          be retrieved.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBalances_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Balances
      tags:
      - Balances
      x-accepts:
      - application/json
  /v1/beneficiaries:
    get:
      description: Retrieve Beneficiary bank accounts that match search criteria.
      operationId: getBeneficiaries
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          You can filter the API response by using filter(s).

          Filterable fields are:
           - id
           - tag
           - userId
           - isActive (1 for yes, 0 for no)
           - nickName
           - address
           - iban (encrypted IBAN)
           - IbanInClear
           - bic
           - sepaCreditorIdentifier
           - usableForSct
           - createdDate
           - modifiedDate

          Filters should be separated by a ";". Example for 3 filters:
          FILTER1;FILTER2;FILTER3.

          A single filter has the following syntax : "fieldName criterion expression".

          Where:
           - fieldName: the name of a filterable field of this object.
           - expression: the values to be included or excluded (see the table below for more information)
           - criterion: a filter criterion.

          Here are the possible values for criterion:

           | Criteria |         Description    |                   Type                   | Expression Example |
           |----------|------------------------|------------------------------------------|--------------------|
           |     >    |      greater than      |            alphanumeric string           |         100        |
           |    >=    | greater or equal than  |            alphanumeric string           |         100        |
           |     <    |        less than       |            alphanumeric string           |         100        |
           |    <=    |   less or equal than   |            alphanumeric string           |         100        |
           |    !=    |      not equal to      |            alphanumeric string           |         100        |
           |   like   |          like          |            alphanumeric string           |         100        |
           |    in    |           in           | alphanumeric strings separated by commas |      100,30,25     |
           |    ==    |         equals         |            alphanumeric string           |         100        |
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Beneficiary.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: "Deprecated, use the `filter` parameter instead."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: "Deprecated, use the `filter` parameter instead."
        explode: true
        in: query
        name: iban
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Deprecated, use the `filter` parameter instead."
        explode: true
        in: query
        name: bic
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Deprecated, use the `filter` parameter instead."
        explode: true
        in: query
        name: nickName
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Deprecated, use the `filter` parameter instead."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\n\
          value : _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Beneficiaries
      tags:
      - Beneficiaries
      x-accepts:
      - application/json
    post:
      description: |
        Create a new benefeciary bank account.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postBeneficiary
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBeneficiary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Beneficiary
      tags:
      - Beneficiaries
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/beneficiaries/{beneficiaryId}:
    get:
      description: Retrieve a Beneficiary bank account based on its `id`.
      operationId: getBeneficiary
      parameters:
      - description: The unique identifier of the Beneficiary.
        explode: false
        in: path
        name: beneficiaryId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Beneficiary
      tags:
      - Beneficiaries
      x-accepts:
      - application/json
    put:
      description: |
        Modify a benefeciary bank account information.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: putBeneficiary
      parameters:
      - description: The unique identifier of the Beneficiary.
        explode: false
        in: path
        name: beneficiaryId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putBeneficiary_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Beneficiary
      tags:
      - Beneficiaries
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/businesssearchs:
    get:
      description: |
        The search endpoint returns some business information.
      operationId: searchBusiness
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: |
          Business exact name. Exclusive with `nameMatchBeginning` and `nameClosestKeywords`.
        explode: true
        in: query
        name: nameExact
        required: false
        schema:
          type: string
        style: form
      - description: |
          Business names begin with. Exclusive with `nameExact` and `nameClosestKeywords`.
        explode: true
        in: query
        name: nameMatchBeginning
        required: false
        schema:
          type: string
        style: form
      - description: |
          Business names closed to keywords. Exclusive with `nameExact` and `nameMatchBeginning`.
        explode: true
        in: query
        name: nameClosestKeywords
        required: false
        schema:
          type: string
        style: form
      - description: Business registration number.
        explode: true
        in: query
        name: registrationNumber
        required: false
        schema:
          type: string
        style: form
      - description: Business VAT number.
        explode: true
        in: query
        name: vatNumber
        required: false
        schema:
          type: string
        style: form
      - description: Business phone number.
        explode: true
        in: query
        name: phoneNumber
        required: false
        schema:
          type: string
        style: form
      - description: Business' street address.
        explode: true
        in: query
        name: addressStreet
        required: false
        schema:
          type: string
        style: form
      - description: Business' city address.
        explode: true
        in: query
        name: addressCity
        required: false
        schema:
          type: string
        style: form
      - description: Business' postal code address.
        explode: true
        in: query
        name: addressPostalCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/searchBusiness_200_response_inner'
                type: array
          description: A business search response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/searchBusiness_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Businesses
      tags:
      - Businesses
      x-accepts:
      - '*/*'
  /v1/businessinformations:
    get:
      description: |
        The get business information endpoint returns all already known business information. End user will have then to verify/correct it.
      operationId: getBusinessInfo
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: External unique business id. As given in businesssearch reponse.
        explode: true
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      - description: Unique business registration number.
        explode: true
        in: query
        name: registrationNumber
        required: false
        schema:
          type: string
        style: form
      - description: Unique business VAT number.
        explode: true
        in: query
        name: vatNumber
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getBusinessInfo_200_response'
          description: A business information response
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/searchBusiness_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Business Information
      tags:
      - Businesses
      x-accepts:
      - '*/*'
  /v1/cards:
    get:
      description: Retrieve Cards based on search criteria.
      operationId: getCards
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Card.
        explode: true
        in: query
        name: cardId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the cardholder
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: Embossed name of the card
        explode: true
        in: query
        name: embossedName
        required: false
        schema:
          type: string
        style: form
      - description: Public token of the card
        explode: true
        in: query
        name: publicToken
        required: false
        schema:
          type: string
        style: form
      - description: "Permissions group of the card. \n<br />\nSee [available values\
          \ on the documentation](/guide/cards/restrictions-limits.html#permission-groups-permsgroup)\n"
        explode: true
        in: query
        name: permsGroup
        required: false
        schema:
          type: string
        style: form
      - description: |
          Whether or not the card is a Physical Card. Values can be:
            * `1` – Physical card
            * `0` – Virtual card
        explode: true
        in: query
        name: isPhysical
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be:
            * `1` – Physical card converted from a virtual card
            * `0` – Not converted, virtual card only
        explode: true
        in: query
        name: isConverted
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The Status of the card, indicating whether it is locked, lost, or destroyed for instance.
          While this field is an integer, it returns a plaintext value. See the full list of `lockStatus`in the [Block a Card](/guide/cards/modification.html#status) article.
        explode: true
        in: query
        name: lockStatus
        required: false
        schema:
          type: integer
        style: form
      - description: mccRestrictionGroupId of the card
        explode: true
        in: query
        name: mccRestrictionGroupId
        required: false
        schema:
          type: integer
        style: form
      - description: merchantRestrictionGroupId of the card
        explode: true
        in: query
        name: merchantRestrictionGroupId
        required: false
        schema:
          type: integer
        style: form
      - description: countryRestrictionGroupId of the card
        explode: true
        in: query
        name: countryRestrictionGroupId
        required: false
        schema:
          type: integer
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\n\
          value : _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Cards
      tags:
      - Cards
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}:
    get:
      description: Retrieve a Card based on its `id`.
      operationId: getCard
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Card
      tags:
      - Cards
      x-accepts:
      - '*/*'
      - application/json
    put:
      description: |
        Update the restriction groups of the card, as well as the `cardTag`.
      operationId: putCard
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putCard_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/CreateVirtual:
    post:
      description: |
        Create a new virtual card. To use a card, it must be activated (`/v1/cards/{cardId}/Activate`).

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postCardVirtual
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCardVirtual_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Virtual Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/RequestPhysical:
    post:
      description: |
        Create a new physical card. To use a card, it must be activated (`/cards/{id}/Activate`).

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postCardPhysical
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCardVirtual_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Physical Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/Register3DS:
    post:
      description: |
        Register a card to 3D secure service. The user's mobile number must begin with `+`, or `00`, and the country dialing code.
      operationId: post3ds
      parameters:
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post3ds_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Register 3D secure
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cardimages:
    get:
      description: |
        Retrieve a virtual card image.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: getCardImage
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the virtual card.
        explode: true
        in: query
        name: cardId
        required: true
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCardImage_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Card Image
      tags:
      - Cards
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/Activate:
    put:
      description: |
        Activate the Card (updating the `isLive` attribute to `1`). A Card must be activated to be used.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: activateCard
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessToken
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activateCard_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Activate Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardToken}/public-token-activation:
    put:
      description: |
        Activate the Card (updating the `isLive` attribute to `1`). Ideal for end-user oriented action. A Card must be activated to be used.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: activateCardToken
      parameters:
      - description: The `publicToken` of the Card.
        explode: false
        in: path
        name: cardToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Activate Card Public Token
      tags:
      - Cards
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/Assign:
    put:
      description: |
        Assign the Card to another User or Wallet.
      operationId: reassignCard
      parameters:
      - description: The unique identifier of the Card to reassign.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessToken
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reassignCard_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Reassign Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/ChangePIN:
    put:
      description: |
        Change the Card PIN code knowing the current one.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: changePin
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePin_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Change Card PIN
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/ConvertVirtual:
    put:
      description: |
        Convert a virtual Card into a physical one. The converted card will be both virtual and physical.
      operationId: convertVirtual
      parameters:
      - description: The unique identifier of the Card to convert.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/convertVirtual_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Convert virtual card to physical
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/Limits:
    put:
      description: |
        Modify the Card limits.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: putLimits
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLimits_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Card Limits
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/LockUnlock:
    put:
      description: |
        Block or unblock a card.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: updateBlockStatus
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateBlockStatus_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Card Lock Status
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/Options:
    put:
      description: |
        Modify the Card permissions group.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: cardOptions
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardOptions_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Card Options
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/Regenerate:
    put:
      description: "Recreate the card image if the card is unlocked. \n\nUseful when\
        \ changing card design, company name, or when retrieving the image results\
        \ in a 404.\n"
      operationId: regenerateCard
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/convertVirtual_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Regenerate Card
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/setPIN:
    put:
      description: |
        Overwrite the Card PIN code.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: setPin
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setPin_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Set Card PIN
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/UnblockPIN:
    put:
      description: |
        Unblock the Card PIN code.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: unblockPin
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/convertVirtual_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Unblock Card PIN
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/cards/{cardId}/unblockcvc2:
    put:
      description: |
        Unblock a Card whose CVC2 is locked.
      operationId: unblockCvc
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: successfully unblocked.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Unblock Card CVC2
      tags:
      - Cards
      x-accepts:
      - application/json
  /v1/cards/{cardId}/authentication-methods:
    get:
      description: |
        Retrieve the authentication methods of a Card.
      operationId: getAuthMethods
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthMethods_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Authenticaton Methods
      tags:
      - Card 3DSecure Enrollment (SCA)
      x-accepts:
      - application/json
    post:
      description: |
        Define the authentication method of a Card.
      operationId: postAuthMethods
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postAuthMethods_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthMethods_200_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Authenticaton Methods
      tags:
      - Card 3DSecure Enrollment (SCA)
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/cards/{cardId}/authentication-methods/{methodId}:
    delete:
      description: Delete the authentication method of a Card. Only available for
        OOB method.
      operationId: deleteAuthMethods
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the authentication method.
        explode: false
        in: path
        name: methodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: The auth method has been removed
        "400":
          content: {}
          description: Unknown card ID
        "404":
          content: {}
          description: Auth method not found
        "500":
          content: {}
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Delete Authentication Method
      tags:
      - Card 3DSecure Enrollment (SCA)
      x-accepts:
      - application/json
    get:
      description: Retrieve details regarding the authentication method of a Card
      operationId: getAuthMethodsDetails
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the authentication method.
        explode: false
        in: path
        name: methodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        "400":
          content: {}
          description: Unknown card ID
        "404":
          content: {}
          description: Auth method not found
        "500":
          content: {}
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Authentication Method
      tags:
      - Card 3DSecure Enrollment (SCA)
      x-accepts:
      - application/json
  /v1/cards/{cardId}/renewalDetails:
    get:
      description: |
        Retrieve the Card `renewalType`.
      operationId: getRenewalDetails
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRenewalDetails_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - admin
        - legal
      summary: Get Renewal Details
      tags:
      - Cards
      x-accepts:
      - application/json
    put:
      description: |
        Update the Card `renewalType`.
      operationId: updateRenewalDetails
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRenewalDetails_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRenewalDetails_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - admin
        - legal
      summary: Update Renewal Details
      tags:
      - Cards
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/cards/{cardId}/renew:
    put:
      description: |
        Renew a Card manually.
      operationId: putRenew
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - admin
        - legal
      summary: Renew Card
      tags:
      - Cards
      x-accepts:
      - '*/*'
      - application/json
  /v1/{cardId}/digitalizedCards:
    get:
      description: |
        Retrieve the list of digitalized cards for a given `cardId`.
      operationId: getDigitalized
      parameters:
      - description: The unique identifier of the virtual or physical card.
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsListDigitalizedCardResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsBadRequest'
          description: one of input is invalid or missing.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsUnauthorizedError'
          description: user is not authorized to do this operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsNotFound'
          description: digitalized card does not exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsInternalError'
          description: internal error.
      security:
      - jwt: []
      summary: Get Digitalized Cards
      tags:
      - Digitalized Cards
      x-accepts:
      - application/json
  /v1/digitalizedCard/{id}:
    delete:
      description: |
        Deactivate a payment Token.
      operationId: deleteDigitalized
      parameters:
      - description: |
          The unique identifier of a digitalized card.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The reason code is required only if the card is on Mastercard System. Possible values are:

          | Reason code | Description |
          | :----: | ----------- |
          | L | Cardholder confirmed token device lost |
          | S | Cardholder confirmed token device stolen |
          | F | Cardholder reported token device found or not stolen |
          | T | Issuer or cardholder confirmed fraudulent token transactions |
          | C | Account closed |
          | D | Issuer consumer deleted |
          | Z | Other |
        explode: true
        in: query
        name: reasonCode
        required: true
        schema:
          enum:
          - L
          - S
          - F
          - T
          - C
          - D
          - Z
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsDeactivateDigitalizedCardResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsBadRequest'
          description: "one of input is invalid or missing, or else card is not unlock."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsUnauthorizedError'
          description: user is not authorized to do this operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsNotFound'
          description: digitalized card does not exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsInternalError'
          description: internal error.
      security:
      - jwt: []
      summary: Deactivate Payment Token
      tags:
      - Digitalized Cards
      x-accepts:
      - application/json
    get:
      description: Retrieve a payment token.
      operationId: getPaymentToken
      parameters:
      - description: |
          The unique identifier of a digitalized card.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsGetDigitalizedCardResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsBadRequest'
          description: one of input is invalid or missing.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsUnauthorizedError'
          description: user is not authorized to do this operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsNotFound'
          description: digitalized card does not exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsInternalError'
          description: internal error.
      security:
      - jwt: []
      summary: Get Payment Token
      tags:
      - Digitalized Cards
      x-accepts:
      - application/json
    put:
      description: |
        Update the status of a payment Token.
      operationId: putDigitalized
      parameters:
      - description: |
          The unique identifier of a digitalized card.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putDigitalized_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsPutDigitalizedCardResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsBadRequest'
          description: "one of input is invalid or missing, or else card is not unlock."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsUnauthorizedError'
          description: user is not authorized to do this operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsNotFound'
          description: digitalized card does not exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalizedCardsInternalError'
          description: internal error.
      security:
      - jwt: []
      summary: Update Payment Token Status
      tags:
      - Digitalized Cards
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/cardtransactions:
    get:
      description: |
        Retrieve Card Transactions based at least on one of the following intputs: `cardId`, `paymentId`, `publicToken`, `walletId`. This is the preferred request for end-user-oriented usage.
      operationId: readCardTransaction
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Card Transaction.
        explode: true
        in: query
        name: cardtransactionId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Card.
        explode: true
        in: query
        name: cardId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Wallet the card is attached to.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: The Merchant's Id.
        explode: true
        in: query
        name: merchantId
        required: false
        schema:
          type: string
        style: form
      - description: The public token of the Card.
        explode: true
        in: query
        name: publicToken
        required: false
        schema:
          type: string
        style: form
      - description: The identifier of the payment.
        explode: true
        in: query
        name: paymentId
        required: false
        schema:
          type: integer
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\
          \ value: _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readCardTransaction_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Card Transactions
      tags:
      - Card Transactions
      x-accepts:
      - application/json
  /v1/cardtransactions/{cardtransactionId}:
    get:
      description: Retrieve a Card Transaction based on its `id`.
      operationId: getCardtransaction
      parameters:
      - description: The unique identifier of the Card Transaction.
        explode: false
        in: path
        name: cardtransactionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCardtransaction_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Card Transaction
      tags:
      - Card Transactions
      x-accepts:
      - application/json
  /v1/countryRestrictionGroups:
    get:
      description: Retrive country restriction groups that match search criteria.
      operationId: getCountryRestrictionGroups
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          You can filter the API response by using filter(s).
          Filterable fields are:
            - id
            - name
            - isWhitelist
            - status
            - startDate
            - createdDate

          Filters should be separated by a ";". Example for 3 filters: FILTER1;FILTER2;FILTER3.

          A single filter has the following syntax: "fieldName criterion expression", where:
            - fieldName: the name of a filterable field of this object.
            - expression: the values to be included or excluded (see the table below for more information)
            - criterion: a filter criterion.

          Here are the possible values for criterion:

          | Criteria |         Description    |                   Type                   | Expression Example |
          |----------|------------------------|------------------------------------------|--------------------|
          |     >    |      greater than      |            alphanumeric string           |         100        |
          |    >=    | greater or equal than  |            alphanumeric string           |         100        |
          |     <    |        less than       |            alphanumeric string           |         100        |
          |    <=    |   less or equal than   |            alphanumeric string           |         100        |
          |    !=    |      not equal to      |            alphanumeric string           |         100        |
          |   like   |          like          |            alphanumeric string           |         100        |
          |    in    |           in           | alphanumeric strings separated by commas |      100,30,25     |
          |    ==    |         equals         |            alphanumeric string           |         100        |
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The transaction element you want to sort the list with.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdDate
          type: string
        style: form
      - description: |
          The order you want to sort the list.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountryRestrictionGroups_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Country Restriction Groups
      tags:
      - Country Restriction Groups
      x-accepts:
      - application/json
    post:
      description: Create a new country restriction group.
      operationId: postCountryRestrictionGroup
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCountryRestrictionGroup_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postCountryRestrictionGroup_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Country Restriction Group
      tags:
      - Country Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/countryRestrictionGroups/{id}:
    delete:
      description: Cancel a country restriction group.
      operationId: deleteCountryRestrictionGroups
      parameters:
      - description: The unique identifier of the Country Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountryRestrictionGroupsId_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Cancel Country Restriction Group
      tags:
      - Country Restriction Groups
      x-accepts:
      - application/json
    get:
      description: Retrive a Country Restriction Group based on its `id`.
      operationId: getCountryRestrictionGroupsId
      parameters:
      - description: The unique identifier of the Country Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountryRestrictionGroupsId_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Country Restriction Group
      tags:
      - Country Restriction Groups
      x-accepts:
      - application/json
    put:
      description: Edit a country restriction group.
      operationId: putCountryRestrictionGroups
      parameters:
      - description: The unique identifier of the Country Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putCountryRestrictionGroups_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putCountryRestrictionGroups_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Country Restriction Group
      tags:
      - Country Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/documents:
    get:
      description: Retrieve Documents based on search criteria.
      operationId: getDocuments
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Document.
        explode: true
        in: query
        name: documentId
        required: false
        schema:
          type: integer
        style: form
      - description: "Custom attribute to use as you see fit. Learn more in the [Object\
          \ tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n<br>Max\
          \ length: 250 characters \n<br>Format: hc characters and `/` `!` `-` `_`\
          \ `.` `*` `'` `(` `)`\n"
        explode: true
        in: query
        name: documentTag
        required: false
        schema:
          type: string
        style: form
      - description: |
          The status of the document.
        explode: true
        in: query
        name: documentStatus
        required: false
        schema:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        style: form
      - description: Document type id.
        explode: true
        in: query
        name: documentTypeId
        required: false
        schema:
          type: integer
        style: form
      - description: The type of the Document.
        explode: true
        in: query
        name: documentType
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the user the Document belongs to.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the user the Document belongs to.
        explode: true
        in: query
        name: userName
        required: false
        schema:
          type: string
        style: form
      - description: The email of the user the Document belongs to.
        explode: true
        in: query
        name: userEmail
        required: false
        schema:
          type: string
        style: form
      - description: The name of the Document.
        explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      - description: The size of the Document.
        explode: true
        in: query
        name: fileSize
        required: false
        schema:
          type: integer
        style: form
      - description: The file type of the Document.
        explode: true
        in: query
        name: fileType
        required: false
        schema:
          type: integer
        style: form
      - description: is agent field.
        explode: true
        in: query
        name: isAgent
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The transaction element you want to sort the list with.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdDate
          type: string
        style: form
      - description: |
          The order you want to sort the list.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Search Documents
      tags:
      - User Documents
      x-accepts:
      - application/json
    post:
      description: Create a Document.
      operationId: createDocuments
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDocuments_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Document
      tags:
      - User Documents
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/documents/{documentId}:
    delete:
      description: Remove a document.
      operationId: deleteDocument
      parameters:
      - description: The unique identifier of the Document.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Delete Document
      tags:
      - User Documents
      x-accepts:
      - application/json
    get:
      description: Retrieve a Document using its `id`.
      operationId: getDocument
      parameters:
      - description: The unique identifier of the Document.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get Document
      tags:
      - User Documents
      x-accepts:
      - application/json
    put:
      description: Change the `name` of a Document.
      operationId: putDocument
      parameters:
      - description: The unique identifier of the Document.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putDocument_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update Document
      tags:
      - User Documents
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/documents/{documentId}/download:
    get:
      description: |
        Retrieve a Document download URL. You may read [the dedicated documentation for this feature](/guide/user-verification/documents.html#download).
      operationId: getDocumentDownloadUrl
      parameters:
      - description: The unique identifier of the Document.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDocumentDownloadUrl_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get Document Download URL
      tags:
      - User Documents
      x-accepts:
      - application/json
  /v1/issuerInitiatedDigitizationDatas:
    post:
      description: |
        Create a new issuerInitiatedDigitizationData request

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: tavRequestPOST
      parameters:
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tavRequestPOST_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tavRequestPOST_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Request issuerInitiatedDigitizationData
      tags:
      - Digitalized Cards
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mandates:
    get:
      description: Retrieve Mandates that match search criteria.
      operationId: getMandates
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Mandate.
        explode: true
        in: query
        name: mandateId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the User who initiates the Mandate request.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Unique Mandate Reference (UMR) of the searched mandate. It is a
          sequence of characters that ensures the mandate traceability. UMR
          coupled with SCI allows to uniquely identify a creditor and a
          contract for any mandate. It is provided at the mandate creation.
        explode: true
        in: query
        name: uniqueMandateReference
        required: false
        schema:
          type: string
        style: form
      - description: |
          The status of the Mandate.
        explode: true
        in: query
        name: mandateStatus
        required: false
        schema:
          enum:
          - CANCELED
          - PENDING
          - VALIDATED
          type: string
        style: form
      - description: |
          You can filter the API response by using filter(s).

          Filters should be separated by a ";". Example for 3 filters: `FILTER1;FILTER2;FILTER3`

          A single filter has the following syntax : "fieldName criterionexpression".

          Where:
          * fieldName – the name of a filterable field of this object.
          * expression – the values to be included or excluded (see the table below for more information)
          * criterion – a filter criterion.

          Here are the possible values for criterion:

           | Criteria |         Description    |                   Type                   | Expression Example |
           |----------|------------------------|------------------------------------------|--------------------|
           |     >    |      greater than      |            alphanumeric string           |         100        |
           |    >=    | greater or equal than  |            alphanumeric string           |         100        |
           |     <    |        less than       |            alphanumeric string           |         100        |
           |    <=    |   less or equal than   |            alphanumeric string           |         100        |
           |    !=    |      not equal to      |            alphanumeric string           |         100        |
           |   like   |          like          |            alphanumeric string           |         100        |
           |    in    |           in           | alphanumeric strings separated by commas |      100,30,25     |
           |    ==    |         equals         |            alphanumeric string           |         100        |
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Search Mandates
      tags:
      - Mandates
      x-accepts:
      - application/json
    post:
      description: |
        Create a new mandate.
      operationId: postMandates
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postMandates_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Mandate
      tags:
      - Mandates
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mandates/{mandateId}:
    delete:
      description: Change the Mandate status to `CANCELED`.
      operationId: deleteMandate
      parameters:
      - description: The unique identifier of the Mandate.
        explode: false
        in: path
        name: mandateId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          The origin of the request for revoking the Mandate.
        explode: true
        in: query
        name: origin
        required: true
        schema:
          enum:
          - CREDITOR
          - DEBITOR
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteMandate_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Revoke Mandate
      tags:
      - Mandates
      x-accepts:
      - application/json
    get:
      description: Retrieve a Mandate based on its `id`.
      operationId: getMandate
      parameters:
      - description: The unique identifier of the Mandate.
        explode: false
        in: path
        name: mandateId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get Mandate
      tags:
      - Mandates
      x-accepts:
      - application/json
  /v1/mccRestrictionGroups:
    get:
      description: Retrieve MCC Restriction Groups that match search criteria.
      operationId: getMccRestrictionGroups
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          You can filter the API response by using filter(s).
          Filterable fields are:
            - id
            - name
            - isWhitelist
            - status
            - startDate
            - createdDate

          Filters should be separated by a ";". Example for 3 filters: FILTER1;FILTER2;FILTER3.

          A single filter has the following syntax: "fieldName criterion expression", where:
          * fieldName: the name of a filterable field of this object.
          * expression: the values to be included or excluded (see table below)
          * criterion: a filter criterion.

          Here are the possible values for criterion:

            | Criteria |         Description    |                   Type                   | Expression Example |
            |----------|------------------------|------------------------------------------|--------------------|
            |     >    |      greater than      |            alphanumeric string           |         100        |
            |    >=    | greater or equal than  |            alphanumeric string           |         100        |
            |     <    |        less than       |            alphanumeric string           |         100        |
            |    <=    |   less or equal than   |            alphanumeric string           |         100        |
            |    !=    |      not equal to      |            alphanumeric string           |         100        |
            |   like   |          like          |            alphanumeric string           |         100        |
            |    in    |           in           | alphanumeric strings separated by commas |      100,30,25     |
            |    ==    |         equals         |            alphanumeric string           |         100        |
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\n\
          value : _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMccRestrictionGroups_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Search MCC Restriction Groups
      tags:
      - MCC Restriction Groups
      x-accepts:
      - application/json
    post:
      description: Create a new Merchant Category Code (MCC) restriction group.
      operationId: postMccRestrictionGroup
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postMccRestrictionGroup_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postMccRestrictionGroup_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create MCC Restriction Group
      tags:
      - MCC Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mccRestrictionGroups/{id}:
    delete:
      description: Cancel a MCC restriction group.
      operationId: deleteMccRestrictionGroups
      parameters:
      - description: The unique identifier of the MCC restriction Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteMccRestrictionGroups_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Cancel MCC Restriction Group
      tags:
      - MCC Restriction Groups
      x-accepts:
      - application/json
    get:
      description: Retrieve a MCC Group based on its `id`.
      operationId: getMccRestrictionGroupsId
      parameters:
      - description: The unique identifier of the MCC Restriction Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMccRestrictionGroupsId_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get MCC Restriction Group
      tags:
      - MCC Restriction Groups
      x-accepts:
      - application/json
    put:
      description: Edit a MCC Restriction group.
      operationId: putMccRestrictionGroups
      parameters:
      - description: The unique identifier of the MCC Restriction Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putMccRestrictionGroups_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putMccRestrictionGroups_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update MCC Restriction Group
      tags:
      - MCC Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/merchantIdRestrictionGroups:
    get:
      description: Retrieve Merchant ID Restriction Groups that match search criteria.
      operationId: getMerchantIdRestrictionGroup
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          You can filter the API response by using filter(s).
          Filterable fields are:
            - id
            - name
            - isWhitelist
            - status
            - startDate
            - createdDate

          Filters should be separated by a ";". Example for 3 filters: FILTER1;FILTER2;FILTER3.

          A single filter has the following syntax: "fieldName criterion expression", where:
          - fieldName: the name of a filterable field of this object.
          - expression: the values to be included or excluded (see the table below for more information)
          - criterion: a filter criterion.

          Here are the possible values for criterion:

            | Criteria |         Description    |                   Type                   | Expression Example |
            |----------|------------------------|------------------------------------------|--------------------|
            |     >    |      greater than      |            alphanumeric string           |         100        |
            |    >=    | greater or equal than  |            alphanumeric string           |         100        |
            |     <    |        less than       |            alphanumeric string           |         100        |
            |    <=    |   less or equal than   |            alphanumeric string           |         100        |
            |    !=    |      not equal to      |            alphanumeric string           |         100        |
            |   like   |          like          |            alphanumeric string           |         100        |
            |    in    |           in           | alphanumeric strings separated by commas |      100,30,25     |
            |    ==    |         equals         |            alphanumeric string           |         100        |
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\
          \ value: _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Search MID Restriction Groups
      tags:
      - Merchant ID Restriction Groups
      x-accepts:
      - application/json
    post:
      description: Create a new Merchant ID restriction group.
      operationId: postMerchantIdRestrictionGroup
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postMerchantIdRestrictionGroup_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create MID Restriction Group
      tags:
      - Merchant ID Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/merchantIdRestrictionGroup/{id}:
    delete:
      description: Cancel a merchant id restriction group.
      operationId: deleteMerchantIdRestrictionGroups
      parameters:
      - description: The unique identifier of the Merchant ID restriction group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: List of the object properties you want to pick up.
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Cancel MID Restriction Group
      tags:
      - Merchant ID Restriction Groups
      x-accepts:
      - application/json
    put:
      description: Deprecated
      operationId: putMerchantIdRestrictionGroups
      parameters:
      - description: The unique identifier of the Merchant Id restriction group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putMerchantIdRestrictionGroups_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: (DEPRECATED) Update MID Restriction Group
      tags:
      - Merchant ID Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/merchantIdRestrictionGroups/{id}/DeltaUpdate:
    put:
      description: Update the list of Merchant Ids for a MID Restriction Group.
      operationId: put-merchandidrestrictiongroups-deltaupdate
      parameters:
      - description: The unique identifier of the Merchant ID restriction group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_merchandidrestrictiongroups_deltaupdate_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update MID Restriction Group
      tags:
      - Merchant ID Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/merchantIdRestrictionGroups/{id}/PresenceCheck:
    put:
      description: Check if Merchant IDs list for a restriction group.
      operationId: put-midrestrictiongroups
      parameters:
      - description: The unique identifier of the Merchant ID restriction group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_midrestrictiongroups_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIdGroupObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Check the presence of merchants IDs list for a restriction group
      tags:
      - Merchant ID Restriction Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/payins:
    get:
      description: Get payins that match search criteria.
      operationId: getPayins
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the payin.
        explode: true
        in: query
        name: payinId
        required: false
        schema:
          type: integer
        style: form
      - description: Payin's wallet id.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: Client custom data.
        explode: true
        in: query
        name: payinTag
        required: false
        schema:
          type: string
        style: form
      - description: The status of the payin.
        explode: true
        in: query
        name: payinStatus
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the User who performed the operation
          (debited).
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      - description: The name of the User who performed the operation (debited).
        explode: true
        in: query
        name: userName
        required: false
        schema:
          type: string
        style: form
      - description: The email of the User who performed the operation (debited).
        explode: true
        in: query
        name: userEmail
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the User who received the operation
          (credited).
        explode: true
        in: query
        name: beneficiaryUserId
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the credited Wallet.
        explode: true
        in: query
        name: eventAlias
        required: false
        schema:
          type: string
        style: form
      - description: Payin's wallet type id.
        explode: true
        in: query
        name: walletTypeId
        required: false
        schema:
          type: integer
        style: form
      - description: Payin's payment method id.
        explode: true
        in: query
        name: paymentMethodId
        required: false
        schema:
          enum:
          - "20"
          - "21"
          - "23"
          - "24"
          - "25"
          - "26"
          - "27"
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Payins
      tags:
      - Payins
      x-accepts:
      - application/json
    post:
      description: Create a new payin.
      operationId: postPayin
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPayin_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Payin
      tags:
      - Payins
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/payins/{payinId}:
    delete:
      description: |
        Cancels a Payin. This endpoint is only available for the [Check cashing](/guide/cheques/introduction.html) feature, prior to the check reception at the treatment center.
      operationId: deletePayin
      parameters:
      - description: The unique identifier of the payin.
        explode: false
        in: path
        name: payinId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Delete Payin
      tags:
      - Payins
      x-accepts:
      - application/json
    get:
      description: Retrieve a payin by its id.
      operationId: getPayin
      parameters:
      - description: The unique identifier of the payin.
        explode: false
        in: path
        name: payinId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Payin
      tags:
      - Payins
      x-accepts:
      - application/json
  /v1/payinrefunds:
    get:
      description: |
        Search for payin refunds. These can relate to [Acquiring](/guide/acquiring/legacy-v1.html#refunds) or [SEPA recalls](/guide/transfers/sepa-recalls.html).
      operationId: getPayinrefunds
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the payin.
        explode: true
        in: query
        name: payinId
        required: false
        schema:
          type: integer
        style: form
      - description: Payinrefund's id.
        explode: true
        in: query
        name: payinrefundId
        required: false
        schema:
          type: integer
        style: form
      - description: Custom data.
        explode: true
        in: query
        name: payinrefundTag
        required: false
        schema:
          type: string
        style: form
      - description: The status of the payin refund.
        explode: true
        in: query
        name: payinrefundStatus
        required: false
        schema:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        style: form
      - description: The unique identifier of the Wallet to refund.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The date of the payin refund. Format: YYYY-MM-DD
        explode: true
        in: query
        name: payinrefundDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier of the User who made the refund.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The amount of the refund.
        explode: true
        in: query
        name: amount
        required: false
        schema:
          type: string
        style: form
      - description: |
          The currency of the amount. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Pagination cursor, if you don't pass a cursor, result will start at the first page.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: |
          The number of items per page, only available on /v1/ endpoints.
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\
          \ value: _createdDate_. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPayinrefunds_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Payin Refunds
      tags:
      - Payin Refunds
      x-accepts:
      - application/json
  /v1/payinrefunds/{id}:
    get:
      description: Get a payin refund.
      operationId: getPayinrefund
      parameters:
      - description: The unique identifier of the payin refund.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPayinrefunds_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Payin Refund
      tags:
      - Payin Refunds
      x-accepts:
      - application/json
  /v1/payouts:
    get:
      description: |
        Retrieve Payouts that match search criteria. The request must contain at least one of the following inputs: `userId`, `walletId`.
      operationId: getPayouts
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the payout.
        explode: true
        in: query
        name: payoutId
        required: false
        schema:
          type: integer
        style: form
      - description: "Custom attribute to use as you see fit. Learn more in the [Object\
          \ tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n<br>Max\
          \ length: 250 characters \n<br>Format: hc characters and `/` `!` `-` `_`\
          \ `.` `*` `'` `(` `)`\n"
        explode: true
        in: query
        name: payoutTag
        required: false
        schema:
          type: string
        style: form
      - description: |
          The status of the payout.
        explode: true
        in: query
        name: payoutStatus
        required: false
        schema:
          enum:
          - CANCELED
          - PENDING
          - VALIDATED
          type: string
        style: form
      - description: |
          Payout type's id:

          | ID | Description |
          |-----|-----|
          | 1 | Credit Transfer |
          | 2 | Direct Debit |
          | 3 | Sepa Instant Credit Transfer |
        explode: true
        in: query
        name: payoutTypeId
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          type: integer
        style: form
      - description: The unique identifier of the payout Wallet.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the payout User.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Payout execution date. Format: YYYY-MM-DD HH:MM:SS
        explode: true
        in: query
        name: payoutDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: bankaccountId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the payout Beneficiary.
        explode: true
        in: query
        name: beneficiaryId
        required: false
        schema:
          type: integer
        style: form
      - description: The amount of the payout.
        explode: true
        in: query
        name: amount
        required: false
        schema:
          type: string
        style: form
      - description: |
          The currency of the amount. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: "Pagination cursor, if you don't pass a cursor, result will start\
          \ at the first page."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPayouts_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Payouts
      tags:
      - Payouts
      x-accepts:
      - application/json
    post:
      description: |
        Create a new payout.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postPayout
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPayout_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postPayout_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Payout
      tags:
      - Payouts
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/payouts/{payoutId}:
    delete:
      description: |
        Change payout status to `CANCELED`. A `VALIDATED` payout can't be canceled.
      operationId: deletePayout
      parameters:
      - description: The unique identifier of the Payout.
        explode: false
        in: path
        name: payoutId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postPayout_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Cancel Payout
      tags:
      - Payouts
      x-accepts:
      - application/json
    get:
      description: Retrieve a given Payout.
      operationId: getPayout
      parameters:
      - description: The unique identifier of the Payout.
        explode: false
        in: path
        name: payoutId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postPayout_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Payout
      tags:
      - Payouts
      x-accepts:
      - application/json
  /v1/payoutRefunds:
    post:
      description: "Create a Payout Refund. \nAs of today, this feature is only available\
        \ for [emitting SCTE Inst Recalls](/guide/transfers/sepa-recalls.html#emitting-scte-inst-recalls).\n\
        Otherwise, you need to [open a ticket](https://treezor.zendesk.com/hc/en-us/articles/4402731372306-How-to-create-a-Zendesk-ticket)\
        \ to request payout recalls.\n"
      operationId: postPayoutRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPayoutRefund_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postPayoutRefund_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      summary: Create Payout Refund
      tags:
      - Payout Refunds
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/payoutRefunds/{payoutRefundId}:
    get:
      description: |
        Retrieve a given Payout Refund with its `id`.
      operationId: getPayoutRefund
      parameters:
      - description: The unique identifier of the payout refund.
        explode: false
        in: path
        name: payoutRefundId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postPayoutRefund_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      summary: Get Payout Refund
      tags:
      - Payout Refunds
      x-accepts:
      - application/json
  /v1/recallRs:
    get:
      description: Retrieve recalls or RROs
      operationId: getRecallRs
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          The number of items per page, only available on /v1/ endpoints
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The page number, only available on /v1/ endpoints
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          List of available filters:
          - id
          - recallRSepaMessageId
          - cxlId
          - statusId
          - reasonCode
          - clientId
          - userId
          - walletId
          - sctrId
          - receivedDate
          - frozenWalletFollowingRecallr
          - createdDate
          - inError
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRecallRs_200_response'
          description: OK
        "401":
          content: {}
          description: Unauthorized credentials
        "403":
          content: {}
          description: Forbidden action
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Recalls or RRO
      tags:
      - Recalls
      x-accepts:
      - application/json
  /v1/recallRs/{recallId}:
    get:
      description: Retrieve a given recall or RRO.
      operationId: getRecallR
      parameters:
      - description: |
          The unique identifier of the recall.
        explode: false
        in: path
        name: recallId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          The number of items per page, only available on /v1/ endpoints
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The page number, only available on /v1/ endpoints
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRecallRs_200_response'
          description: OK
        "401":
          content: {}
          description: Unauthorized credentials
        "403":
          content: {}
          description: Forbidden action
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Recall or RRO
      tags:
      - Recalls
      x-accepts:
      - application/json
  /v1/recallRs/{recallId}/response:
    put:
      description: Respond to a Recall or a RRO.
      operationId: putRecallR
      parameters:
      - description: The unique identifier of the recall.
        explode: false
        in: path
        name: recallId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putRecallR_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRecallRs_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Respond to Recall or RRO
      tags:
      - Recalls
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/recall-sct-inst/{sctInstId}/{recallId}:
    get:
      description: Retrieve an SCT Inst Recall.
      operationId: getRecallSctInst
      parameters:
      - description: The unique identifier of the initial SCT Inst.
        explode: false
        in: path
        name: sctInstId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the recall.
        explode: false
        in: path
        name: recallId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRecallSctInst_200_response'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRecallSctInst_404_response'
          description: Not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get SCT Inst Recall
      tags:
      - Recalls
      x-accepts:
      - application/json
  /v1/recall-sct-inst/{sctInstId}/{recallId}/response:
    put:
      description: Provide your decision following an SCT Inst Recall.
      operationId: putRecallSctInst
      parameters:
      - description: The unique identifier of the initial SCT Inst.
        explode: false
        in: path
        name: sctInstId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the recall.
        explode: false
        in: path
        name: recallId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putRecallSctInst_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putRecallSctInst_201_response'
          description: Created
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putRecallSctInst_409_response'
          description: Conflict
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Respond to SCT Inst Recall
      tags:
      - Recalls
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/taxResidences:
    get:
      description: Retrieve Tax Residences that match your search conditions.
      operationId: getTaxresidences
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Tax Residence.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the User.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxResidenceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Tax Residences
      tags:
      - User Tax Residences
      x-accepts:
      - '*/*'
      - application/json
    post:
      description: |
        Create a new Tax Residence.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postTaxresidence
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTaxresidence_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxResidenceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Tax Residence
      tags:
      - User Tax Residences
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/taxResidences/{taxResidenceId}:
    delete:
      description: Delete a residence that match id
      operationId: deleteTaxresidence
      parameters:
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Tax Residence
        explode: false
        in: path
        name: taxResidenceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxResidenceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Delete a residence
      tags:
      - User Tax Residences
      x-accepts:
      - '*/*'
      - application/json
    get:
      description: Retrieve a Tax Residence based on its `id`.
      operationId: getTaxresidence
      parameters:
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the TaxResidence.
        explode: false
        in: path
        name: taxResidenceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxResidenceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Tax Residence
      tags:
      - User Tax Residences
      x-accepts:
      - '*/*'
      - application/json
    put:
      description: |
        Modify an existing Tax Residence.

        This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: putTaxresidence
      parameters:
      - deprecated: true
        description: "Legacy attribute, do not use."
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the TaxResidence
        explode: false
        in: path
        name: taxResidenceId
        required: true
        schema:
          type: integer
        style: simple
      - description: User's id residence
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: country of the resident
        explode: true
        in: query
        name: country
        required: false
        schema:
          type: string
        style: form
      - description: Tax payer's id
        explode: true
        in: query
        name: taxPayerId
        required: false
        schema:
          type: string
        style: form
      - description: Tax declaration
        explode: true
        in: query
        name: liabilityWaiver
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaxResidenceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Tax Residence
      tags:
      - User Tax Residences
      x-accepts:
      - '*/*'
      - application/json
  /v1/transactions:
    get:
      description: |
        Retrieve Transactions that match search criteria. The request must contain at least one of the following inputs: `walletId`, `transactionId`, `executionDate`, `valueDate`
      operationId: getTransactions
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the transaction.
        explode: true
        in: query
        name: transactionId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Names of the transaction types. Please refer to the [Transactions](/guide/wallets/transactions#transaction-types-transactiontype) article for the list of possible values.
        explode: true
        in: query
        name: transactionType
        required: false
        schema:
          type: string
        style: form
      - description: |
          The Id of the transaction types. Please refer to the [Transactions](/guide/wallets/transactions#transaction-types-transactiontype) article for the list of possible values.
        explode: true
        in: query
        name: transactionTypeId
        required: false
        schema:
          type: integer
        style: form
      - description: Unique identifier of the transactions Wallet.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: Unique identifier of the transactions User.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the transaction.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The description of the transaction.
        explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - description: The amount of the transaction.
        explode: true
        in: query
        name: amount
        required: false
        schema:
          type: string
        style: form
      - description: |
          The currency of the transaction amount currency. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The value date of the transaction (date applied for the payment).

          Format: YYYY-MM-DD HH:MM:SS
        explode: true
        in: query
        name: valueDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          Date of the execution of the transaction.

          Format: YYYY-MM-DD HH:MM:SS
        explode: true
        in: query
        name: executionDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The transaction element you want to sort the list with.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdDate
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Transactions
      tags:
      - Transactions
      x-accepts:
      - application/json
  /v1/transactions/{transactionId}:
    get:
      description: Retrieve a transaction.
      operationId: getTransaction
      parameters:
      - description: The unique identifier of the Transaction.
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Transaction
      tags:
      - Transactions
      x-accepts:
      - application/json
  /v1/transfers:
    get:
      description: |
        Retrieve the list of transfers for at least one of those inputs:
        `walletId`, `beneficiaryWalletId`, `userId`, `beneficiaryUserId`, `transferId`, `transferTag`
      operationId: getTransfers
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the Transfer.
        explode: true
        in: query
        name: transferId
        required: false
        schema:
          type: integer
        style: form
      - description: Custom data.
        explode: true
        in: query
        name: transferTag
        required: false
        schema:
          type: string
        style: form
      - description: |
          The status of the Transfer. Possible values:
          * `PENDING`
          * `CANCELED`
          * `VALIDATED`
        explode: true
        in: query
        name: transferStatus
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the debited Wallet.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the credited Wallet.
        explode: true
        in: query
        name: beneficiaryWalletId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the owner of the debited Wallet.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the owner of the credited Wallet.
        explode: true
        in: query
        name: beneficiaryUserId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The date and time of the transfer. Format: YYYY-MM-DD HH:MM:SS
        explode: true
        in: query
        name: transferDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The amount of the Transfer.
        explode: true
        in: query
        name: amount
        required: false
        schema:
          type: string
        style: form
      - description: |
          The currency of the Transfer amount. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
        explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - description: "The type of the Transfer:\n* `1` – Wallet to wallet \n* `2`\
          \ – Card transaction\n* `3` – Client fees\n* `4` – Credit note\n"
        explode: true
        in: query
        name: transferTypeId
        required: false
        schema:
          type: integer
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\
          \ value: `createdDate`. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\
          \ result. Format YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\
          \ result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Transfers
      tags:
      - Transfers
      x-accepts:
      - application/json
    post:
      description: |
        Create a new Wallet-to-Wallet transfer.

        This endpoint requires per-session or per-operation [SCA](/guide/strong-customer-authentication/introduction.html) on if the `beneficiaryWalletId` belongs to the current User or not.
      operationId: postTransfers
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTransfers_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Transfer
      tags:
      - Transfers
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/transfers/{transferId}:
    delete:
      description: |
        Change status of the Transfer to `CANCELED`. A validated transfer can't be canceled.
      operationId: deleteTransfer
      parameters:
      - description: The unique identifier of the Transfer.
        explode: false
        in: path
        name: transferId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Cancel Transfer
      tags:
      - Transfers
      x-accepts:
      - application/json
    get:
      description: Retrieve a transfer using its `id`.
      operationId: getTransfer
      parameters:
      - description: The unique identifier of the Transfer.
        explode: false
        in: path
        name: transferId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Transfer
      tags:
      - Transfers
      x-accepts:
      - application/json
  /v1/users:
    get:
      description: Retrieve Users matching your search criteria.
      operationId: getUsers
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the User.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The type of the user.
        explode: true
        in: query
        name: userTypeId
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
        style: form
      - description: Status of the user.
        explode: true
        in: query
        name: userStatus
        required: false
        schema:
          type: string
        style: form
      - description: Custom data that you can add to this item.
        explode: true
        in: query
        name: userTag
        required: false
        schema:
          type: string
        style: form
      - description: |
          You may read more about who is considered a US Person in the [dedicated article](https://docs.treezor.com/guide/user-verification/tax-residence.html#the-specific-case-of-us-taxpayers).
        explode: true
        in: query
        name: specifiedUSPerson
        required: false
        schema:
          type: integer
        style: form
      - description: Type of relationship
        explode: true
        in: query
        name: controllingPersonType
        required: false
        schema:
          type: integer
        style: form
      - description: Type of user's role
        explode: true
        in: query
        name: employeeType
        required: false
        schema:
          type: integer
        style: form
      - description: User's email address (must be valid).
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Name of the user.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Business name
        explode: true
        in: query
        name: legalName
        required: false
        schema:
          type: string
        style: form
      - description: Unique identifier of the parent of the user.
        explode: true
        in: query
        name: parentUserId
        required: false
        schema:
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The transaction element you want to sort the list with.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdDate
          type: string
        style: form
      - description: |
          The order you want to sort the list.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: |
          The creation date from which you want to filter the request result.
          Format: YYYY-MM-DD HH:MM:SS.
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Search Users
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      description: |
        You may read [the dedicated documentation for this feature](/guide/users/introduction.html#creation)
      operationId: postUsers
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUsers_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - legal
        - admin
      summary: Create User
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/users/{userId}:
    delete:
      description: |
        Update the user Status to `CANCELED`. See the [Deletion](/guide/users/modifications.html#deletion) article for more information.
      operationId: deleteUser
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          The origin of the request for cancelling the User, which can be one of the following:

          * `OPERATOR` – When you are at the origin of the deactivation.
          * `USER` – When the end user is at the origin of the deactivation.
        explode: true
        in: query
        name: origin
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read-write
        - admin
      summary: Disable User
      tags:
      - Users
      x-accepts:
      - '*/*'
      - application/json
    get:
      description: Retrieve user's information for given user's `id`.
      operationId: getUser
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get User
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      description: |
        Update user's information.

        This endpoint may require per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: putUser
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUser_request'
      responses:
        "200":
          content:
            applicationcjson:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update User
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
      - applicationcjson
  /v1/users/{userId}/Kycreview:
    put:
      description: |
        Request a KYC review for a given user and its children to Treezor. Learn more in the [KYC Request](/guide/user-verification/kyc-request.html) article.
      operationId: putKycreview
      parameters:
      - description: The unique identifier of the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read-write
      summary: Request KYC Review
      tags:
      - Users
      - User KYC Review
      x-accepts:
      - '*/*'
      - application/json
  /v1/users/{userId}/kycliveness:
    post:
      description: |
        Start the Live Verficiation process, whether it is KYC Liveness or Certified Video. You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html).
      operationId: postKycliveness
      parameters:
      - description: The unique identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postKycliveness_request'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postKycliveness_201_response'
          description: 201 response
        "400":
          content: {}
          description: |
            400 response is returned when the request is invalid i.e missing userId
        "401":
          content: {}
          description: 401 response is returned when the Authorization header is missing
        "403":
          content: {}
          description: |
            403 response is returned when your agent is not found in our services
        "428":
          content: {}
          description: |
            428 response is returned if specified userId is not found in our services
        "500":
          content: {}
          description: 500 response is returned for an internal error
        "504":
          content: {}
          description: |
            Internal server error : response is returned when the request did not respond on time
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read-write
        - admin
      summary: Initiate Live Verification
      tags:
      - Verification Solutions (KYC)
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
    put:
      description: |
        Retrieve the live verification results, and make them available to Treezor.
        You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html)
      operationId: put-kyc-liveness
      parameters:
      - description: The unique identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: 200 response
        "400":
          content: {}
          description: |
            400 response is returned when the request is incorrect e.g., missing userId
        "401":
          content: {}
          description: 401 response is returned when the Authorization header is missing
        "403":
          content: {}
          description: |
            403 response is returned when your agent is not found in our services
        "404":
          content: {}
          description: |
            404 response is returned when the identification is not found in our services
        "405":
          content: {}
          description: |
            405 response is returned when the documents can not be stored in our services
        "406":
          content: {}
          description: |
            406 response is returned when last initiated identification for userId is not in processed state.
        "410":
          content: {}
          description: 410 response is returned when the identification no longer
            exists
        "504":
          content: {}
          description: |
            Internal server error : response is returned when the request did not respond on time
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read-write
        - admin
      summary: Retrieve and Upload Live Verification Result
      tags:
      - Verification Solutions (KYC)
      x-accepts:
      - '*/*'
  /v1/users/{userId}/qes:
    post:
      description: "Start the qualified electronic signature (QES) verification. \n"
      operationId: postKycqes
      parameters:
      - description: The unique identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postKycqes_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postKycqes_201_response'
          description: Successful response
        "400":
          content: {}
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not found
        "410":
          content: {}
          description: Gone
        "500":
          content: {}
          description: nternal server error
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      security:
      - jwt:
        - read-write
        - admin
      summary: Initiate QES Verification
      tags:
      - Verification Solutions (KYC)
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/users/{userId}/videoconference:
    post:
      description: |
        Start the [Video conference verification](/guide/user-verification/videoconf.html) process.
      operationId: postKycVconf
      parameters:
      - description: The unique identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postKycqes_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postKycqes_201_response'
          description: Successful response
        "403":
          content: {}
          description: Forbidden
        "428":
          content: {}
          description: Precondition Required.
        "500":
          content: {}
          description: nternal server error
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/getCards_default_response'
          description: Unexpected error
      summary: Initiate Video Conference Verification
      tags:
      - Verification Solutions (KYC)
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /v1/virtualibans:
    get:
      description: Retrieve virtual IBANs that match search criteria.
      operationId: getvirtualibans
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Virtual IBAN.
        explode: true
        in: query
        name: virtualIbanId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Wallet to which the Virtual IBAN
          is associated.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: The type of the Virtual IBAN.
        explode: true
        in: query
        name: typeId
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      - description: |
          Custom attribute that you can use as you see fit. <br> Learn more in the [Object tags](/guide/api-basics/objects-tags.html) article.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: integer
        style: form
      - description: The client's internal reference of the Virtual IBAN.
        explode: true
        in: query
        name: reference
        required: false
        schema:
          type: string
        style: form
      - description: The date from which the Virtual IBAN validity starts. Defaults
          to today's date and must be set in the future.
        explode: true
        in: query
        name: validFrom
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: |
          The date from which the Virtual IBAN validity ends. Must be set after the `validFrom` date.
        explode: true
        in: query
        name: validTo
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: The maximum number of transactions allowed.
        explode: true
        in: query
        name: maxUsage
        required: false
        schema:
          type: integer
        style: form
      - description: The maximum cumulated amount allowed.
        explode: true
        in: query
        name: maxAmount
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The current number of transactions for the Virtual IBAN.
        explode: true
        in: query
        name: numberOfTransactions
        required: false
        schema:
          type: integer
        style: form
      - description: The cumulated amount of transactions for the Virtual IBAN.
        explode: true
        in: query
        name: cumulatedAmount
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: "The transaction element you want to sort the list with. Default\n\
          value: createdDate. \n"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualIbanObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Virtual IBANs
      tags:
      - Virtual IBANs
      x-accepts:
      - application/json
    post:
      description: Create a new virtual IBAN associated with a given Wallet.
      operationId: postVirtualIban
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postVirtualIban_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualIbanObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Virtual IBAN
      tags:
      - Virtual IBANs
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/virtualibans/{virtualIbanId}:
    get:
      description: Retrieve a Virtual IBAN based on its `id`.
      operationId: getvirtualiban
      parameters:
      - description: The unique identifier of the Virtual IBAN.
        explode: false
        in: path
        name: virtualIbanId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualIbanObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Virtual IBAN
      tags:
      - Virtual IBANs
      x-accepts:
      - application/json
    put:
      description: Update a Virtual IBAN's information.
      operationId: putVirtualIban
      parameters:
      - description: The unique identifier of the Virtual IBAN.
        explode: false
        in: path
        name: virtualIbanId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putVirtualIban_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualIbanObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Virtual IBAN
      tags:
      - Virtual IBANs
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/wallets:
    get:
      description: |
        Retrieve Wallets that match your search conditions. The request must specify at least one of those fields: `walletId`, `eventAlias`, `userId`, `walletTypeId`.
      operationId: getWallets
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Wallet.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The status of the Wallet, which can be one of the following:
          * `PENDING` – The Wallet has just been created.
          * `VALIDATED` – The Wallet is active.
          * `CANCELED` – The Wallet is deactivated.
        explode: true
        in: query
        name: walletStatus
        required: false
        schema:
          enum:
          - PENDING
          - VALIDATED
          - CANCELED
          type: string
        style: form
      - description: The unique identifier of the User owning the Wallet.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the Parent User of the Wallet owner.
        explode: true
        in: query
        name: parentUserId
        required: false
        schema:
          type: integer
        style: form
      - description: "Custom attribute to use as you see fit. Learn more in the [Object\
          \ tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n<br>Max\
          \ length: 250 characters \n<br>Format: hc characters and `/` `!` `-` `_`\
          \ `.` `*` `'` `(` `)`\n"
        explode: true
        in: query
        name: walletTag
        required: false
        schema:
          type: string
        style: form
      - description: |
          The type of Wallet. The following values are allowed:
          * `9` – Electronic Money Wallet
          * `10` – Payment Account Wallet
          <br> Other types are available but can only be set by Treezor. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
        explode: true
        in: query
        name: walletTypeId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: eventAlias
        required: false
        schema:
          type: string
        style: form
      - description: "The fees applied to the Wallet, as defined by your contract\
          \ with Treezor. Usually required, but may have a default value set by Treezor."
        explode: true
        in: query
        name: tariffId
        required: false
        schema:
          type: integer
        style: form
      - description: "The page number, only available on /v1/ endpoints \n"
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The number of items per page, only available on /v1/ endpoints\
          \  \n"
        explode: true
        in: query
        name: pageCount
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The transaction element you want to sort the list with.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdDate
          type: string
        style: form
      - description: |
          The order you want to sort the list.
          * **DESC** for a descending sort
          * **ASC** for a ascending sort.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: DESC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: "The creation date from which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The creation date up to which you want to filter the request\
          \ result.\nFormat: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: createdDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date from which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The modification date up to which you want to filter the request\n\
          result. Format: YYYY-MM-DD HH:MM:SS. \n"
        explode: true
        in: query
        name: updatedDateTo
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Search Wallets
      tags:
      - Wallets
      x-accepts:
      - application/json
    post:
      description: |
        Create a new Wallet. This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postWallets
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postWallets_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Wallet
      tags:
      - Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/wallets/{walletId}:
    delete:
      description: Change the status of the Wallet to `CANCELED`. This action is irreversible.
      operationId: deleteWallet
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          The origin of the request for cancelling the Wallet, which can be one of the following: <ul><li>`OPERATOR` – When **you** are at the origin of the deactivation.</li><li>`USER` – When the **end user** is at the origin of the deactivation.</li></ul>
        explode: true
        in: query
        name: origin
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteWallet_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Delete Wallet
      tags:
      - Wallets
      x-accepts:
      - application/json
    get:
      description: Retrieve a Wallet based on its `id`.
      operationId: getWallet
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
      summary: Get Wallet
      tags:
      - Wallets
      x-accepts:
      - application/json
    put:
      description: Modifiy a Wallet information
      operationId: putWallet
      parameters:
      - description: The unique identifier of the Wallet.
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putWallet_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletObject'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Update Wallet
      tags:
      - Wallets
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mdc/rulesets:
    get:
      description: Retrieve all rulesets.
      operationId: get-rulesets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_rulesets_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Rulesets
      tags:
      - Card Rulesets (MDC)
      x-accepts:
      - application/json
    post:
      description: Create a Ruleset.
      operationId: create-ruleset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ruleset_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_ruleset_201_response'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Create Ruleset
      tags:
      - Card Rulesets (MDC)
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mdc/rulesets/{rulesetId}:
    delete:
      description: Disable a Ruleset.
      operationId: disable-ruleset
      parameters:
      - description: The unique identifier of the Ruleset.
        explode: false
        in: path
        name: rulesetId
        required: true
        schema: {}
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Disable Ruleset
      tags:
      - Card Rulesets (MDC)
      x-accepts:
      - application/json
    get:
      description: Retrieve a Ruleset with its `id`.
      operationId: get-ruleset
      parameters:
      - description: The unique identifier of the Ruleset.
        explode: false
        in: path
        name: rulesetId
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullRuleset'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Ruleset
      tags:
      - Card Rulesets (MDC)
      x-accepts:
      - application/json
    put:
      description: Modify a Ruleset.
      operationId: put-ruleset
      parameters:
      - description: The unique identifier of the Ruleset.
        explode: false
        in: path
        name: rulesetId
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ruleset_request'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Ruleset
      tags:
      - Card Rulesets (MDC)
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/mdc/{cardId}/rulesets:
    get:
      description: Get all rulesets assigned to a given card.
      operationId: get-ruleset-from-card
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_ruleset_from_card_200_response_inner'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Retrieve Card Rulesets
      tags:
      - Card Rulesets (MDC)
      x-accepts:
      - application/json
    post:
      description: Assign rulesets to a given card.
      operationId: attach-ruleset-to-card
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CardRulesets'
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Assign Ruleset
      tags:
      - Card Rulesets (MDC)
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /v1/mdc/{cardId}/ruleset/{rulesetId}/factsBalance:
    get:
      description: Retrieve a ruleset virtual balance.
      operationId: getFactsBalance
      parameters:
      - description: The unique identifier of the Card.
        explode: false
        in: path
        name: cardId
        required: true
        schema: {}
        style: simple
      - description: The unique identifier of the Ruleset.
        explode: false
        in: path
        name: rulesetId
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFactsBalance_200_response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Retrieve Ruleset virtual balance
      tags:
      - Card Rulesets (MDC)
      x-accepts:
      - application/json
  /v1/cardDigitalizations:
    get:
      deprecated: true
      description: Search for card digitalizations.
      operationId: readcardDigitalizations
      parameters:
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessSignature
        required: false
        schema:
          type: string
        style: form
      - description: |
          A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
        explode: true
        in: query
        name: accessTag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserId
        required: false
        schema:
          type: integer
        style: form
      - deprecated: true
        description: |
          Legacy attribute, do not use.
        explode: true
        in: query
        name: accessUserIp
        required: false
        schema:
          type: string
        style: form
      - description: |
          Filterable fields are : - id - externalId - cardId - status -
          detailsFromGPS - createdDate - modifiedDate
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readcardDigitalizations_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Search Card Digitalizations
      tags:
      - Cards Digitalization
      x-accepts:
      - application/json
  /v1/cardDigitalizations/{id}:
    delete:
      deprecated: true
      description: Delete a payment Token
      operationId: deletecardDigitalizationsId
      parameters:
      - description: The unique identifier of the Card Digitalization (internal).
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: |
          The reason code for the action. Possible values are:

          | Reason code | Description |
          | ---- | ----------- |
          | L | Cardholder confirmed token device lost |
          | S | Cardholder confirmed token device stolen |
          | F | Issuer or cardholder confirmed fraudulent token transactions (Deprecated) |
          | T | Issuer or cardholder confirmed fraudulent token transactions |
          | C | Account closed |
          | Z | Other |
        explode: true
        in: query
        name: reasonCode
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readcardDigitalizations_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Delete Payment Token
      tags:
      - Cards Digitalization
      x-accepts:
      - application/json
    get:
      deprecated: true
      description: Retrieve a Card Digitalization based on its `id`.
      operationId: cardDigitalizationsId
      parameters:
      - description: Card digitalization internal id.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardDigitalizationsId_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Get Card Digitalization
      tags:
      - Cards Digitalization
      x-accepts:
      - application/json
    put:
      deprecated: true
      description: |
        Update the status of a payment Token

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: putcardDigitalizationsId
      parameters:
      - description: Card digitalization internal id.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: |
          The new status for the payment Token. Possible values are :

          | Status | Description |
          | ---- | ----------- |
          | unsuspend | Unsuspend |
          | suspend | Suspend |
        explode: true
        in: query
        name: status
        required: true
        schema:
          type: string
        style: form
      - description: |
          The reason code for the action. Possible values are:

          For a suspension:

          | Reason code | Description |
          | ---- | ----------- |
          | L | Cardholder confirmed token device lost |
          | S | Cardholder confirmed token device stolen |
          | T | Issuer or cardholder confirmed fraudulent token transactions |
          | Z | Other |

          For an unsuspension:

          | Reason code | Description |
          | ---- | ----------- |
          | F | Cardholder reported token device found or not stolen |
          | T | Issuer or cardholder confirmed no fraudulent token transactions |
          | Z | Other |
        explode: true
        in: query
        name: reasonCode
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardDigitalizationsId_200_response'
          description: OK
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Method Not Allowed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt: []
      summary: Update Payment Token Status
      tags:
      - Cards Digitalization
      x-accepts:
      - application/json
  /core-connect/scheduledPayment:
    get:
      description: Retrieve Scheduled Payment orders based on the corresponding `userId`
        and/or `walletId`
      operationId: getScheduledPayment
      parameters:
      - description: The unique identifier of the Wallet to be debited.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: The unique identifier of the User owning the Wallet to debit.
        explode: true
        in: query
        name: walletId
        required: false
        schema:
          type: integer
        style: form
      - description: "Pagination cursor, if you don't pass a cursor, result will start\
          \ at the first page."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPayment'
          description: OK – Scheduled payment created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get Scheduled Payment
      tags:
      - Scheduled Payments
      x-accepts:
      - application/json
    post:
      description: |
        Schedule a Payout or a Wallet-to-Wallet transfer for a future date.

        This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html).
      operationId: postScheduledPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postScheduledPayment_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPayment'
          description: OK – Scheduled payment created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Scheduled Payment
      tags:
      - Scheduled Payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /core-connect/scheduledPayment/{scheduledPaymentId}:
    delete:
      description: Cancel a Scheduled Payment order
      operationId: deleteScheduledPayment
      parameters:
      - description: The unique identifier of the Scheduled Payment order.
        explode: false
        in: path
        name: scheduledPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPayment_1'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Delete Scheduled Payment
      tags:
      - Scheduled Payments
      x-accepts:
      - application/json
  /core-connect/scheduledPayment/{scheduledPaymentId}/payments:
    get:
      description: Retrieve the list of executed payments for a given Scheduled Payment
        order
      operationId: getScheduledPaymentOperations
      parameters:
      - description: The unique identifier of the Scheduled Payment order.
        explode: false
        in: path
        name: scheduledPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduledPaymentOperations_200_response'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_only
        - read_write
      summary: Get Scheduled Payment Operations
      tags:
      - Scheduled Payments
      x-accepts:
      - application/json
  /v1/topups/cards/authorizations:
    post:
      description: |
        Create an authorization to make a card topup payin within 7 days. The card must be [tokenized](/guide/acquiring/card-tokenization.html) first.
      operationId: postAcqAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization'
          description: An authorization has been created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Authorization
      tags:
      - Acquiring (Card Topups)
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/topups/cards/authorizations/{authorizationUuid}:
    delete:
      description: Delete an authorization from the system
      operationId: deleteAcqAuth
      parameters:
      - description: Universally unique identifier (UUID) of the authorization
        explode: false
        in: path
        name: authorizationUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationDeleteResponse'
          description: Authorization returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Delete Authorization
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
    get:
      description: Retrieve an authorization from the system.
      operationId: getAcqAuth
      parameters:
      - description: Universally unique identifier (UUID) of the authorization
        explode: false
        in: path
        name: authorizationUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization'
          description: Authorization returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Authorization
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
  /v1/topups/cards/authorizations/{authorizationUuid}/payins:
    get:
      description: List payins created from a given authorization.
      operationId: getAcqAuthPayins
      parameters:
      - description: Universally unique identifier (UUID) of the authorization
        explode: false
        in: path
        name: authorizationUuid
        required: true
        schema:
          type: string
        style: simple
      - description: The exclusive start key returned by a previous call
        explode: true
        in: query
        name: exclusiveStartKey
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AcquiringPayin'
                type: array
          description: List of Payins is returned
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Authorization Payins
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
    post:
      description: "Create a payin from an authorization. The amount must be ≤ to\
        \ the authorization amount. [Learn more](/guide/acquiring/preauthorized.html#advanced-capture)."
      operationId: postAcqAuthPayin
      parameters:
      - description: Universally unique identifier (UUID) of the authorization
        explode: false
        in: path
        name: authorizationUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postAcqAuthPayin_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureResponse'
          description: Payin returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Payin from Authorization
      tags:
      - Acquiring (Card Topups)
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/topups/cards/notification/authorizations:
    post:
      description: |
        Mocks an HiPay authorization notification provided the minimal set of
        parameters to generate a refund notification.
      operationId: acquiringv2-topup-cards-simulation-notification-autorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSimulationAuthorizations'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSimulationAuthorizationResponse'
          description: Authorization notification successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate an HiPay authorization notification
      tags:
      - Acquiring (Simulation)
      x-content-type: application/json
      x-accepts:
      - application/json
  /simulation/topups/cards/notification/payins:
    post:
      description: |
        Mocks an HiPay payin notification providing the minimal set of
        parameters to generate a payin notification.
      operationId: acquiringv2-topup-cards-simulation-notification-payins
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSimulationPayins'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSimulationPayins'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSimulationPayinResponse'
          description: Payin notification successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate an HiPay payin notification
      tags:
      - Acquiring (Simulation)
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
  /simulation/topups/cards/notification/refunds:
    post:
      description: |
        Mocks an HiPay refund notification providing the minimal set of
        parameters to generate a refund notification.
      operationId: acquiringv2-topup-cards-simulation-notification-refunds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSimulationRefunds'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSimulationRefunds'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSimulationRefundResponse'
          description: Refund notification successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate an HiPay refund notification
      tags:
      - Acquiring (Simulation)
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
  /simulation/topups/cards/notification/chargebacks:
    post:
      description: |
        Mocks an HiPay chargeback notification providing the minimal set of
        parameters to generate a chargeback notification.
      operationId: acquiringv2-topup-cards-simulation-notification-chargebacks
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSimulationChargebacks'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSimulationChargebacks'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSimulationChargebackResponse'
          description: Chargeback notification successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - admin
      summary: Simulate an HiPay chargeback notification
      tags:
      - Acquiring (Simulation)
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
  /v1/topups/cards/refunds/{refundUuid}:
    get:
      description: Retrieve a card acquring refund from the system.
      operationId: acquiringv2-topup-cards-refunds-get
      parameters:
      - description: Universally unique identifier (UUID) of the refund
        explode: false
        in: path
        name: refundUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundsResponse'
          description: Refund returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Refund
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
  /v1/topups/cards/refunds:
    post:
      description: Create a new card topup refund.
      operationId: acquiringv2-topup-cards-refunds-post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundsResponse'
          description: Payin successfully refunded. A list of refunds is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Refund
      tags:
      - Acquiring (Card Topups)
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
  /v1/topups/cards/chargebacks/{chargebackUuid}:
    get:
      description: Retrieve a card acquiring a chargeback from the system.
      operationId: acquiringv2-topup-cards-chargebacks-get
      parameters:
      - description: Universally unique identifier (UUID) of the chargeback
        explode: false
        in: path
        name: chargebackUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebacksResponse'
          description: Chargeback returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Chargeback
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
  /v1/topups/users/{userId}/topupCards:
    get:
      description: Get topup cards.
      operationId: getTopupCards
      parameters:
      - description: The owning user identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupCards'
          description: A topup cards details search response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Search Topup Cards
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
    post:
      description: |
        Create a new topup card. The card must have been previously tokenized.
      operationId: postTopupCard
      parameters:
      - description: The owning user identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopupCardRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupCards'
          description: Topup card was created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Create Topup Card
      tags:
      - Acquiring (Card Topups)
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/topups/users/{userId}/topupCards/{topupCardId}:
    delete:
      description: Change topup card status to CANCELED.
      operationId: deleteTopupCard
      parameters:
      - description: The owning user identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the topup card to be cancelled
        explode: false
        in: path
        name: topupCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupCards'
          description: Topup card was cancelled
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
      summary: Cancel Topup Card
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
    get:
      description: Retrieve the details of a Topup Card.
      operationId: getTopupCard
      parameters:
      - description: The owning user identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the topup card to be retrieved
        explode: false
        in: path
        name: topupCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupCards'
          description: A topup card details search response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: Unexpected error
      security:
      - jwt:
        - read_write
        - read_only
      summary: Get Topup Card
      tags:
      - Acquiring (Card Topups)
      x-accepts:
      - application/json
components:
  responses:
    DefaultError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Unexpected error
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Bad Request
    NotAllowedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Method Not Allowed
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Method Not Allowed
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Not Found
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
      description: Forbidden
  schemas:
    DefaultError:
      example:
        errors:
        - code: resource_not_found_error
          docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: invalid_request
          message: message
        - code: resource_not_found_error
          docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: invalid_request
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/DefaultError_errors_inner'
          type: array
      type: object
    DigitalizedCardsPutDigitalizedCardResponse:
      example:
        createdDate: createdDate
        cardId: cardId
        modifiedDate: modifiedDate
        id: id
        status: A
      properties:
        id:
          type: string
        cardId:
          type: string
        status:
          description: |
            * `A` **A**ctive
            * `U` **U**nmapped
            * `S` **S**uspended
            * `D` (or `X`) **D**eleted
          enum:
          - A
          - U
          - S
          - D
          - X
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    DigitalizedCardsDeactivateDigitalizedCardResponse:
      example:
        createdDate: createdDate
        cardId: cardId
        modifiedDate: modifiedDate
        id: id
        status: status
      properties:
        id:
          type: string
        cardId:
          type: string
        status:
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    DigitalizedCardsListDigitalizedCardResponse:
      items:
        $ref: '#/components/schemas/DigitalizedCardsGetDigitalizedCardResponse'
      type: array
    DigitalizedCardsGetDigitalizedCardResponse:
      example:
        deviceType: deviceType
        deviceId: deviceId
        deviceName: deviceName
        activationMethod: activationMethod
        walletProvider: walletProvider
        merchantName: merchantName
        createdDate: createdDate
        cardId: cardId
        modifiedDate: modifiedDate
        id: id
        tokenUniqueReference: tokenUniqueReference
        status: status
        tokenServiceProvider: tokenServiceProvider
        expirationDate: expirationDate
      properties:
        id:
          type: string
        cardId:
          type: string
        status:
          type: string
        walletProvider:
          type: string
        tokenUniqueReference:
          type: string
        merchantName:
          type: string
        deviceType:
          type: string
        deviceId:
          type: string
        deviceName:
          type: string
        activationMethod:
          type: string
        tokenServiceProvider:
          type: string
        expirationDate:
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    DigitalizedCardsBadRequest:
      items:
        $ref: '#/components/schemas/DigitalizedCardsBadRequest_inner'
      type: array
    DigitalizedCardsUnauthorizedError:
      items:
        $ref: '#/components/schemas/DigitalizedCardsUnauthorizedError_inner'
      type: array
    DigitalizedCardsNotFound:
      items:
        $ref: '#/components/schemas/DigitalizedCardsNotFound_inner'
      type: array
    DigitalizedCardsInternalError:
      items:
        $ref: '#/components/schemas/DigitalizedCardsInternalError_inner'
      type: array
    FullRuleset:
      example:
        metadata:
          rulesetId: 200cf363-32cd-4edd-a9ff-bc4aee6ba070
          name: name
          description: description
          status: ENABLED
        ruleset:
          attributes:
          - name: name
            type: type
          - name: name
            type: type
          decisions:
          - conditions:
              all:
              - "{}"
              - "{}"
              any:
              - "{}"
              - "{}"
            event:
              type: type
              params: "{}"
          - conditions:
              all:
              - "{}"
              - "{}"
              any:
              - "{}"
              - "{}"
            event:
              type: type
              params: "{}"
      properties:
        metadata:
          $ref: '#/components/schemas/RulesetMetadataWithIdAndStatus'
        ruleset:
          $ref: '#/components/schemas/Ruleset'
      required:
      - metadata
      - ruleset
      title: Ruleset
      type: object
    RulesetMetadata:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      title: Ruleset metadata definition
      type: object
    RulesetMetadataWithIdAndStatus:
      example:
        rulesetId: 200cf363-32cd-4edd-a9ff-bc4aee6ba070
        name: name
        description: description
        status: ENABLED
      properties:
        name:
          type: string
        description:
          type: string
        status:
          enum:
          - ENABLED
          - DISABLED
          example: ENABLED
          type: string
        rulesetId:
          example: 200cf363-32cd-4edd-a9ff-bc4aee6ba070
          format: uuid
          type: string
      required:
      - name
      title: Ruleset metadata definition
      type: object
    Ruleset:
      example:
        attributes:
        - name: name
          type: type
        - name: name
          type: type
        decisions:
        - conditions:
            all:
            - "{}"
            - "{}"
            any:
            - "{}"
            - "{}"
          event:
            type: type
            params: "{}"
        - conditions:
            all:
            - "{}"
            - "{}"
            any:
            - "{}"
            - "{}"
          event:
            type: type
            params: "{}"
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/RulesetAttribute'
          type: array
        decisions:
          items:
            $ref: '#/components/schemas/RulesetDecision'
          type: array
      required:
      - attributes
      - decisions
      title: Ruleset definition
      type: object
    RulesetAttribute:
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
      title: Ruleset attribute definition
      type: object
    RulesetDecision:
      example:
        conditions:
          all:
          - "{}"
          - "{}"
          any:
          - "{}"
          - "{}"
        event:
          type: type
          params: "{}"
      properties:
        conditions:
          $ref: '#/components/schemas/RulesetConditions'
        event:
          $ref: '#/components/schemas/RulesetEvent'
      required:
      - conditions
      - event
      title: Ruleset decision definition
      type: object
    RulesetConditions:
      example:
        all:
        - "{}"
        - "{}"
        any:
        - "{}"
        - "{}"
      properties:
        all:
          items:
            type: object
          type: array
        any:
          items:
            type: object
          type: array
      title: Ruleset condition definition
      type: object
    RulesetEvent:
      example:
        type: type
        params: "{}"
      properties:
        type:
          type: string
        params:
          properties: {}
          type: object
      required:
      - params
      - type
      title: Ruleset event definition
      type: object
    CardRulesets:
      items:
        $ref: '#/components/schemas/CardRuleset'
      title: CardRuleset definition
      type: array
    CardRuleset:
      example:
        rulesetId: rulesetId
        metadata: "{}"
      properties:
        rulesetId:
          type: string
        metadata:
          properties: {}
          type: object
      required:
      - metadata
      - rulesetId
      title: CardRuleset definition
      type: object
    AuthorizationDeleteResponse:
      example:
        capturedAmount: capturedAmount
        authorizationCode: authorizationCode
        transactionReference: transactionReference
        profile: profile
        dateAuthorized: dateAuthorized
        message: message
        dateUpdated: dateUpdated
        dateCreated: dateCreated
        authorizedAmount: authorizedAmount
        decimals: decimals
        currency: currency
        operation: operation
        refundedAmount: refundedAmount
        status: status
      properties:
        operation:
          description: This value will always be 'cancel'.
          type: string
        profile:
          description: HiPay merchant identifier (mid)
          type: string
        authorizationCode:
          description: HiPay authorization code linked to the authorization
          type: string
        transactionReference:
          description: The reference of the transaction
          type: string
        dateCreated:
          description: The creation date of the authorization
          type: string
        dateUpdated:
          description: The last update date of the authorization
          type: string
        dateAuthorized:
          description: The authorized date of the authorization
          type: string
        status:
          description: Transaction status returned by HiPay
          type: string
        message:
          description: Message returned by HiPay
          type: string
        authorizedAmount:
          description: Authorized amount
          type: string
        capturedAmount:
          description: Captured amount
          type: string
        refundedAmount:
          description: Refunded amount
          type: string
        decimals:
          description: |
            The number of digits after the decimal point of the transaction
            amount
          type: string
        currency:
          description: |-
            Base currency for this authorization

            This three-character currency code must comply with ISO-4217
          type: string
    AcquiringPayin:
      example:
        creditorIban: "null"
        paymentExceptionUrl: "null"
        creditorName: "null"
        createdIp: createdIp
        creditorBIC: "null"
        informationStatus: informationStatus
        paymentPostDataUrl: "null"
        virtualIbanId: 5.637376656633329
        userLastName: userLastName
        additionalData: "null"
        paymentPostUrl: "null"
        ibanFullname: "null"
        walletId: walletId
        ibanBic: "null"
        profile: profile
        cartId: 1.4658129805029452
        payinStatus: PENDING
        userFirstName: userFirstName
        codeStatus: codeStatus
        virtualIbanReference: "null"
        payinTag: "null"
        subtotalItems: "null"
        ibanTxEndToEndId: "null"
        creditorCountry: "null"
        subtotalTax: "null"
        payinId: payinId
        paymentCanceledUrl: "null"
        paymentMethodId: paymentMethodId
        paymentWaitingUrl: "null"
        mandateId: 5.962133916683182
        walletAlias: walletAlias
        currency: currency
        distributorFee: "null"
        walletEventName: walletEventName
        forwardUrl: "null"
        creditorAddressLine: "null"
        messageToUser: messageToUser
        refundAmount: 6.027456183070403
        ibanTxId: "null"
        amount: 0.8008281904610115
        paymentAcceptedUrl: "null"
        userId: userId
        paymentLanguage: "null"
        paymentRefusedUrl: "null"
        createdDate: createdDate
        payinDate: "null"
        paymentHtml: "null"
        subtotalServices: "null"
        ibanId: "null"
      properties:
        payinId:
          description: The universally unique identifier (UUID) of the payin
          type: string
        userId:
          description: The unique identifier of the User requesting the payin
          type: string
        walletId:
          description: The unique identifier of the wallet to be credited
          type: string
        userFirstName:
          description: The firstname of the user
          type: string
        walletEventName:
          description: The name of the wallet
          type: string
        walletAlias:
          description: Short URL wallet name
          type: string
        userLastName:
          description: The lastname of the user
          type: string
        messageToUser:
          description: Message to send to user owning the wallet
          type: string
        payinStatus:
          description: "Status of the payin. \n\nPossible values: \n - *PENDING* \n\
            \ - *CANCELED* \n - *VALIDATED*"
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        paymentMethodId:
          description: Treezor internal payment method identifier
          type: string
        amount:
          description: The amount of the payin.
          type: number
        currency:
          description: |-
            Base currency for thisthe payin.

            This three-character currency code must comply with ISO-4217
          type: string
        createdDate:
          description: The ceation date of the payin
          type: string
        codeStatus:
          description: "Treezor status code mixed with HiPay notification status code:\
            \ 150000 + (status code). \n\nExample: For a successful payin, the HiPay\
            \ notification status code will be 118. The codeStatus will be 150118\n"
          type: string
        informationStatus:
          description: |
            Informational message related to the HiPay status code. This message is destined to the user
          type: string
        refundAmount:
          description: Refunded amount
          type: number
        createdIp:
          description: The IP address of the end user making a top-up
          type: string
        profile:
          description: Your HiPay Merchant ID.
          type: string
        payinTag:
          default: "null"
          description: "This field is not used, always empty"
          nullable: true
          type: string
        payinDate:
          default: "null"
          description: "This field is not used, always 0000-00-00"
          nullable: true
          type: string
        cartId:
          description: "This field is not used, always 0"
          type: number
        subtotalItems:
          default: "null"
          description: "This field is not used, always 0.00"
          nullable: true
          type: string
        subtotalServices:
          default: "null"
          description: This field is not used always 0.00
          nullable: true
          type: string
        subtotalTax:
          default: "null"
          description: This field is not used always 0.00
          nullable: true
          type: string
        distributorFee:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentHtml:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentLanguage:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentPostUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentPostDataUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentAcceptedUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentWaitingUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentCanceledUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentRefusedUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentExceptionUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanFullname:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanBic:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanTxEndToEndId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanTxId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        forwardUrl:
          default: "null"
          description: |
            For some payment methods, the end-user must be redirected to this URL in order for him to enter additional payment information.
          nullable: true
          type: string
        mandateId:
          default: 0
          description: "This field is not used, always 0"
          nullable: true
          type: number
        creditorName:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorAddressLine:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorCountry:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorIban:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorBIC:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        virtualIbanId:
          description: "This field is not used, always null"
          nullable: true
          type: number
        virtualIbanReference:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        additionalData:
          default: "null"
          description: "This field is not used, always empty"
          nullable: true
          type: string
    RefundResponse:
      example:
        payinrefundId: payinrefundId
        payinrefundDate: payinrefundDate
        walletId: walletId
        payinId: payinId
        amount: 0.8008281904610115
        createdDate: createdDate
        payinrefundStatus: PENDING
        payinrefundTag: "null"
        profile: profile
        modifiedDate: modifiedDate
        currency: currency
      properties:
        payinrefundId:
          description: The universally unique identifier (UUID) of the refund
          type: string
        payinrefundTag:
          default: "null"
          nullable: true
          type: string
        payinrefundStatus:
          description: "Status of the refund.\n\n Possible values: \n - *PENDING*\
            \ \n - *VALIDATED* \n - *CANCELED*"
          enum:
          - PENDING
          - VALIDATED
          - CANCELED
          type: string
        walletId:
          description: Identifier of the wallet to be debited
          type: string
        payinId:
          description: The universally unique identifier (UUID) of the payin
          type: string
        amount:
          description: The amount to be refunded
          type: number
        currency:
          description: |-
            Base currency for the refund.

            This three-character currency code must comply with ISO-4217
          type: string
        createdDate:
          description: The creation date of the refund
          type: string
        modifiedDate:
          description: The last updated date of the refund
          type: string
        payinrefundDate:
          description: The date of the refund
          type: string
        profile:
          description: Your HiPay Merchant ID.
          type: string
    RefundsResponse:
      example:
        payinRefunds:
        - payinrefundId: payinrefundId
          payinrefundDate: payinrefundDate
          walletId: walletId
          payinId: payinId
          amount: 0.8008281904610115
          createdDate: createdDate
          payinrefundStatus: PENDING
          payinrefundTag: "null"
          profile: profile
          modifiedDate: modifiedDate
          currency: currency
        - payinrefundId: payinrefundId
          payinrefundDate: payinrefundDate
          walletId: walletId
          payinId: payinId
          amount: 0.8008281904610115
          createdDate: createdDate
          payinrefundStatus: PENDING
          payinrefundTag: "null"
          profile: profile
          modifiedDate: modifiedDate
          currency: currency
      properties:
        payinRefunds:
          items:
            $ref: '#/components/schemas/RefundResponse'
          type: array
    ChargebackResponse:
      example:
        chargebackTag: "null"
        chargebackId: chargebackId
        walletId: walletId
        chargebackStatus: chargebackStatus
        amount: 0.8008281904610115
        createdDate: createdDate
        profile: profile
        modifiedDate: modifiedDate
        currency: currency
        chargebackDate: chargebackDate
      properties:
        chargebackId:
          description: The universally unique identifier (UUID) of the chargeback
          type: string
        chargebackTag:
          default: "null"
          nullable: true
          type: string
        chargebackStatus:
          description: The status of the chargeback.
          type: string
        chargebackDate:
          description: The date of the chargeback
          type: string
        walletId:
          description: The identifier of the wallet to be debited
          type: string
        amount:
          description: The amount to be chargebacked
          type: number
        currency:
          description: |-
            Base currency for the chargeback.

            This three-character currency code must comply with ISO-4217
          type: string
        createdDate:
          description: Creation date of the chargeback
          type: string
        modifiedDate:
          description: Last updated date of the chargeback
          type: string
        profile:
          description: HiPay merchant identifier (mid)
          type: string
    ChargebacksResponse:
      example:
        chargebacks:
        - chargebackTag: "null"
          chargebackId: chargebackId
          walletId: walletId
          chargebackStatus: chargebackStatus
          amount: 0.8008281904610115
          createdDate: createdDate
          profile: profile
          modifiedDate: modifiedDate
          currency: currency
          chargebackDate: chargebackDate
        - chargebackTag: "null"
          chargebackId: chargebackId
          walletId: walletId
          chargebackStatus: chargebackStatus
          amount: 0.8008281904610115
          createdDate: createdDate
          profile: profile
          modifiedDate: modifiedDate
          currency: currency
          chargebackDate: chargebackDate
      properties:
        chargebacks:
          items:
            $ref: '#/components/schemas/ChargebackResponse'
          type: array
    NotificationSimulationPayins:
      properties:
        userId:
          description: |
            Identifier of the user on behalf of which the simulated payin should be executed
          type: string
        walletId:
          description: Identifier of the wallet to be credited
          type: string
        amount:
          description: Payin amount
          type: number
        currency:
          description: |-
            Base currency for this payin

            This three-character currency code must comply with ISO-4217
          type: string
        status:
          description: The status code of the simulated notification
          type: integer
        transactionReference:
          description: The reference of the transaction
          type: string
        cardPaymentMethod:
          $ref: '#/components/schemas/NotificationSimulationPayins_cardPaymentMethod'
        profile:
          description: |
            HiPay merchant identifier (mid) to be used for the operation.
            Required if the client has multiple merchant identifiers associated.
            If only one mid is associated, then that one is used for the
            operation.
          type: string
      required:
      - amount
      - currency
      - walletId
      type: object
    NotificationSimulationRefunds:
      properties:
        userId:
          description: |
            Identifier of the user on behalf of which the simulated refund
            should be executed
          type: string
        walletId:
          description: Identifier of the wallet to be credited
          type: string
        amount:
          description: Refund amount
          type: number
        currency:
          description: |-
            Base currency for this refund

            This three-character currency code must comply with ISO-4217
          type: string
        status:
          description: The status code of the simulated notification
          type: integer
        transactionReference:
          description: The reference of the transaction
          type: string
        payinId:
          description: The universally unique identifier (UUID) of the payin
          type: string
      required:
      - payinId
      type: object
    NotificationSimulationChargebacks:
      properties:
        transactionReference:
          description: The reference of the transaction
          type: string
      required:
      - transactionReference
      type: object
    NotificationSimulationAuthorizations:
      example:
        walletId: walletId
        amount: 0.8008281904610115
        transactionReference: transactionReference
        profile: profile
        currency: currency
        cardPaymentMethod:
          country: country
          maskedPan: maskedPan
          cardExpiryYear: cardExpiryYear
          cardHolder: cardHolder
          brand: brand
          cardExpiryMonth: cardExpiryMonth
          issuer: issuer
          token: token
        userId: userId
        status: 6
      properties:
        amount:
          description: Authorization amount
          type: number
        cardPaymentMethod:
          $ref: '#/components/schemas/NotificationSimulationAuthorizations_cardPaymentMethod'
        currency:
          description: |-
            Base currency for this authorization

            This three-character currency code must comply with ISO-4217
          type: string
        status:
          description: The status code of the simulated notification
          type: integer
        transactionReference:
          description: The reference of the transaction
          type: string
        userId:
          description: |
            Identifier of the user on behalf of which the simulated
            authorization should be executed
          type: string
        walletId:
          description: Identifier of the wallet to be credited
          type: string
        profile:
          description: |
            HiPay merchant identifier (mid) to be used for the operation.
            Required if the client has multiple merchant identifiers associated.
            If only one mid is associated, then that one is used for the
            operation.
          type: string
      required:
      - amount
      - currency
      - walletId
      type: object
    RefundRequest:
      properties:
        payinId:
          description: The payin universally unique identifier (UUID)
          type: string
        amount:
          description: Refund amount
          type: number
        currency:
          description: |-
            Base currency for this refund

            This three-character currency code must comply with ISO-4217
          type: string
        profile:
          description: |
            HiPay merchant identifier (mid) to be used for the operation.
            Required if the client has multiple merchant identifiers associated.
            If only one mid is associated, then that one is used for the
            operation. Mandatory for legacy payins refunds
          type: string
      required:
      - payinUid
      type: object
    TopupCardRequest:
      example:
        profile: profile
        token: token
      properties:
        token:
          description: |
            The Card token generated by HiPay. Learn more in the [Tokenization](/guide/acquiring/card-tokenization.html) article.
          type: string
        profile:
          description: "Your HiPay Merchant ID. Required if you have multiple MIDs,\
            \ otherwise empty."
          type: string
      required:
      - token
      type: object
    CaptureResponse:
      example:
        capturedAmount: capturedAmount
        authorizationCode: authorizationCode
        transactionReference: transactionReference
        profile: profile
        dateAuthorized: dateAuthorized
        message: message
        dateUpdated: dateUpdated
        dateCreated: dateCreated
        authorizedAmount: authorizedAmount
        decimals: decimals
        currency: currency
        operation: operation
        refundedAmount: refundedAmount
        status: status
      properties:
        operation:
          description: This value will always be 'capture'.
          type: string
        profile:
          description: "HiPay merchant identifier (mid), also known as profile"
          type: string
        authorizationCode:
          description: HiPay authorization code linked to the payin
          type: string
        transactionReference:
          description: The reference of the transaction
          type: string
        dateCreated:
          description: The creation date of the payin
          type: string
        dateUpdated:
          description: The last update date of the payin
          type: string
        dateAuthorized:
          description: The authorized date of the payin
          type: string
        status:
          description: Transaction status returned by HiPay
          type: string
        message:
          description: Message returned by HiPay
          type: string
        authorizedAmount:
          description: Authorized amount
          type: string
        capturedAmount:
          description: Captured amount
          type: string
        refundedAmount:
          description: Refunded amount
          type: string
        decimals:
          description: |
            The number of digits after the decimal point of the transaction
            amount
          type: string
        currency:
          description: |-
            Base currency for this payin

            This three-character currency code must comply with ISO-4217
          type: string
      type: object
    AuthorizationRequest:
      example:
        zipCode: zipCode
        country: country
        acceptUrl: acceptUrl
        firstname: firstname
        orderId: orderId
        city: city
        description: description
        eci: eci
        declineUrl: declineUrl
        currency: currency
        ipaddr: ipaddr
        email: email
        walletId: walletId
        amount: 0.8008281904610115
        exceptionUrl: exceptionUrl
        pendingUrl: pendingUrl
        profile: profile
        cardHolder: cardHolder
        userId: userId
        deviceChannel: 6
        lastname: lastname
        cancelUrl: cancelUrl
        authenticationIndicator: authenticationIndicator
        issuerBankId: issuerBankId
        phone: phone
        streetAddress: streetAddress
        topupCardId: topupCardId
        paymentProduct: paymentProduct
        browserInfo:
          screenWidth: 5
          javaEnabled: true
          deviceFingerprint: deviceFingerprint
          timezone: timezone
          httpAccept: httpAccept
          screenHeight: 5
          javascriptEnabled: true
          language: language
          colorDepth: 1
          ipaddr: ipaddr
          httpUserAgent: httpUserAgent
      properties:
        amount:
          description: The amount of the operation.
          type: number
        currency:
          description: |
            The currency of the operation. Format: ISO-4217.
          type: string
        walletId:
          description: The unique identifier of the wallet to be credited.
          type: string
        userId:
          description: The unique identifier of the user requesting the operation.
          type: string
        topupCardId:
          description: The unique identifier for the user's Topup Card.
          type: string
        acceptUrl:
          description: |
            The URL to return the end user to once the payment process is completed successfully.
          type: string
        declineUrl:
          description: |
            The URL to return the end user to after the acquirer declines the payment.
          type: string
        pendingUrl:
          description: |
            The URL to return your end-user to when the payment request was
            submitted to the acquirer but response is not yet available.
          type: string
        exceptionUrl:
          description: The URL to return your end-user to after a system failure
          type: string
        cancelUrl:
          description: The URL to return your end-user to after a system failure
          type: string
        eci:
          description: |
            The ECI indicates the security level at which the payment
            information is processed between the cardholder and Treezor customer
          type: string
        authenticationIndicator:
          description: |
            If the payment product is a credit or debit card, this parameter
            indicates if the 3-D Secure authentication should be performed for
            this transaction
          type: string
        orderId:
          description: "The unique identifier of the order, guaranteeing the uniqueness\
            \ of the transaction. \n\nMust be unique and abide by the following rules:\n\
            * Length: min. 32 characters\n* Structure: `<yourCompanyName>_order_<uniqueIdentifier>`\n"
          type: string
        description:
          description: The order short description.
          type: string
        paymentProduct:
          description: |
            The payment method used for the top-up.

            Depending on the payment product, parameters specific to the payment method are required.
          type: string
        issuerBankId:
          description: |
            This parameter is specific to the iDEAL payment product.

            This is the Business Identifier Code (BIC) of the end user issuer bank
          type: string
        ipaddr:
          description: The IP address of the end user making a top-up
          type: string
        deviceChannel:
          description: |-
            This parameter is specific to the PSD2

            Channel through which the transaction is being processed
          type: integer
        browserInfo:
          $ref: '#/components/schemas/AuthorizationRequest_browserInfo'
        profile:
          description: |
            Your HiPay Merchant ID. Required if you have multiple MIDs, otherwise empty.
          type: string
        firstname:
          description: The first name of the user.
          type: string
        lastname:
          description: The last name of the user.
          type: string
        email:
          description: The email of the user.
          type: string
        phone:
          description: The phone number of the user.
          type: string
        streetAddress:
          description: The residence street name and number of the user.
          type: string
        city:
          description: The residence city of the user.
          type: string
        zipCode:
          description: The residence city zipcode of the user.
          type: string
        country:
          description: |
            The residence country of the user. Format: ISO 3166 alpha-2
          type: string
        cardHolder:
          description: The name associated to the card.
          type: string
      required:
      - acceptUrl
      - amount
      - authenticationIndicator
      - browserInfo
      - cancelUrl
      - cardHolder
      - city
      - country
      - currency
      - declineUrl
      - description
      - deviceChannel
      - eci
      - email
      - exceptionUrl
      - firstname
      - lastname
      - orderId
      - paymentProduct
      - pendingUrl
      - phone
      - streetAddress
      - userId
      - walletId
      - zipCode
      type: object
    TopupCards:
      example:
        topupCards:
        - country: country
          maskedPan: maskedPan
          profile: profile
          cardExpiryYear: cardExpiryYear
          cardType: cardType
          cardHolder: cardHolder
          updatedDate: updatedDate
          userId: userId
          cardExpiryMonth: cardExpiryMonth
          issuer: issuer
          token: token
          domesticNetwork: domesticNetwork
          createdDate: createdDate
          topupCardId: topupCardId
          brand: brand
          providerName: providerName
          status: VALIDATED
        - country: country
          maskedPan: maskedPan
          profile: profile
          cardExpiryYear: cardExpiryYear
          cardType: cardType
          cardHolder: cardHolder
          updatedDate: updatedDate
          userId: userId
          cardExpiryMonth: cardExpiryMonth
          issuer: issuer
          token: token
          domesticNetwork: domesticNetwork
          createdDate: createdDate
          topupCardId: topupCardId
          brand: brand
          providerName: providerName
          status: VALIDATED
      properties:
        topupCards:
          items:
            $ref: '#/components/schemas/TopupCards_topupCards_inner'
          type: array
      type: object
    Authorization:
      example:
        creditorIban: "null"
        authorizationDate: "null"
        paymentExceptionUrl: "null"
        creditorName: "null"
        createdIp: createdIp
        authorizationId: authorizationId
        creditorBIC: "null"
        informationStatus: informationStatus
        paymentPostDataUrl: "null"
        virtualIbanId: 5.637376656633329
        additionalData: "null"
        paymentPostUrl: "null"
        ibanFullname: "null"
        walletId: walletId
        ibanBic: "null"
        profile: profile
        cartId: 1.4658129805029452
        codeStatus: codeStatus
        virtualIbanReference: "null"
        userFirstname: userFirstname
        userLastname: userLastname
        subtotalItems: "null"
        authorizationStatus: CANCELED
        ibanTxEndToEndId: "null"
        creditorCountry: "null"
        subtotalTax: "null"
        paymentCanceledUrl: "null"
        paymentMethodId: paymentMethodId
        paymentWaitingUrl: "null"
        mandateId: 5.962133916683182
        walletAlias: walletAlias
        currency: currency
        distributorFee: "null"
        walletEventName: walletEventName
        forwardUrl: "null"
        creditorAddressLine: "null"
        messageToUser: messageToUser
        refundAmount: 6.027456183070403
        ibanTxId: "null"
        amount: 0.8008281904610115
        authorizationTag: "null"
        paymentAcceptedUrl: "null"
        userId: userId
        DbtrIBAN: "null"
        paymentLanguage: "null"
        paymentRefusedUrl: "null"
        createdDate: createdDate
        paymentHtml: "null"
        subtotalServices: "null"
        ibanId: "null"
      properties:
        authorizationId:
          description: The universally unique identifier (UUID) of the authorization.
          type: string
        userId:
          description: The unique identifier of the User requesting the authorization.
          type: string
        walletId:
          description: IThe unique identifier of the wallet to be credited
          type: string
        userFirstname:
          description: The firstname of the user
          type: string
        userLastname:
          description: The lastname of the user
          type: string
        walletEventName:
          description: The name of the Wallet
          type: string
        walletAlias:
          type: string
        messageToUser:
          description: Message to send to wallet user
          type: string
        authorizationStatus:
          description: "Status of the authorization.\n\n Possible values: \n - *CANCELED*\
            \ \n - *EXPIRED*"
          enum:
          - CANCELED
          - EXPIRED
          type: string
        paymentMethodId:
          description: Treezor internal payment method identifier
          type: string
        amount:
          description: Authorization amount
          type: number
        currency:
          description: |-
            Base currency for this authorization

            This three-character currency code must comply with ISO-4217
          type: string
        createdDate:
          description: Creation date of the authorization
          type: string
        codeStatus:
          description: "Treezor status code mixed with HiPay notification status code:\
            \ 150000 + (status code). \n\nExample: For a successful payin, the Hipay\
            \ notification status code will be 118. The codeStatus will be 150118\n"
          type: string
        informationStatus:
          description: Informational message towards the user related to the Hipay
            status code.
          type: string
        refundAmount:
          description: Refunded amount
          type: number
        profile:
          description: "Your HiPay Merchant ID. Required if you have multiple MIDs,\
            \ otherwise empty."
          type: string
        DbtrIBAN:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        createdIp:
          description: IP address of the customer making the top-up
          type: string
        authorizationTag:
          default: "null"
          description: "This field is not used, always empty"
          nullable: true
          type: string
        authorizationDate:
          default: "null"
          description: "This field is not used, always 0000-00-00"
          nullable: true
          type: string
        cartId:
          description: "This field is not used, always 0"
          type: number
        subtotalItems:
          default: "null"
          description: "This field is not used, always 0.00"
          nullable: true
          type: string
        subtotalServices:
          default: "null"
          description: This field is not used always 0.00
          nullable: true
          type: string
        subtotalTax:
          default: "null"
          description: This field is not used always 0.00
          nullable: true
          type: string
        distributorFee:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentHtml:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentLanguage:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentPostUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentPostDataUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentAcceptedUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentWaitingUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentCanceledUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentRefusedUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        paymentExceptionUrl:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanFullname:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanBic:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanTxEndToEndId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        ibanTxId:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        forwardUrl:
          default: "null"
          description: "For some payment methods, the end user must be redirected\
            \ to this URL in order for him to enter additional payment information."
          nullable: true
          type: string
        mandateId:
          default: 0
          description: "This field is not used, always 0"
          nullable: true
          type: number
        creditorName:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorAddressLine:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorCountry:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorIban:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        creditorBIC:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        virtualIbanId:
          description: "This field is not used, always null"
          nullable: true
          type: number
        virtualIbanReference:
          default: "null"
          description: "This field is not used, always null"
          nullable: true
          type: string
        additionalData:
          default: "null"
          description: "This field can be empty or contain information about an external\
            \ provider. \n"
          nullable: true
          type: string
    NotificationSimulationAuthorizationResponse:
      example:
        transactionReference: transactionReference
        authorizationId: authorizationId
      properties:
        transactionReference:
          description: The reference of the transaction
          type: string
        authorizationId:
          description: The universally unique identifier (UUID) of the authorization
          type: string
      type: object
    NotificationSimulationPayinResponse:
      example:
        payinId: payinId
        transactionReference: transactionReference
      properties:
        transactionReference:
          description: The reference of the transaction
          type: string
        payinId:
          description: The universally unique identifier (UUID) of the payin
          type: string
      type: object
    NotificationSimulationRefundResponse:
      example:
        transactionReference: transactionReference
        refundId: refundId
      properties:
        transactionReference:
          description: The reference of the transaction
          type: string
        refundId:
          description: The universally unique identifier (UUID) of the refund
          type: string
      type: object
    NotificationSimulationChargebackResponse:
      example:
        chargebackId: chargebackId
        transactionReference: transactionReference
      properties:
        transactionReference:
          description: The reference of the transaction being chargebacked
          type: string
        chargebackId:
          description: The universally unique identifier (UUID) of the chargeback
          type: string
      type: object
    BeneficiaryObject:
      example:
        beneficiaries:
        - address: address
          sepaCreditorIdentifier: sepaCreditorIdentifier
          nickName: nickName
          sddCoreBlacklist:
          - sddCoreBlacklist
          - sddCoreBlacklist
          isActive: true
          userId: 6
          createdDate: createdDate
          sddCoreKnownUniqueMandateReference:
          - sddCoreKnownUniqueMandateReference
          - sddCoreKnownUniqueMandateReference
          iban: iban
          name: name
          modifiedDate: modifiedDate
          id: 0
          tag: tag
          bic: bic
          sddB2bWhitelist:
          - uniqueMandateReference: uniqueMandateReference
            walletId: 1.4658129805029452
            isRecurrent: true
          - uniqueMandateReference: uniqueMandateReference
            walletId: 1.4658129805029452
            isRecurrent: true
          usableForSct: false
        - address: address
          sepaCreditorIdentifier: sepaCreditorIdentifier
          nickName: nickName
          sddCoreBlacklist:
          - sddCoreBlacklist
          - sddCoreBlacklist
          isActive: true
          userId: 6
          createdDate: createdDate
          sddCoreKnownUniqueMandateReference:
          - sddCoreKnownUniqueMandateReference
          - sddCoreKnownUniqueMandateReference
          iban: iban
          name: name
          modifiedDate: modifiedDate
          id: 0
          tag: tag
          bic: bic
          sddB2bWhitelist:
          - uniqueMandateReference: uniqueMandateReference
            walletId: 1.4658129805029452
            isRecurrent: true
          - uniqueMandateReference: uniqueMandateReference
            walletId: 1.4658129805029452
            isRecurrent: true
          usableForSct: false
      properties:
        beneficiaries:
          items:
            $ref: '#/components/schemas/BeneficiaryObject_beneficiaries_inner'
          type: array
      type: object
    DocumentObject:
      example:
        documents:
        - fileName: fileName
          temporaryUrl: temporaryUrl
          userLastname: userLastname
          documentType: documentType
          documentTypeId: 1
          documentTag: documentTag
          userId: 6
          residenceId: 5
          codeStatus: codeStatus
          thumbfileName: thumbfileName
          informationStatus: informationStatus
          createdDate: createdDate
          name: name
          modifiedDate: modifiedDate
          temporaryUrlThumb: temporaryUrlThumb
          userFirstname: userFirstname
          documentId: 0
          documentStatus: PENDING
        - fileName: fileName
          temporaryUrl: temporaryUrl
          userLastname: userLastname
          documentType: documentType
          documentTypeId: 1
          documentTag: documentTag
          userId: 6
          residenceId: 5
          codeStatus: codeStatus
          thumbfileName: thumbfileName
          informationStatus: informationStatus
          createdDate: createdDate
          name: name
          modifiedDate: modifiedDate
          temporaryUrlThumb: temporaryUrlThumb
          userFirstname: userFirstname
          documentId: 0
          documentStatus: PENDING
      properties:
        documents:
          items:
            $ref: '#/components/schemas/DocumentObject_documents_inner'
          type: array
      type: object
    MandateObject:
      example:
        mandates:
        - uniqueMandateReference: uniqueMandateReference
          debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
          isPaper: true
          debtorAddress: debtorAddress
          creditorName: creditorName
          debtorReferencePartyName: debtorReferencePartyName
          createdIp: createdIp
          debtorCity: debtorCity
          contractDescription: contractDescription
          title: title
          creditorZipCode: creditorZipCode
          creditorCountry: creditorCountry
          debtorBic: debtorBic
          debtorIban: debtorIban
          mandateStatus: PENDING
          mandateId: 0
          creditorCity: creditorCity
          debtorCountry: FR
          debtorSignatureIp: debtorSignatureIp
          creditorReferencePartyName: creditorReferencePartyName
          sepaCreditorIdentifier: sepaCreditorIdentifier
          creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
          debtorIdentificationCode: debtorIdentificationCode
          signed: 1
          debtorName: debtorName
          debtorZipCode: debtorZipCode
          userId: 6
          legalInformations: legalInformations
          contractIdentificationNumber: contractIdentificationNumber
          creditorAddress: creditorAddress
          createdDate: 2000-01-23T04:56:07.000+00:00
          signatureDate: 2000-01-23
          revocationSignatureDate: 2000-01-23T04:56:07.000+00:00
          sddType: core
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          sequenceType: one-off
        - uniqueMandateReference: uniqueMandateReference
          debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
          isPaper: true
          debtorAddress: debtorAddress
          creditorName: creditorName
          debtorReferencePartyName: debtorReferencePartyName
          createdIp: createdIp
          debtorCity: debtorCity
          contractDescription: contractDescription
          title: title
          creditorZipCode: creditorZipCode
          creditorCountry: creditorCountry
          debtorBic: debtorBic
          debtorIban: debtorIban
          mandateStatus: PENDING
          mandateId: 0
          creditorCity: creditorCity
          debtorCountry: FR
          debtorSignatureIp: debtorSignatureIp
          creditorReferencePartyName: creditorReferencePartyName
          sepaCreditorIdentifier: sepaCreditorIdentifier
          creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
          debtorIdentificationCode: debtorIdentificationCode
          signed: 1
          debtorName: debtorName
          debtorZipCode: debtorZipCode
          userId: 6
          legalInformations: legalInformations
          contractIdentificationNumber: contractIdentificationNumber
          creditorAddress: creditorAddress
          createdDate: 2000-01-23T04:56:07.000+00:00
          signatureDate: 2000-01-23
          revocationSignatureDate: 2000-01-23T04:56:07.000+00:00
          sddType: core
          modifiedDate: 2000-01-23T04:56:07.000+00:00
          sequenceType: one-off
      properties:
        mandates:
          items:
            $ref: '#/components/schemas/MandateObject_mandates_inner'
          type: array
      type: object
    CardObject:
      example:
        cards:
        - limitsGroup: limitsGroup
          metadata: metadata
          endDate: endDate
          optionNfc: 1
          virtualConverted: 2
          limitPaymentWeek: 6
          freeCustomizedInfo: freeCustomizedInfo
          publicToken: publicToken
          pinTryExceeds: 3
          limitPaymentAll: 9
          totalPaymentYear: 6
          isLive: 9
          limitAtmYear: 6
          optionForeign: 1
          limitPaymentDay: 8
          limitPaymentMonth: 9
          eventName: eventName
          optionAtm: 7
          mccRestrictionGroupId: 5
          cardLanguages: cardLanguages
          walletId: 1
          maskedPan: maskedPan
          deliveryPostcode: deliveryPostcode
          optionOnline: 1
          totalAtmWeek: 1
          letterCustomizedInfo: letterCustomizedInfo
          customizeInfo: customizeInfo
          totalPaymentAll: 3
          totalRows: 7
          limitAtmAll: 5
          totalPaymentDay: 3
          merchantRestrictionGroupId: 2
          walletCardtransactionId: 5
          cardDesign: cardDesign
          cardId: 0
          modifiedDate: modifiedDate
          startDate: startDate
          logoId: logoId
          statusCode: UNLOCK
          totalAtmMonth: 6
          CVV: CVV
          deliveryFirstname: deliveryFirstname
          originalCardId: 7
          embossedName: embossedName
          mobileSent: mobileSent
          expiryDate: expiryDate
          limitAtmDay: 4
          logoBackId: logoBackId
          countryCode: countryCode
          deliveryTitle: deliveryTitle
          eventAlias: eventAlias
          deliveryLastname: deliveryLastname
          totalPaymentWeek: 6
          modifiedBy: 0
          lang: lang
          physical: 4
          limitAtmWeek: 1
          totalPaymentMonth: 5
          deliveryCity: deliveryCity
          paymentDailyLimit: 6.4384236
          totalAtmAll: 6
          limitPaymentYear: 9
          renewalType: A
          deliveryAddress2: deliveryAddress2
          totalAtmDay: 2
          packageId: packageId
          deliveryAddress3: deliveryAddress3
          countryRestrictionGroupId: 7
          deliveryAddress1: deliveryAddress1
          renewalDate: renewalDate
          userId: 6
          cardTag: cardTag
          createdDate: createdDate
          permsGroup: permsGroup
          createdBy: 7
          restrictionGroupLimits:
          - paymentDailyLimit: 0.6519181
            merchantIdRestrictionGroups: 0
            mccRestrictionGroups: 0
            countryRestrictionGroups: 0
          - paymentDailyLimit: 0.6519181
            merchantIdRestrictionGroups: 0
            mccRestrictionGroups: 0
            countryRestrictionGroups: 0
          deliveryCountry: deliveryCountry
          limitAtmMonth: 7
          cancellationNumber: cancellationNumber
          currencyCode: currencyCode
          designCode: designCode
          totalAtmYear: 3
        - limitsGroup: limitsGroup
          metadata: metadata
          endDate: endDate
          optionNfc: 1
          virtualConverted: 2
          limitPaymentWeek: 6
          freeCustomizedInfo: freeCustomizedInfo
          publicToken: publicToken
          pinTryExceeds: 3
          limitPaymentAll: 9
          totalPaymentYear: 6
          isLive: 9
          limitAtmYear: 6
          optionForeign: 1
          limitPaymentDay: 8
          limitPaymentMonth: 9
          eventName: eventName
          optionAtm: 7
          mccRestrictionGroupId: 5
          cardLanguages: cardLanguages
          walletId: 1
          maskedPan: maskedPan
          deliveryPostcode: deliveryPostcode
          optionOnline: 1
          totalAtmWeek: 1
          letterCustomizedInfo: letterCustomizedInfo
          customizeInfo: customizeInfo
          totalPaymentAll: 3
          totalRows: 7
          limitAtmAll: 5
          totalPaymentDay: 3
          merchantRestrictionGroupId: 2
          walletCardtransactionId: 5
          cardDesign: cardDesign
          cardId: 0
          modifiedDate: modifiedDate
          startDate: startDate
          logoId: logoId
          statusCode: UNLOCK
          totalAtmMonth: 6
          CVV: CVV
          deliveryFirstname: deliveryFirstname
          originalCardId: 7
          embossedName: embossedName
          mobileSent: mobileSent
          expiryDate: expiryDate
          limitAtmDay: 4
          logoBackId: logoBackId
          countryCode: countryCode
          deliveryTitle: deliveryTitle
          eventAlias: eventAlias
          deliveryLastname: deliveryLastname
          totalPaymentWeek: 6
          modifiedBy: 0
          lang: lang
          physical: 4
          limitAtmWeek: 1
          totalPaymentMonth: 5
          deliveryCity: deliveryCity
          paymentDailyLimit: 6.4384236
          totalAtmAll: 6
          limitPaymentYear: 9
          renewalType: A
          deliveryAddress2: deliveryAddress2
          totalAtmDay: 2
          packageId: packageId
          deliveryAddress3: deliveryAddress3
          countryRestrictionGroupId: 7
          deliveryAddress1: deliveryAddress1
          renewalDate: renewalDate
          userId: 6
          cardTag: cardTag
          createdDate: createdDate
          permsGroup: permsGroup
          createdBy: 7
          restrictionGroupLimits:
          - paymentDailyLimit: 0.6519181
            merchantIdRestrictionGroups: 0
            mccRestrictionGroups: 0
            countryRestrictionGroups: 0
          - paymentDailyLimit: 0.6519181
            merchantIdRestrictionGroups: 0
            mccRestrictionGroups: 0
            countryRestrictionGroups: 0
          deliveryCountry: deliveryCountry
          limitAtmMonth: 7
          cancellationNumber: cancellationNumber
          currencyCode: currencyCode
          designCode: designCode
          totalAtmYear: 3
      properties:
        cards:
          items:
            $ref: '#/components/schemas/CardObject_cards_inner'
          type: array
      type: object
    MerchantIdGroupObject:
      example:
        merchantIdRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          merchants:
          - merchants
          - merchants
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          merchants:
          - merchants
          - merchants
          startDate: startDate
          status: PENDING
      properties:
        merchantIdRestrictionGroups:
          items:
            $ref: '#/components/schemas/MerchantIdGroupObject_merchantIdRestrictionGroups_inner'
          type: array
      type: object
    ScaWalletObject:
      example:
        scaWallets:
        - clientId: clientId
          settingsProfile: settingsProfile
          scaWalletTag: scaWalletTag
          lockReasons:
          - ISSUER
          - ISSUER
          activationCodeExpiryDate: 2024-05-30T16:29:22+02:00
          creationDate: 2024-05-30T16:09:22+02:00
          userId: userId
          subStatus: CREATING_IN_PROGRESS
          mobileWallet:
            pushMessagingId: pushMessagingId
            productModel: productModel
            os: os
            deviceIdType: deviceIdType
            secretFingerprint: secretFingerprint
            lastEligibilityCheck: 2000-01-23T04:56:07.000+00:00
            nfc: true
            deviceId: deviceId
            appBuildNumber: appBuildNumber
            productFingerprint: productFingerprint
            mobileUpdateDate: mobileUpdateDate
            appleTeamId: appleTeamId
            emulator: true
            pushMessagingProvider: pushMessagingProvider
            osVersion: osVersion
            root: root
            sdkVersion: sdkVersion
            brand: brand
          deletionDate: 2000-01-23T04:56:07.000+00:00
          authenticationMethods:
          - "{}"
          - "{}"
          passcodeStatus: SET
          lockMessage: lockMessage
          id: id
          activationCode: activationCode
          locked: true
          activationDate: activationDate
          status: CREATING
          invalidActivationAttempts: invalidActivationAttempts
        - clientId: clientId
          settingsProfile: settingsProfile
          scaWalletTag: scaWalletTag
          lockReasons:
          - ISSUER
          - ISSUER
          activationCodeExpiryDate: 2024-05-30T16:29:22+02:00
          creationDate: 2024-05-30T16:09:22+02:00
          userId: userId
          subStatus: CREATING_IN_PROGRESS
          mobileWallet:
            pushMessagingId: pushMessagingId
            productModel: productModel
            os: os
            deviceIdType: deviceIdType
            secretFingerprint: secretFingerprint
            lastEligibilityCheck: 2000-01-23T04:56:07.000+00:00
            nfc: true
            deviceId: deviceId
            appBuildNumber: appBuildNumber
            productFingerprint: productFingerprint
            mobileUpdateDate: mobileUpdateDate
            appleTeamId: appleTeamId
            emulator: true
            pushMessagingProvider: pushMessagingProvider
            osVersion: osVersion
            root: root
            sdkVersion: sdkVersion
            brand: brand
          deletionDate: 2000-01-23T04:56:07.000+00:00
          authenticationMethods:
          - "{}"
          - "{}"
          passcodeStatus: SET
          lockMessage: lockMessage
          id: id
          activationCode: activationCode
          locked: true
          activationDate: activationDate
          status: CREATING
          invalidActivationAttempts: invalidActivationAttempts
      properties:
        scaWallets:
          items:
            $ref: '#/components/schemas/ScaWalletObject_scaWallets_inner'
          type: array
      type: object
    SupportUserObject:
      example:
        password: password
        metadata: "{}"
        clients:
        - clientId: clientId
          lastLoginAt: 2000-01-23
          scopes:
          - read_all
          - read_all
          acceptedAt: 2000-01-23
        - clientId: clientId
          lastLoginAt: 2000-01-23
          scopes:
          - read_all
          - read_all
          acceptedAt: 2000-01-23
        samlKey: samlKey
        wrongPwdAttempts: 0
        id: id
        keyPairId: keyPairId
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        samlKey:
          nullable: true
          type: string
        keyPairId:
          type: string
        clients:
          items:
            $ref: '#/components/schemas/SupportUserObject_clients_inner'
          type: array
        wrongPwdAttempts:
          type: integer
        metadata:
          nullable: true
          type: object
      type: object
    TaxResidenceObject:
      example:
        taxResidences:
        - country: country
          liabilityWaiver: true
          createdDate: createdDate
          isDeleted: true
          deletedDate: deletedDate
          taxPayerId: taxPayerId
          lastUpdate: lastUpdate
          id: 0
          userId: 6
        - country: country
          liabilityWaiver: true
          createdDate: createdDate
          isDeleted: true
          deletedDate: deletedDate
          taxPayerId: taxPayerId
          lastUpdate: lastUpdate
          id: 0
          userId: 6
      properties:
        taxResidences:
          items:
            $ref: '#/components/schemas/TaxResidenceObject_taxResidences_inner'
          type: array
      type: object
    TransferObject:
      example:
        transfers:
        - beneficiaryWalletAlias: beneficiaryWalletAlias
          transferTypeId: 2
          walletId: 6
          amount: amount
          transferStatus: PENDING
          transferTag: transferTag
          label: label
          totalRows: 7
          transferId: 0
          transferDate: transferDate
          codeStatus: codeStatus
          foreignId: foreignId
          informationStatu: informationStatu
          createdDate: createdDate
          beneficiaryWalletTypeId: 5
          modifiedDate: modifiedDate
          walletAlias: walletAlias
          walletTypeId: 1
          currency: currency
          beneficiaryWalletId: 5
          walletEventName: walletEventName
          beneficiaryWalletEventName: beneficiaryWalletEventName
          partnerFee: partnerFee
        - beneficiaryWalletAlias: beneficiaryWalletAlias
          transferTypeId: 2
          walletId: 6
          amount: amount
          transferStatus: PENDING
          transferTag: transferTag
          label: label
          totalRows: 7
          transferId: 0
          transferDate: transferDate
          codeStatus: codeStatus
          foreignId: foreignId
          informationStatu: informationStatu
          createdDate: createdDate
          beneficiaryWalletTypeId: 5
          modifiedDate: modifiedDate
          walletAlias: walletAlias
          walletTypeId: 1
          currency: currency
          beneficiaryWalletId: 5
          walletEventName: walletEventName
          beneficiaryWalletEventName: beneficiaryWalletEventName
          partnerFee: partnerFee
      properties:
        transfers:
          items:
            $ref: '#/components/schemas/TransferObject_transfers_inner'
          type: array
      type: object
    UserObject:
      example:
        users:
        - country: country
          legalNetIncomeRange: legalNetIncomeRange
          occupation: occupation
          residentCountriesSanctions: 1
          language: language
          sourceOfFunds: donation
          middleNames: middleNames
          legalName: legalName
          occupationType: self_employed
          informationStatus: informationStatus
          optInMailing: 7
          incomeRange: incomeRange
          legalTvaNumber: legalTvaNumber
          birthCountry: birthCountry
          involvedSanctions: 6
          state: state
          legalRegistrationDate: legalRegistrationDate
          kycReviewComment: kycReviewComment
          parentUserId: 6
          postcode: postcode
          kycReview: 3
          legalAnnualTurnOver: legalAnnualTurnOver
          taxNumber: taxNumber
          personalAssetsRange: 6
          totalRows: 9
          secondaryAddress1: secondaryAddress1
          secondaryAddress2: secondaryAddress2
          lastname: lastname
          secondaryAddress3: secondaryAddress3
          legalSector: legalSector
          codeStatus: codeStatus
          economicSanctions: 1
          nationality: nationality
          phone: phone
          activityOutsideEu: 1
          modifiedDate: modifiedDate
          walletCount: 4
          countryName: countryName
          taxResidence: taxResidence
          position: position
          distributionCountry: FR
          legalRegistrationNumber: legalRegistrationNumber
          birthday: birthday
          firstname: firstname
          userStatus: PENDING
          city: city
          timezone: timezone
          payinCount: 5
          title: M
          occupationCategory: 9
          isFreezed: 2
          legalNameEmbossed: legalNameEmbossed
          secondaryCity: secondaryCity
          legalNumberOfEmployeeRange: legalNumberOfEmployeeRange
          personalAssets: personalAssets
          isFrozen: 4
          effectiveBeneficiary: 7
          email: email
          secondaryCountry: secondaryCountry
          entitySanctionsQuestionnaire: 7
          monthlyIncomeRange: 8
          placeOfBirth: placeOfBirth
          sanctionsQuestionnaireDate: sanctionsQuestionnaireDate
          address3: address3
          address2: address2
          sepaCreditorIdentifier: sepaCreditorIdentifier
          address1: address1
          controllingPersonType: 1
          secondaryPostcode: secondaryPostcode
          mobile: mobile
          secondaryState: secondaryState
          specifiedUSPerson: 5
          userId: 0
          legalForm: legalForm
          parentType: shareholder
          nationalityOther: nationalityOther
          kycLevel: 9
          employeeType: 5
          createdDate: createdDate
          legalShareCapital: 2
          userTag: userTag
          legalSectorType: NAF
          isOnStockExchange: 1
        - country: country
          legalNetIncomeRange: legalNetIncomeRange
          occupation: occupation
          residentCountriesSanctions: 1
          language: language
          sourceOfFunds: donation
          middleNames: middleNames
          legalName: legalName
          occupationType: self_employed
          informationStatus: informationStatus
          optInMailing: 7
          incomeRange: incomeRange
          legalTvaNumber: legalTvaNumber
          birthCountry: birthCountry
          involvedSanctions: 6
          state: state
          legalRegistrationDate: legalRegistrationDate
          kycReviewComment: kycReviewComment
          parentUserId: 6
          postcode: postcode
          kycReview: 3
          legalAnnualTurnOver: legalAnnualTurnOver
          taxNumber: taxNumber
          personalAssetsRange: 6
          totalRows: 9
          secondaryAddress1: secondaryAddress1
          secondaryAddress2: secondaryAddress2
          lastname: lastname
          secondaryAddress3: secondaryAddress3
          legalSector: legalSector
          codeStatus: codeStatus
          economicSanctions: 1
          nationality: nationality
          phone: phone
          activityOutsideEu: 1
          modifiedDate: modifiedDate
          walletCount: 4
          countryName: countryName
          taxResidence: taxResidence
          position: position
          distributionCountry: FR
          legalRegistrationNumber: legalRegistrationNumber
          birthday: birthday
          firstname: firstname
          userStatus: PENDING
          city: city
          timezone: timezone
          payinCount: 5
          title: M
          occupationCategory: 9
          isFreezed: 2
          legalNameEmbossed: legalNameEmbossed
          secondaryCity: secondaryCity
          legalNumberOfEmployeeRange: legalNumberOfEmployeeRange
          personalAssets: personalAssets
          isFrozen: 4
          effectiveBeneficiary: 7
          email: email
          secondaryCountry: secondaryCountry
          entitySanctionsQuestionnaire: 7
          monthlyIncomeRange: 8
          placeOfBirth: placeOfBirth
          sanctionsQuestionnaireDate: sanctionsQuestionnaireDate
          address3: address3
          address2: address2
          sepaCreditorIdentifier: sepaCreditorIdentifier
          address1: address1
          controllingPersonType: 1
          secondaryPostcode: secondaryPostcode
          mobile: mobile
          secondaryState: secondaryState
          specifiedUSPerson: 5
          userId: 0
          legalForm: legalForm
          parentType: shareholder
          nationalityOther: nationalityOther
          kycLevel: 9
          employeeType: 5
          createdDate: createdDate
          legalShareCapital: 2
          userTag: userTag
          legalSectorType: NAF
          isOnStockExchange: 1
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserObject_users_inner'
          type: array
      type: object
    VirtualIbanObject:
      example:
        virtualibans:
        - walletId: 6
          validFrom: validFrom
          updatedDate: updatedDate
          numberOfTransactions: 5
          reference: reference
          createdDate: createdDate
          cumulatedAmount: cumulatedAmount
          virtualibanId: 0
          iban: iban
          maxUsage: 5
          typeId: 1
          tag: tag
          maxAmount: maxAmount
          validTo: validTo
        - walletId: 6
          validFrom: validFrom
          updatedDate: updatedDate
          numberOfTransactions: 5
          reference: reference
          createdDate: createdDate
          cumulatedAmount: cumulatedAmount
          virtualibanId: 0
          iban: iban
          maxUsage: 5
          typeId: 1
          tag: tag
          maxAmount: maxAmount
          validTo: validTo
      properties:
        virtualibans:
          items:
            $ref: '#/components/schemas/VirtualIbanObject_virtualibans_inner'
          type: array
      type: object
    CardPayment:
      example:
        "3dsExemptionType": 3dsExemptionType
        optimizedMerchantName: optimizedMerchantName
        authorizationNote: authorizationNote
        maskedPan: maskedPan
        is3DS: is3DS
        transactionSubtype: transactionSubtype
        merchantLogo: merchantLogo
        mid:
          country: country
          address: address
          city: city
          name: name
          value: value
        mcc:
          code: 1
        paymentCountry: paymentCountry
        cardId: cardId
        authorisationResponseCode:
          action: action
          description: description
          value: 5
        paymentLifeCycle:
        - valueDate: valueDate
          paymentCurrency: paymentCurrency
          paymentAmount: paymentAmount
          paymentLocalAmount: paymentLocalAmount
          authorizationIssuerTime: authorizationIssuerTime
        - valueDate: valueDate
          paymentCurrency: paymentCurrency
          paymentAmount: paymentAmount
          paymentLocalAmount: paymentLocalAmount
          authorizationIssuerTime: authorizationIssuerTime
        merchantCategory: merchantCategory
        localAmount:
          amount: 12000
          currency: "978"
      properties:
        mcc:
          $ref: '#/components/schemas/CardPayment_mcc'
        mid:
          $ref: '#/components/schemas/CardPayment_mid'
        localAmount:
          $ref: '#/components/schemas/CardPayment_localAmount'
        authorisationResponseCode:
          $ref: '#/components/schemas/CardPayment_authorisationResponseCode'
        paymentLifeCycle:
          items:
            $ref: '#/components/schemas/PaymentLifeCycle'
          type: array
        paymentCountry:
          nullable: true
          type: string
        cardId:
          type: string
        maskedPan:
          type: string
        is3DS:
          nullable: true
          type: string
        "3dsExemptionType":
          description: |
            Indicates why the transaction was exempted for 3DS authentication. See [3DS Exemption Type](/guide/cards/transactions.html#_3ds-exemption-type-3dsexemptiontype) for the value list.
          nullable: true
          type: string
        optimizedMerchantName:
          nullable: true
          type: string
        merchantLogo:
          nullable: true
          type: string
        merchantCategory:
          nullable: true
          type: string
        transactionSubtype:
          description: |
            Additional information regarding the type of card transaction. Values can be:
              * `OFT` – Offline transaction
              * `PRE` – Preauthorization
              * `SEP` – Second presentment
          nullable: true
          type: string
        authorizationNote:
          type: string
      type: object
    PaymentLifeCycle:
      example:
        valueDate: valueDate
        paymentCurrency: paymentCurrency
        paymentAmount: paymentAmount
        paymentLocalAmount: paymentLocalAmount
        authorizationIssuerTime: authorizationIssuerTime
      properties:
        authorizationIssuerTime:
          type: string
        valueDate:
          nullable: true
          type: string
        paymentAmount:
          type: string
        paymentLocalAmount:
          type: string
        paymentCurrency:
          type: string
      type: object
    Chargeback:
      properties:
        payinId:
          nullable: false
          type: string
        payinRefundId:
          nullable: false
          type: string
        transactionReference:
          nullable: false
          type: string
        payinTag:
          nullable: true
          type: string
        additionalData:
          items:
            type: string
          type: array
        chargebackReason:
          type: string
      type: object
    Payin:
      properties:
        messageToUser:
          nullable: true
          type: string
        codeStatus:
          nullable: false
          type: string
        informationStatus:
          nullable: true
          type: string
        payinTag:
          nullable: true
          type: string
        additionalData:
          items:
            type: string
          nullable: true
          type: array
        ibanFullname:
          nullable: true
          type: string
        dbtrIBAN:
          nullable: true
          type: string
        mandateId:
          nullable: true
          type: string
        ibanTxEndToEndId:
          nullable: true
          type: string
        payinId:
          type: string
        debtorName:
          nullable: true
          type: string
        uniqueMandateReference:
          nullable: true
          type: string
      type: object
    PayinObject:
      example:
        payins:
        - creditorIban: creditorIban
          paymentExceptionUrl: paymentExceptionUrl
          creditorName: creditorName
          createdIp: createdIp
          creditorBIC: creditorBIC
          informationStatus: informationStatus
          paymentPostDataUrl: paymentPostDataUrl
          virtualIbanId: 7
          paymentPostUrl: paymentPostUrl
          ibanFullname: ibanFullname
          walletId: 6
          ibanBic: ibanBic
          cartId: 1
          payinStatus: PENDING
          totalRows: 5
          codeStatus: 0
          virtualIbanReference: virtualIbanReference
          payinTag: payinTag
          userFirstname: userFirstname
          userLastname: userLastname
          subtotalItems: subtotalItems
          ibanTxEndToEndId: ibanTxEndToEndId
          creditorCountry: creditorCountry
          subtotalTax: subtotalTax
          payinId: payinId
          paymentCanceledUrl: paymentCanceledUrl
          paymentMethodId: 5
          paymentWaitingUrl: paymentWaitingUrl
          mandateId: 2
          walletAlias: walletAlias
          currency: currency
          distributorFee: distributorFee
          walletEventName: walletEventName
          forwardUrl: forwardUrl
          creditorAddressLine: creditorAddressLine
          messageToUser: messageToUser
          ibanTxId: ibanTxId
          refundAmount: refundAmount
          amount: amount
          paymentAcceptedUrl: paymentAcceptedUrl
          userId: userId
          paymentLanguage: paymentLanguage
          DbtrIBAN: DbtrIBAN
          paymentRefusedUrl: paymentRefusedUrl
          createdDate: createdDate
          payinDate: payinDate
          paymentHtml: paymentHtml
          subtotalServices: subtotalServices
          ibanId: ibanId
        - creditorIban: creditorIban
          paymentExceptionUrl: paymentExceptionUrl
          creditorName: creditorName
          createdIp: createdIp
          creditorBIC: creditorBIC
          informationStatus: informationStatus
          paymentPostDataUrl: paymentPostDataUrl
          virtualIbanId: 7
          paymentPostUrl: paymentPostUrl
          ibanFullname: ibanFullname
          walletId: 6
          ibanBic: ibanBic
          cartId: 1
          payinStatus: PENDING
          totalRows: 5
          codeStatus: 0
          virtualIbanReference: virtualIbanReference
          payinTag: payinTag
          userFirstname: userFirstname
          userLastname: userLastname
          subtotalItems: subtotalItems
          ibanTxEndToEndId: ibanTxEndToEndId
          creditorCountry: creditorCountry
          subtotalTax: subtotalTax
          payinId: payinId
          paymentCanceledUrl: paymentCanceledUrl
          paymentMethodId: 5
          paymentWaitingUrl: paymentWaitingUrl
          mandateId: 2
          walletAlias: walletAlias
          currency: currency
          distributorFee: distributorFee
          walletEventName: walletEventName
          forwardUrl: forwardUrl
          creditorAddressLine: creditorAddressLine
          messageToUser: messageToUser
          ibanTxId: ibanTxId
          refundAmount: refundAmount
          amount: amount
          paymentAcceptedUrl: paymentAcceptedUrl
          userId: userId
          paymentLanguage: paymentLanguage
          DbtrIBAN: DbtrIBAN
          paymentRefusedUrl: paymentRefusedUrl
          createdDate: createdDate
          payinDate: payinDate
          paymentHtml: paymentHtml
          subtotalServices: subtotalServices
          ibanId: ibanId
      properties:
        payins:
          items:
            $ref: '#/components/schemas/PayinObject_payins_inner'
          type: array
      type: object
    PayinRefund:
      properties:
        payinId:
          nullable: true
          type: string
        codeStatus:
          nullable: true
          type: string
        informationStatus:
          nullable: true
          type: string
        reasonTms:
          nullable: true
          type: string
        payinTag:
          nullable: true
          type: string
        messageToUser:
          nullable: true
          type: string
        ibanFullName:
          nullable: true
          type: string
        dbtrIBAN:
          nullable: true
          type: string
        ibanTxEndToEndId:
          nullable: true
          type: string
        mandateId:
          nullable: true
          type: string
        debtorName:
          nullable: true
          type: string
        uniqueMandateReference:
          nullable: true
          type: string
        additionalData:
          items:
            type: string
          type: array
      type: object
    Payout:
      properties:
        payoutTag:
          nullable: true
          type: string
        beneficiaryId:
          nullable: false
          type: string
        label:
          nullable: true
          type: string
        codeStatus:
          nullable: false
          type: string
        informationStatus:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        payoutTypeId:
          nullable: true
          type: string
        uniqueMandateReference:
          nullable: true
          type: string
        supportingFileLink:
          nullable: true
          type: string
        endToEndId:
          nullable: true
          type: string
        reasonCode:
          nullable: true
          type: string
        reasonDescription:
          nullable: true
          type: string
        beneficiaryName:
          nullable: true
          type: string
      type: object
    PayoutRefund:
      properties:
        payoutRefundTag:
          nullable: true
          type: string
        codeStatus:
          nullable: true
          type: string
        informationStatus:
          nullable: true
          type: string
        requestComment:
          nullable: true
          type: string
        reasonCode:
          nullable: true
          type: string
        refundDate:
          nullable: true
          type: string
        refundComment:
          nullable: true
          type: string
        payoutId:
          nullable: true
          type: string
        tag:
          nullable: true
          type: string
        beneficiaryName:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        endToEndId:
          nullable: true
          type: string
        uniqueMandateReference:
          nullable: true
          type: string
      type: object
    Transfer:
      properties:
        label:
          nullable: true
          type: string
        codeStatus:
          nullable: false
          type: string
        description:
          nullable: true
          type: string
        receiverId:
          deprecated: true
          nullable: false
          type: integer
        emitterId:
          deprecated: true
          nullable: false
          type: integer
        tag:
          nullable: true
          type: string
        informationStatus:
          nullable: true
          type: string
        creditorWalletId:
          type: string
        creditorFirstName:
          type: string
        creditorLastName:
          type: string
        creditorLegalName:
          type: string
        creditorWalletEventName:
          type: string
        debtorWalletId:
          type: string
        debtorFirstName:
          type: string
        debtorLastName:
          type: string
        debtorLegalName:
          type: string
        debtorWalletEventName:
          type: string
      type: object
    WalletObject:
      example:
        wallets:
        - eventMessage: eventMessage
          eventPayinEndDate: eventPayinEndDate
          eventPayinStartDate: eventPayinStartDate
          userLastname: userLastname
          payinCount: 9
          transferCount: 2
          jointUserId: 5
          informationStatus: informationStatus
          eventAlias: eventAlias
          eventName: eventName
          solde: 4
          currency: currency
          tariffId: 2
          urlImage: urlImage
          contractSigned: 7
          walletId: 0
          payoutCount: 3
          totalRows: 1
          userId: 5
          codeStatus: 1
          walletTag: walletTag
          createdDate: createdDate
          iban: iban
          modifiedDate: modifiedDate
          walletStatus: PENDING
          userFirstname: userFirstname
          walletTypeId: 6
          bic: bic
          authorizedBalance: 7
          eventDate: eventDate
        - eventMessage: eventMessage
          eventPayinEndDate: eventPayinEndDate
          eventPayinStartDate: eventPayinStartDate
          userLastname: userLastname
          payinCount: 9
          transferCount: 2
          jointUserId: 5
          informationStatus: informationStatus
          eventAlias: eventAlias
          eventName: eventName
          solde: 4
          currency: currency
          tariffId: 2
          urlImage: urlImage
          contractSigned: 7
          walletId: 0
          payoutCount: 3
          totalRows: 1
          userId: 5
          codeStatus: 1
          walletTag: walletTag
          createdDate: createdDate
          iban: iban
          modifiedDate: modifiedDate
          walletStatus: PENDING
          userFirstname: userFirstname
          walletTypeId: 6
          bic: bic
          authorizedBalance: 7
          eventDate: eventDate
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/WalletObject_wallets_inner'
          type: array
      type: object
    getRawWalletAccountDetail_200_response:
      example:
        firstname: firstname
        city: city
        address2: address2
        address1: address1
        iban: iban
        postcode: postcode
        countryName: countryName
        title: title
        bic: bic
        treezorAddress: "{}"
        lastname: lastname
      properties:
        bic:
          description: |
            The [BIC](/guide/overview/glossary.html#bank-identifier-code-bic) of the account.
          type: string
        iban:
          description: |
            The [IBAN](/guide/wallets/iban.html#virtual-iban) of the account.
          type: string
        title:
          description: |
            The title of the user who owns the account.
          type: string
        firstname:
          description: |
            The first name of the user who owns the account.
          type: string
        lastname:
          description: |
            The last name of the user who owns the account.
          type: string
        postcode:
          description: |
            The postal code of the address of the user who owns the account.
          type: string
        city:
          description: |
            The city of the address of the user who owns the account.
          type: string
        address1:
          description: |
            The address of the user who owns the account.
          type: string
        address2:
          description: |
            The second line of the address of the user who owns the account.
          type: string
        countryName:
          description: |
            The country of the address of the user who owns the account.
          type: string
        treezorAddress:
          type: object
      type: object
    getComputedWalletAccountDetail_200_response:
      example:
        link: https://xxx.s3.eu-west-3.amazonaws.com/tmp/xxx.pdf
        expireIn: 300
      properties:
        link:
          description: The URL to download the PDF file.
          example: https://xxx.s3.eu-west-3.amazonaws.com/tmp/xxx.pdf
          type: string
        expireIn:
          description: The time after which the download link expires (in seconds).
          example: 300
          type: integer
      type: object
    putAuth_request_oneOf:
      properties:
        grant_type:
          default: client_credentials
          description: |
            MUST BE "client_credentials" value for client credential flow.
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        scope:
          description: space separated
          type: string
      type: object
    putAuth_request_oneOf_1:
      properties:
        grant_type:
          default: password
          description: MUST BE "password" value for password credential flow
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        scope:
          description: space separated
          type: string
        username:
          type: string
        password:
          description: User password
          type: string
      type: object
    putAuth_request_oneOf_2:
      properties:
        grant_type:
          default: refresh_token
          description: MUST BE "refresh_token" value for refresh token flow
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        scope:
          description: space separated
          type: string
        refresh_token:
          type: string
      type: object
    putAuth_request:
      oneOf:
      - $ref: '#/components/schemas/putAuth_request_oneOf'
      - $ref: '#/components/schemas/putAuth_request_oneOf_1'
      - $ref: '#/components/schemas/putAuth_request_oneOf_2'
    putAuth_200_response_oneOf:
      example:
        access_token: access_token
        token_type: Bearer
        expires_in: 0
      properties:
        token_type:
          default: Bearer
          description: |
            This value must be passed in the "Authorization" header of your API requests as follows: "Authorization: Bearer <token>" (with a space between "Bearer" and the token value).
          type: string
        expires_in:
          default: 3600
          type: integer
        access_token:
          description: JWT token
          type: string
      type: object
    putAuth_200_response_oneOf_1:
      properties:
        token_type:
          default: Bearer
          description: |
            This value must be passed in the "Authorization" header of your API requests as follows: "Authorization: Bearer <token>" (with a space between "Bearer" and the token value).
          type: string
        expires_in:
          default: 3600
          type: integer
        access_token:
          description: JWT token
          type: string
        refresh_token:
          description: |
            This value must be passed in the "Authorization" header of your API requests as follows: "Authorization: Bearer <token>" (with a space between "Bearer" and the token value).
          type: string
      type: object
    putAuth_200_response_oneOf_2:
      properties:
        token_type:
          default: Bearer
          description: |
            This value must be passed in the "Authorization" header of your API requests as follows: "Authorization: Bearer <token>" (with a space between "Bearer" and the token value).
          type: string
        expires_in:
          default: 3600
          type: integer
        access_token:
          description: JWT token
          type: string
        refresh_token:
          description: |
            A refresh token to regenerate a JWT token without sending all of information request at the first request on password grant.
          type: string
      type: object
    putAuth_200_response:
      oneOf:
      - $ref: '#/components/schemas/putAuth_200_response_oneOf'
      - $ref: '#/components/schemas/putAuth_200_response_oneOf_1'
      - $ref: '#/components/schemas/putAuth_200_response_oneOf_2'
      type: object
    getWalletBalanceHistory_200_response_errors_inner:
      example:
        currentBalance: 0.8008281904610115
        currency: currency
        authorizedBalance: 6.027456183070403
      properties:
        currentBalance:
          type: number
        authorizedBalance:
          type: number
        currency:
          type: string
      type: object
    getWalletBalanceHistory_200_response:
      example:
        errors:
        - currentBalance: 0.8008281904610115
          currency: currency
          authorizedBalance: 6.027456183070403
        - currentBalance: 0.8008281904610115
          currency: currency
          authorizedBalance: 6.027456183070403
      properties:
        errors:
          items:
            $ref: '#/components/schemas/getWalletBalanceHistory_200_response_errors_inner'
          type: array
    getCoCardTransactions_200_response_cardTransactions_inner:
      example:
        fees: fees
        cardtransactionId: cardtransactionId
        paymentCountry: paymentCountry
        merchantName: merchantName
        mccCode: mccCode
        transactionTypeIdentifier: transactionTypeIdentifier
        limitPaymentWeek: limitPaymentWeek
        senderData: senderData
        publicToken: publicToken
        limitPaymentAll: limitPaymentAll
        limitAtmYear: limitAtmYear
        merchantId: merchantId
        limitPaymentDay: limitPaymentDay
        paymentId: paymentId
        limitPaymentMonth: limitPaymentMonth
        paymentLocalDate: paymentLocalDate
        acquirerId: acquirerId
        paymentLocalAmount: paymentLocalAmount
        totalLimitPaymentMonth: totalLimitPaymentMonth
        walletId: walletId
        paymentLocalTime: paymentLocalTime
        merchantCity: merchantCity
        posPostcode: posPostcode
        cardDigitalizationExternalId: cardDigitalizationExternalId
        limitAtmAll: limitAtmAll
        authorizationIssuerId: authorizationIssuerId
        cardId: cardId
        totalLimitAtmWeek: totalLimitAtmWeek
        merchantCategory: merchantCategory
        paymentCurrency: paymentCurrency
        totalLimitAtmMonth: totalLimitAtmMonth
        totalLimitPaymentYear: totalLimitPaymentYear
        "3dsExemptionType": 3dsExemptionType
        posCardPresence: posCardPresence
        authorizationNote: authorizationNote
        paymentAmount: paymentAmount
        totalLimitAtmYear: totalLimitAtmYear
        receiverData: receiverData
        posTerminalId: posTerminalId
        limitAtmDay: limitAtmDay
        localMerchantId: localMerchantId
        merchantCountry: merchantCountry
        limitAtmWeek: limitAtmWeek
        paymentStatus: paymentStatus
        totalLimitPaymentDay: totalLimitPaymentDay
        optimizedMerchantName: optimizedMerchantName
        is3DS: true
        posCountry: posCountry
        walletCurrency: walletCurrency
        limitPaymentYear: limitPaymentYear
        transactionSubtype: PRE
        merchantLogo: merchantLogo
        authorizationMti: authorizationMti
        panEntryMethod: panEntryMethod
        totalLimitAtmDay: totalLimitAtmDay
        totalLimitPaymentWeek: totalLimitPaymentWeek
        authorizationResponseCode: authorizationResponseCode
        posCardholderPresence: posCardholderPresence
        totalLimitAtmAll: totalLimitAtmAll
        limitAtmMonth: limitAtmMonth
        merchantAddress: merchantAddress
        authorizedBalance: authorizedBalance
        authorizationIssuerTime: authorizationIssuerTime
        totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardtransactionId:
          type: string
        cardId:
          type: string
        walletId:
          type: string
        acquirerId:
          type: string
        walletCurrency:
          type: string
        merchantId:
          type: string
        merchantName:
          type: string
        merchantCity:
          type: string
        merchantCountry:
          type: string
        mccCode:
          type: string
        paymentLocalTime:
          type: string
        publicToken:
          type: string
        paymentAmount:
          type: string
        paymentCurrency:
          type: string
        fees:
          type: string
        paymentCountry:
          type: string
        paymentId:
          type: string
        paymentStatus:
          type: string
        paymentLocalAmount:
          type: string
        posCardholderPresence:
          type: string
        posPostcode:
          type: string
        posCountry:
          type: string
        posTerminalId:
          type: string
        posCardPresence:
          type: string
        panEntryMethod:
          type: string
        authorizationNote:
          type: string
        authorizationResponseCode:
          type: string
        authorizationIssuerId:
          type: string
        authorizationIssuerTime:
          type: string
        authorizationMti:
          type: string
        authorizedBalance:
          type: string
        limitAtmYear:
          type: string
        limitAtmMonth:
          type: string
        limitAtmWeek:
          type: string
        limitAtmDay:
          type: string
        limitAtmAll:
          type: string
        limitPaymentYear:
          type: string
        limitPaymentMonth:
          type: string
        limitPaymentWeek:
          type: string
        limitPaymentDay:
          type: string
        limitPaymentAll:
          type: string
        totalLimitAtmYear:
          type: string
        totalLimitAtmMonth:
          type: string
        totalLimitAtmWeek:
          type: string
        totalLimitAtmDay:
          type: string
        totalLimitAtmAll:
          type: string
        totalLimitPaymentYear:
          type: string
        totalLimitPaymentMonth:
          type: string
        totalLimitPaymentWeek:
          type: string
        totalLimitPaymentDay:
          type: string
        totalLimitPaymentAll:
          type: string
        cardDigitalizationExternalId:
          type: string
        is3DS:
          type: boolean
        merchantAddress:
          type: string
        paymentLocalDate:
          type: string
        optimizedMerchantName:
          type: string
        merchantLogo:
          type: string
        merchantCategory:
          type: string
        transactionSubtype:
          description: |
            Additional information regarding the type of card transaction. Values can be:
              * `OFT` – Offline transaction
              * `PRE` – Preauthorization
              * `SEP` – Second presentment
          enum:
          - PRE
          - SEP
          - OFT
          type: string
        "3dsExemptionType":
          description: |
            Indicates why the transaction was exempted for 3DS authentication. See [3DS Exemption Type](/guide/cards/transactions.html#_3ds-exemption-type-3dsexemptiontype) for the value list.
          type: string
        receiverData:
          description: "For MoneySend transactions, information regarding the receiver."
          type: string
        senderData:
          description: "For MoneySend transactions, information regarding the sender."
          type: string
        transactionTypeIdentifier:
          description: |
            For MoneySend transactions, code indicating the type of transaction and the source of funds. Can be:
              * `C07` – Person-to-Person Transfer
              * `C52` – General Transfer to Own Account
              * `C53` – Agent Cash Out
              * `C54` – Payment of Own Credit Card Bill
              * `C55` – Business Disbursement
              * `C56` – Government/Non-profit Disbursement
              * `C57` – Rapid Merchant Settlement
              * `C59` – Cash-in at Point of Sale
              * `C65` – General Business-to-Business Transfer
          type: string
        localMerchantId:
          description: Indicates the merchant's SIREN or SIRET if available.
          type: string
      type: object
    getCoCardTransactions_200_response_cursor:
      example:
        next: next
        current: current
        prev: prev
      properties:
        current:
          type: string
        prev:
          type: string
        next:
          type: string
      type: object
    getCoCardTransactions_200_response:
      example:
        cursor:
          next: next
          current: current
          prev: prev
        cardTransactions:
        - fees: fees
          cardtransactionId: cardtransactionId
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: acquirerId
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: walletId
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: cardId
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: PRE
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
        - fees: fees
          cardtransactionId: cardtransactionId
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: acquirerId
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: walletId
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: cardId
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: PRE
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardTransactions:
          items:
            $ref: '#/components/schemas/getCoCardTransactions_200_response_cardTransactions_inner'
          type: array
        cursor:
          $ref: '#/components/schemas/getCoCardTransactions_200_response_cursor'
      type: object
    createSupportUser_request:
      properties:
        username:
          description: The identifier the user will use for logging in to the Dashboard
            or your own backoffice.
          type: string
        password:
          description: The password the user will use for logging in to the Dashboard
            or your own backoffice. Expected in cleartext.
          type: string
        scopes:
          description: |
            Set of permissions for your Support User. Learn more in the [Scope & Permissions](/guide/api-basics/scopes) article.
          items:
            enum:
            - read_all
            - read_write
            - read_only
            - admin
            - support_user_management
            - legal
            type: string
          type: array
        samlKey:
          description: |
            Optional key to link automatically a Support User to a [Dashboard](/guide/dashboard/introduction) OAuth2 client.
          type: string
      type: object
    updateSupportUser_request:
      properties:
        username:
          description: "The identifier the user will use for logging in to the Dashboard\
            \ or your own backoffice. \nWe strongly recommend not to change the username\
            \ once set (you won't be able to do it from the Dashboard).\n"
          type: string
        password:
          description: The password the user will use for logging in to the Dashboard
            or your own backoffice. Expected in cleartext.
          type: string
        scope:
          description: |
            Set of permissions for your Support User. Learn more in the [Scope & Permissions](/guide/api-basics/scopes) article.
          items:
            enum:
            - read_all
            - read_write
            - read_only
            - admin
            - support_user_management
            - legal
            type: string
          type: array
        samlKey:
          description: |
            Optional key to link automatically a Support User to a [Dashboard](/guide/dashboard/introduction) OAuth2 client.
          type: string
      type: object
    onboard_user_request:
      properties:
        specifiedUSPerson:
          type: integer
        email:
          type: string
        password:
          type: string
        title:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      type: object
    get_config_200_response:
      example:
        files:
        - files
        - files
      properties:
        files:
          items:
            type: string
          type: array
      type: object
    getConfig_200_response_inner:
      example:
        onboardingErrorCallBack: onboardingErrorCallBack
        onboardingSuccessCallBack: onboardingSuccessCallBack
      properties:
        onboardingSuccessCallBack:
          type: string
        onboardingErrorCallBack:
          type: string
      type: object
    getAllUsers_200_response_cursor:
      example:
        next: next
        current: current
      properties:
        current:
          type: string
        next:
          type: string
      type: object
    getAllUsers_200_response_data_inner_clients_inner:
      example:
        clientId: clientId
        lastLoginAt: 2000-01-23
        scopes:
        - "{}"
        - "{}"
        acceptedAt: 2000-01-23
      properties:
        clientId:
          type: string
        scopes:
          items:
            properties: {}
            type: object
          type: array
        lastLoginAt:
          format: date
          type: string
        acceptedAt:
          format: date
          type: string
      type: object
    getAllUsers_200_response_data_inner:
      example:
        onboardingESign: onboardingESign
        clients:
        - clientId: clientId
          lastLoginAt: 2000-01-23
          scopes:
          - "{}"
          - "{}"
          acceptedAt: 2000-01-23
        - clientId: clientId
          lastLoginAt: 2000-01-23
          scopes:
          - "{}"
          - "{}"
          acceptedAt: 2000-01-23
        kycReview: kycReview
        userId: 0
        bridgeUserId: bridgeUserId
        trzConnectUserOnboarding: trzConnectUserOnboarding
        trzConnectUserId: trzConnectUserId
        username: username
      properties:
        trzConnectUserId:
          type: string
        username:
          type: string
        clients:
          items:
            $ref: '#/components/schemas/getAllUsers_200_response_data_inner_clients_inner'
          type: array
        userId:
          type: integer
        trzConnectUserOnboarding:
          type: string
        kycReview:
          type: string
        onboardingESign:
          type: string
        bridgeUserId:
          type: string
      type: object
    getAllUsers_200_response:
      example:
        cursor:
          next: next
          current: current
        data:
        - onboardingESign: onboardingESign
          clients:
          - clientId: clientId
            lastLoginAt: 2000-01-23
            scopes:
            - "{}"
            - "{}"
            acceptedAt: 2000-01-23
          - clientId: clientId
            lastLoginAt: 2000-01-23
            scopes:
            - "{}"
            - "{}"
            acceptedAt: 2000-01-23
          kycReview: kycReview
          userId: 0
          bridgeUserId: bridgeUserId
          trzConnectUserOnboarding: trzConnectUserOnboarding
          trzConnectUserId: trzConnectUserId
          username: username
        - onboardingESign: onboardingESign
          clients:
          - clientId: clientId
            lastLoginAt: 2000-01-23
            scopes:
            - "{}"
            - "{}"
            acceptedAt: 2000-01-23
          - clientId: clientId
            lastLoginAt: 2000-01-23
            scopes:
            - "{}"
            - "{}"
            acceptedAt: 2000-01-23
          kycReview: kycReview
          userId: 0
          bridgeUserId: bridgeUserId
          trzConnectUserOnboarding: trzConnectUserOnboarding
          trzConnectUserId: trzConnectUserId
          username: username
      properties:
        cursor:
          $ref: '#/components/schemas/getAllUsers_200_response_cursor'
        data:
          items:
            $ref: '#/components/schemas/getAllUsers_200_response_data_inner'
          type: array
      type: object
    putUserPassword_request:
      properties:
        password:
          type: string
      type: object
    postForgotPassword_request:
      properties:
        email:
          type: string
      type: object
    putChangePassword_request:
      properties:
        token:
          type: string
        email:
          type: string
        password:
          type: string
      type: object
    getPasswordConfig_200_response:
      example:
        passwordChangeRedirectUrl: passwordChangeRedirectUrl
      properties:
        passwordChangeRedirectUrl:
          type: string
      type: object
    putMidMetadata_request_inner:
      additionalProperties:
        type: string
      properties:
        mid:
          type: integer
      type: object
    postMidMetadata_201_response:
      example:
        otp: otp
      properties:
        otp:
          type: string
      type: object
    getProofPayout_200_response:
      example:
        link: https://xxx.s3.eu-west-3.amazonaws.com/tmp/xxx.pdf
        expireIn: 300
      properties:
        link:
          description: The download URL of the proof of payout.
          example: https://xxx.s3.eu-west-3.amazonaws.com/tmp/xxx.pdf
          type: string
        expireIn:
          description: The time after which the download link expires (in seconds).
          example: 300
          type: integer
      type: object
    getCardBulkReport_200_response:
      example:
        expireIn: expireIn
        url: url
      properties:
        url:
          type: string
        expireIn:
          type: string
      type: object
    getBulkCard_200_response:
      example:
        virtual: true
        orderId: orderId
        walletIdAttach: 0
        defaultMerchantRestrictionGroupId: 2
        number: 5
        limitPaymentWeek: 1
        limitAtmDay: 7
        limitPaymentAll: 4
        limitAtmYear: 5
        logoBackId: logoBackId
        limitPaymentDay: 7
        limitPaymentMonth: 1
        limitAtmWeek: 1
        defaultCountryRestrictionGroupId: 7
        paymentDailyLimit: 2
        limitPaymentYear: 1
        userIdOwner: 1
        packageId: packageId
        cardPrint: 3
        createUserForEach: true
        limitAtmAll: 6
        defaultPermsGroup: defaultPermsGroup
        limitAtmMonth: 4
        createWalletForEach: true
        anonymous: 9
        walletTypeId: 6
        defaultMccRestrictionGroupId: 5
        errors:
        - errors
        - errors
        logoId: logoId
        status: status
      properties:
        orderId:
          type: string
        errors:
          items:
            type: string
          type: array
        status:
          type: string
        walletIdAttach:
          nullable: true
          type: integer
        createWalletForEach:
          type: boolean
        walletTypeId:
          nullable: true
          type: integer
        userIdOwner:
          nullable: true
          type: integer
        createUserForEach:
          type: boolean
        number:
          type: integer
        defaultMccRestrictionGroupId:
          nullable: true
          type: integer
        defaultMerchantRestrictionGroupId:
          nullable: true
          type: integer
        defaultCountryRestrictionGroupId:
          nullable: true
          type: integer
        defaultPermsGroup:
          type: string
        packageId:
          nullable: true
          type: string
        logoId:
          nullable: true
          type: string
        logoBackId:
          nullable: true
          type: string
        anonymous:
          type: integer
        cardPrint:
          type: integer
        paymentDailyLimit:
          nullable: true
          type: integer
        limitPaymentAll:
          nullable: true
          type: integer
        limitPaymentDay:
          nullable: true
          type: integer
        limitPaymentWeek:
          nullable: true
          type: integer
        limitPaymentMonth:
          nullable: true
          type: integer
        limitPaymentYear:
          nullable: true
          type: integer
        limitAtmAll:
          nullable: true
          type: integer
        limitAtmDay:
          nullable: true
          type: integer
        limitAtmWeek:
          nullable: true
          type: integer
        limitAtmMonth:
          nullable: true
          type: integer
        limitAtmYear:
          nullable: true
          type: integer
        virtual:
          type: boolean
      type: object
    postBulkCard_request:
      properties:
        walletIdAttach:
          type: integer
        createWalletForEach:
          type: boolean
        walletTypeId:
          type: integer
        userIdOwner:
          type: integer
        createUserForEach:
          type: boolean
        number:
          type: integer
        defaultMccRestrictionGroupId:
          type: integer
        defaultMerchantRestrictionGroupId:
          type: integer
        defaultCountryRestrictionGroupId:
          type: integer
        defaultPermsGroup:
          type: string
        packageId:
          maximum: 5
          type: string
        logoId:
          maximum: 30
          type: string
        logoBackId:
          maximum: 30
          type: string
        customizedInfo:
          maximum: 27
          type: string
        freeCustomizedInfo:
          maximum: 50
          type: string
        letterCustomizedInfo:
          maximum: 50
          type: string
        anonymous:
          type: integer
        cardPrint:
          type: string
        paymentDailyLimit:
          type: integer
        limitPaymentAll:
          type: integer
        limitPaymentDay:
          type: integer
        limitPaymentWeek:
          type: integer
        limitPaymentMonth:
          type: integer
        limitPaymentYear:
          type: integer
        limitAtmAll:
          type: integer
        limitAtmDay:
          type: integer
        limitAtmWeek:
          type: integer
        limitAtmMonth:
          type: integer
        limitAtmYear:
          type: integer
        virtual:
          type: boolean
        cardDeliveryAddress1:
          maximum: 30
          type: string
        cardDeliveryAddress2:
          maximum: 30
          type: string
        cardDeliveryAddress3:
          maximum: 30
          type: string
        cardDeliveryPostCode:
          type: string
        cardDeliveryCity:
          type: string
        cardDeliveryState:
          type: string
        cardDeliveryCountry:
          type: string
      type: object
    getOperationsReport_200_response:
      example:
        url: url
        status: CREATED
      properties:
        status:
          description: Status of the report.
          enum:
          - CREATED
          - COMPLETED
          type: string
        url:
          description: Download URL for the report once completed.
          type: string
      type: object
    postOperationsReport_request:
      properties:
        dateTo:
          description: The date and time from which the operations are taken into
            account for the report.
          example: 2024-06-05T00:00:00+02:00
          type: string
        dateFrom:
          description: The date and time up to which the operations are taken into
            account for the report.
          example: 2024-07-05T00:00:00+02:00
          type: string
      type: object
    getAllMidMetadataBYyGroup_200_response:
      example:
        data:
        - "{}"
        - "{}"
      properties:
        data:
          items:
            type: object
          type: array
      type: object
    getTemplate_200_response:
      example:
        template: template
      properties:
        template:
          type: string
      type: object
    getKYCDocuments_200_response_inner:
      example:
        createdAt: 2000-01-23
        metadata:
        - metadata
        - metadata
        documentType: 0
        documentId: documentId
        comment: comment
        userId: 1
        status: 6
      properties:
        documentId:
          type: string
        documentType:
          type: integer
        status:
          type: integer
        userId:
          type: integer
        createdAt:
          format: date
          type: string
        metadata:
          items:
            type: string
          type: array
        comment:
          type: string
      type: object
    getPreSignedKycForm_request:
      properties:
        documentType:
          description: The type of KYC file.
          type: integer
        metadata:
          description: Metadata to add to the document.
          items:
            type: string
          type: array
      required:
      - documentType
      - metadata
      type: object
    getPreSignedKycForm_200_response_inner:
      example:
        form:
        - form
        - form
        expireIn: 0
        documentId: documentId
        formFields:
        - formFields
        - formFields
      properties:
        form:
          items:
            type: string
          type: array
        formFields:
          items:
            type: string
          type: array
        expireIn:
          type: integer
        documentId:
          type: string
      type: object
    updateDocument_request:
      properties:
        status:
          description: The KYC Status of the Document.
          type: integer
        comment:
          description: The comment of the Document.
          type: string
      required:
      - comment
      - status
      type: object
    getPresignedUrlDocument_200_response:
      example:
        duration: 0
        contentType: contentType
        url: url
      properties:
        url:
          type: string
        contentType:
          type: string
        duration:
          type: integer
    getPresignedUrlDocument_403_response_errors_inner:
      example:
        code: code
        docUrl: docUrl
        type: type
        message: message
      properties:
        type:
          type: string
        code:
          type: string
        message:
          type: string
        docUrl:
          type: string
      type: object
    getPresignedUrlDocument_403_response:
      example:
        errors:
        - code: code
          docUrl: docUrl
          type: type
          message: message
        - code: code
          docUrl: docUrl
          type: type
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/getPresignedUrlDocument_403_response_errors_inner'
          type: array
    postMassPayoutImport_request:
      properties:
        file:
          format: binary
          nullable: false
          type: string
        reference:
          nullable: false
          type: string
      type: object
    postMassPayoutImport_201_response:
      example:
        importId: importId
        status: status
      properties:
        importId:
          type: string
        status:
          type: string
      type: object
    getMassPayoutReportRef_200_response:
      example:
        processed_creditors: 0
        total_creditors: 6
        url: url
        status: status
      properties:
        url:
          nullable: false
          type: string
        status:
          nullable: false
          type: string
        processed_creditors:
          nullable: false
          type: integer
        total_creditors:
          nullable: false
          type: integer
      type: object
    getOperations_200_response_data_inner_amount:
      example:
        amount: 32420
        currency: EUR
      properties:
        amount:
          description: Amount in cent
          example: 32420
          type: integer
        currency:
          description: "Currency in ISO (EUR, GBP etc.)"
          example: EUR
          type: string
      type: object
    getOperations_200_response_data_inner_metadata:
      oneOf:
      - $ref: '#/components/schemas/CardPayment'
      - $ref: '#/components/schemas/Chargeback'
      - $ref: '#/components/schemas/Payin'
      - $ref: '#/components/schemas/PayinRefund'
      - $ref: '#/components/schemas/Payout'
      - $ref: '#/components/schemas/PayoutRefund'
      - $ref: '#/components/schemas/Transfer'
      type: object
    getOperations_200_response_data_inner_date:
      example:
        creation: 2000-01-23T04:56:07.000+00:00
        settlement: 2000-01-23T04:56:07.000+00:00
      properties:
        creation:
          description: |
            Date of payin/payout/cardtransaction object
            creation in Treezor System
          format: date-time
          type: string
        settlement:
          description: |
            Date at which the operation is settled on the wallet
          format: date-time
          nullable: true
          type: string
      type: object
    getOperations_200_response_data_inner:
      example:
        date:
          creation: 2000-01-23T04:56:07.000+00:00
          settlement: 2000-01-23T04:56:07.000+00:00
        walletId: 0
        amount:
          amount: 32420
          currency: EUR
        metadata:
          "3dsExemptionType": 3dsExemptionType
          optimizedMerchantName: optimizedMerchantName
          authorizationNote: authorizationNote
          maskedPan: maskedPan
          is3DS: is3DS
          transactionSubtype: transactionSubtype
          merchantLogo: merchantLogo
          mid:
            country: country
            address: address
            city: city
            name: name
            value: value
          mcc:
            code: 1
          paymentCountry: paymentCountry
          cardId: cardId
          authorisationResponseCode:
            action: action
            description: description
            value: 5
          paymentLifeCycle:
          - valueDate: valueDate
            paymentCurrency: paymentCurrency
            paymentAmount: paymentAmount
            paymentLocalAmount: paymentLocalAmount
            authorizationIssuerTime: authorizationIssuerTime
          - valueDate: valueDate
            paymentCurrency: paymentCurrency
            paymentAmount: paymentAmount
            paymentLocalAmount: paymentLocalAmount
            authorizationIssuerTime: authorizationIssuerTime
          merchantCategory: merchantCategory
          localAmount:
            amount: 12000
            currency: "978"
        operationType: cardTransaction
        label: label
        objectId: 6
        status: AUTHORIZED
        direction: CREDIT
        initialFlow: payin
      properties:
        operationType:
          description: |
            Type of operation.
          enum:
          - bankDirectDebit
          - bankTransfer
          - cardTopup
          - cardTransaction
          - check
          - creditNote
          - fees
          - instantBankTransfer
          - walletTransfer
          example: cardTransaction
          type: string
        amount:
          $ref: '#/components/schemas/getOperations_200_response_data_inner_amount'
        status:
          description: operation status
          enum:
          - AUTHORIZED
          - DECLINED
          - SETTLED
          - CANCELED
          type: string
        walletId:
          description: ID of the wallet impacted
          format: int64
          type: integer
        direction:
          description: Direction of operation credit or debit
          enum:
          - CREDIT
          - DEBIT
          type: string
        objectId:
          description: |
            The unique identifier of the Treezor object that contains the initial operation
          format: int64
          type: integer
        label:
          description: The tag attached to the operation
          nullable: true
          type: string
        metadata:
          $ref: '#/components/schemas/getOperations_200_response_data_inner_metadata'
        date:
          $ref: '#/components/schemas/getOperations_200_response_data_inner_date'
        initialFlow:
          description: Context about the technical conext of the initial operation.
          enum:
          - payin
          - payinRefund
          - payout
          - payoutRefund
          - transfer
          - cardTransaction
          - chargeback
          type: string
      type: object
    getOperations_200_response_cursor:
      example:
        next: next
        current: current
        prev: prev
      properties:
        prev:
          description: |
            Cursor value for previous page. It is null when you are in first page
          nullable: true
          type: string
        current:
          description: Actual cursor value. It is your curent page
          type: string
        next:
          description: |
            Cursor value for next page. It is null when you are on last page
          nullable: true
          type: string
      type: object
    getOperations_200_response:
      example:
        cursor:
          next: next
          current: current
          prev: prev
        data:
        - date:
            creation: 2000-01-23T04:56:07.000+00:00
            settlement: 2000-01-23T04:56:07.000+00:00
          walletId: 0
          amount:
            amount: 32420
            currency: EUR
          metadata:
            "3dsExemptionType": 3dsExemptionType
            optimizedMerchantName: optimizedMerchantName
            authorizationNote: authorizationNote
            maskedPan: maskedPan
            is3DS: is3DS
            transactionSubtype: transactionSubtype
            merchantLogo: merchantLogo
            mid:
              country: country
              address: address
              city: city
              name: name
              value: value
            mcc:
              code: 1
            paymentCountry: paymentCountry
            cardId: cardId
            authorisationResponseCode:
              action: action
              description: description
              value: 5
            paymentLifeCycle:
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            merchantCategory: merchantCategory
            localAmount:
              amount: 12000
              currency: "978"
          operationType: cardTransaction
          label: label
          objectId: 6
          status: AUTHORIZED
          direction: CREDIT
          initialFlow: payin
        - date:
            creation: 2000-01-23T04:56:07.000+00:00
            settlement: 2000-01-23T04:56:07.000+00:00
          walletId: 0
          amount:
            amount: 32420
            currency: EUR
          metadata:
            "3dsExemptionType": 3dsExemptionType
            optimizedMerchantName: optimizedMerchantName
            authorizationNote: authorizationNote
            maskedPan: maskedPan
            is3DS: is3DS
            transactionSubtype: transactionSubtype
            merchantLogo: merchantLogo
            mid:
              country: country
              address: address
              city: city
              name: name
              value: value
            mcc:
              code: 1
            paymentCountry: paymentCountry
            cardId: cardId
            authorisationResponseCode:
              action: action
              description: description
              value: 5
            paymentLifeCycle:
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            merchantCategory: merchantCategory
            localAmount:
              amount: 12000
              currency: "978"
          operationType: cardTransaction
          label: label
          objectId: 6
          status: AUTHORIZED
          direction: CREDIT
          initialFlow: payin
      properties:
        data:
          items:
            $ref: '#/components/schemas/getOperations_200_response_data_inner'
          type: array
        cursor:
          $ref: '#/components/schemas/getOperations_200_response_cursor'
      type: object
    getSCAWallets_default_response_inner:
      example:
        code: code
        requestId: requestId
        docUrl: docUrl
        type: type
        message: message
      properties:
        type:
          type: string
        code:
          type: string
        message:
          type: string
        docUrl:
          type: string
        requestId:
          type: string
      type: object
    postScaWallet_request:
      properties:
        userId:
          description: The unique identifier of the User.
          type: string
        scaWalletTag:
          nullable: true
          type: string
      type: object
    swapSCAWallets_request:
      properties:
        removeScaWalletId:
          description: The unique identifier of the SCA Wallet to be deleted.
          type: string
        swapReason:
          description: The reason for swapping SCA Wallet.
          enum:
          - LOST
          - STOLEN
          - OTHER
          type: string
        authMethod:
          description: |
            The chosen methods for the 2-factor authentication. Required if no `scaProof` is provided.
          items:
            enum:
            - ID
            - OTP SMS
            - OTP EMAIL
            - OTHER
            type: string
          type: array
        sca:
          description: The valid proof that authenticated the swap. Required if no
            `authMethod` is provided.
          type: string
        scaWalletTag:
          description: |
            Custom value for the SCA Wallet. Can be used to name the device for which the new SCA Wallet is created. Max length: 256 characters.
          type: string
      required:
      - removeScaWalletId
      - swapReason
      type: object
    putScaWallet_request:
      properties:
        lockReason:
          description: The reason for locking the Wallet.
          enum:
          - ISSUER
          - LOST_DEVICE
          - STOLEN_DEVICE
          - FRAUDULENT_USE_SUSPECTED_BY_ISSUER
          - FRAUDULENT_USE_SUSPECTED_BY_CLIENT
          - TERMINATE_SERVICE
          - INCIDENT
          type: string
        lockMessage:
          nullable: true
          type: string
      required:
      - lockReason
      type: object
    setPasscode_request:
      properties:
        userId:
          description: The unique identifier of the user.
          type: string
        newPasscode:
          description: The new passcode.
          type: string
        confirmPasscode:
          description: Confirmation of the new passcode.
          type: string
        sca:
          description: The valid proof that authenticated the user. Required if no
            `authMethod` is provided.
          type: string
        authMethod:
          description: |
            The chosen methods for the 2-factor authentication. Required if no `sca` is provided.
          items:
            enum:
            - ID
            - OTP SMS
            - OTP EMAIL
            - OTHER
            type: string
          type: array
      type: object
    postExtOperation_request:
      properties:
        actionName:
          description: |
            The end user action that was secured by an SCA. See [list of actions](/guide/strong-customer-authentication/endpoints-and-data.html#action-names-actionname) for more information.
          enum:
          - externalGetBalance
          - externalOperationView
          - externalOperationView90Days
          - externalDisplayAccountDetails
          - externalGetStatement
          - externalMassPayoutOrderCreation
          - externalMassTransferOrderCreation
          - externalScheduledPayoutOrder
          - externalScheduledTransferOrder
          - externalUpdateLimitsCard
          - internalCheck
          type: string
        scaProof:
          description: |
            The valid proof that authenticated the end user's action. Required if `actionName` is covered by a per-operation SCA.
          nullable: true
          type: string
        actionDate:
          description: |
            The date on which the declared action took place. (Format: RFC3339).
          example: 2023-06-20T01:02:03+01:00
          format: date-time
          type: string
        resourceIds:
          description: "The list of unique identifiers (strings) of the objects, conditionned\
            \ by the type of action. Must be: \n* **walletId** for `externalGetStatement`,\
            \ `externalGetBalance`, `externalOperationView`, `externalOperationView90Days`,\
            \ and `externalDisplayAccountDetails`\n* **payoutId** for **transferId**\
            \ in case of a payout or transfer\n* **cardId** for `externalUpdateLimitsCard`\n"
          items:
            type: string
          nullable: true
          type: array
      type: object
    postExtOperation_200_response_ExternalOperation:
      example:
        scaProof: scaProof
        createdAt: 2023-06-20T11:02:03+01:00
        amr: CLOUD_PIN
        externalOperationNote: 2000-01-23T04:56:07.000+00:00
        externalOperationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scaDate: 2023-06-20T11:01:13+01:00
        externalOperationResponseCode: 0
        actionDate: 2023-06-20T11:01:03+01:00
        actionName: actionName
        resourceIds:
        - resourceIds
        - resourceIds
      properties:
        externalOperationId:
          description: The unique identifier (uiid) of the ExternalOperation.
          format: uuid
          type: string
        actionName:
          description: The end user action that was secured by an SCA.
          type: string
        scaProof:
          description: The valid proof that authenticated the end user's action.
          nullable: true
          type: string
        actionDate:
          description: The date on which the declared action took place.
          example: 2023-06-20T11:01:03+01:00
          type: string
        resourceIds:
          description: The list of unique identifiers (strings) of the objects in
            case of a payout or transfer.
          items:
            type: string
          nullable: true
          type: array
        createdAt:
          description: |
            The date and time at which the External Operation was created. (Format: RFC 3339)
          example: 2023-06-20T11:02:03+01:00
          format: date-time
          nullable: true
          type: string
        scaDate:
          description: |
            The `iat` timestamp of the `scaProof` for per-operation SCA.
          example: 2023-06-20T11:01:13+01:00
          format: date-time
          nullable: true
          type: string
        amr:
          description: The type of SCA for per-operation SCA
          enum:
          - CLOUD_PIN
          - HYBRID_PIN
          - DEVICE_BIOMETRIC
          nullable: true
          type: string
        externalOperationNote:
          description: |
            Comment left by Treezor after scoring, indicating a potential issue. See [List of notes](/guide/strong-customer-authentication/endpoints-and-data.html#notes-externaloperationnote)
          format: date-time
          nullable: true
          type: string
        externalOperationResponseCode:
          description: For Treezor purposes only.
          type: integer
      type: object
    postExtOperation_200_response:
      example:
        ExternalOperation:
          scaProof: scaProof
          createdAt: 2023-06-20T11:02:03+01:00
          amr: CLOUD_PIN
          externalOperationNote: 2000-01-23T04:56:07.000+00:00
          externalOperationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scaDate: 2023-06-20T11:01:13+01:00
          externalOperationResponseCode: 0
          actionDate: 2023-06-20T11:01:03+01:00
          actionName: actionName
          resourceIds:
          - resourceIds
          - resourceIds
      properties:
        ExternalOperation:
          $ref: '#/components/schemas/postExtOperation_200_response_ExternalOperation'
    putExtOperation_request:
      properties:
        resourceIds:
          description: "The list of unique identifiers (strings) of the objects in\
            \ case of a payout or transfer. Must be null/empty for [externalGetBalance,\
            \ externalOperationView, externalOperationView90Days, externalDisplayAccountDetails,\
            \ externalGetStatement]"
          items:
            type: string
          nullable: true
          type: array
      type: object
    SimulateSDDR_request:
      properties:
        debitorIban:
          description: IBAN or Virtual IBAN of the debited Wallet.
          type: string
        amount:
          type: integer
        typeSDD:
          enum:
          - CORE
          - B2B
          type: string
        typeReject:
          description: |
            The type of error returned if the SDDR fails. Defaults to `rejected`.
          enum:
          - rejected
          - returned
          - refunded
          - today
          type: string
        sci:
          description: "The SEPA Credit Identifier of the user. In the case of simulation,\
            \ this defaults to a random string."
          type: string
        nbTxs:
          description: |
            The number of transactions for the SDD. Defaults to `1`.
          type: string
        mandateId:
          description: The unique identifier of the Mandate
          type: integer
        executeAfterParse:
          enum:
          - 0
          - 1
          type: integer
      type: object
    simulateSctInstReception_request:
      properties:
        name:
          description: Name of the recipient.
          type: string
        bic:
          description: BIC of the recipient.
          type: string
        iban:
          description: BIC of the recipient.
          type: string
        currency:
          description: |
            Currency of the of the transfer. Can only be `EUR`.
          type: string
        amount:
          description: Amount of the transfer.
          example: 25.33
          type: number
      type: object
    simulateSctInstReception_201_response:
      example:
        paymentID: paymentID
        sctInstID: sctInstID
      properties:
        sctInstID:
          nullable: false
          type: string
        paymentID:
          nullable: false
          type: string
      type: object
    simulateSctInstRecall_request:
      properties:
        sctInstId:
          type: string
        demandDate:
          type: string
        reasonCode:
          type: string
        additionalInformation:
          type: string
      type: object
    simulateSctInstRecall_201_response:
      example:
        paymentId: paymentId
        externalRecallId: externalRecallId
        recallrId: recallrId
        sctInstId: sctInstId
      properties:
        externalRecallId:
          nullable: false
          type: string
        recallrId:
          nullable: false
          type: string
        sctInstId:
          nullable: false
          type: string
        paymentId:
          nullable: false
          type: string
      type: object
    SimulateAcquiringPayin_request:
      properties:
        userId:
          nullable: false
          type: number
        walletId:
          nullable: false
          type: number
        amount:
          nullable: false
          type: number
        currency:
          default: EUR
          nullable: false
          type: string
        status:
          nullable: false
          type: number
        transactionReference:
          nullable: true
          type: string
      type: object
    simulateOperations_request_operations:
      properties:
        payin:
          type: integer
        payinrefund:
          description: must be smaller or equal than payin
          type: integer
        payout:
          type: integer
        payoutrefund:
          description: must be smaller or equal than payout
          type: integer
        transfer:
          type: integer
        transferrefund:
          deprecated: true
          description: must be smaller or equal than transfer
          type: integer
        cardtransaction:
          type: integer
      type: object
    simulateOperations_request:
      properties:
        walletId:
          type: string
        date:
          description: Y-m format
          type: string
        operations:
          $ref: '#/components/schemas/simulateOperations_request_operations'
      type: object
    simulateCardTransactions_request:
      properties:
        publicToken:
          description: The public token of the Card.
          type: string
        date:
          description: "The date and time of the CardTransaction, as seen in the `authorizationIssuerTime`\
            \ attribute."
          example: Y-m-d H:i:s
          type: string
        amount:
          description: "The amount of the CardTransaction, as seen it the `paymentAmount`\
            \ and `paymentLocalAmount` attributes."
          example: 97.42
          format: float
          type: number
        mcc:
          description: |
            The Merchant Category Code for the CardTransaction, allowing you to check [Card MCC restrictions](/guide/cards/restrictions-limits.html#mcc-restrictions).
          type: string
        merchantId:
          description: |
            The Merchant's ID for the CardTransaction, allowing you to check [Card MID restrictions](/guide/cards/restrictions-limits.html#mid-restrictions).
          type: string
        merchantName:
          description: The name of the merchant.
          type: string
        paymentStatus:
          description: |
            The type of CardTransaction. In the specific case of simulation, allowed values are:
            * `A` – Authorization accepted
            * `S` – Settled

            See the full list of values in the [Statuses](/guide/cards/transactions.html#statuses-paymentstatus) article.
          type: string
        transLink:
          description: |
            A unique reference used to associate the Card Transaction with a `paymentId`. Must be `100000000000000` or higher.

            To emulate a complete flow, set a `paymentStatus = A` followed by a `S` while specifying the same `transLink` for both requests.
          type: string
        paymentCode:
          deprecated: true
          description: Deprecated. Use the `transLink` parameter instead.
          type: string
      required:
      - merchantId
      - merchantName
      - transLink
      type: object
    simulateCardTransactions_201_response_inner:
      example:
        number: 0
        publicToken: publicToken
      properties:
        number:
          format: int32
          type: integer
        publicToken:
          type: string
      type: object
    getRawStatement_200_response_firstBalance:
      example:
        date: 2023-01-01
        amount: "5.76"
      properties:
        amount:
          example: "5.76"
          type: string
        date:
          example: 2023-01-01
          type: string
      type: object
    getRawStatement_200_response_lastBalance:
      example:
        date: 2023-01-31
        amount: "-553.03"
      properties:
        amount:
          example: "-553.03"
          type: string
        date:
          example: 2023-01-31
          type: string
      type: object
    getRawStatement_200_response_operations_inner_metadata:
      description: |
        Additional information regarding the operation. Content depends on the `type`.
      oneOf:
      - $ref: '#/components/schemas/CardPayment'
      - $ref: '#/components/schemas/Chargeback'
      - $ref: '#/components/schemas/Payin'
      - $ref: '#/components/schemas/PayinRefund'
      - $ref: '#/components/schemas/Payout'
      - $ref: '#/components/schemas/PayoutRefund'
      - $ref: '#/components/schemas/Transfer'
      type: object
    getRawStatement_200_response_operations_inner:
      example:
        date: 2022-01-31
        amount: 97.34
        metadata:
          "3dsExemptionType": 3dsExemptionType
          optimizedMerchantName: optimizedMerchantName
          authorizationNote: authorizationNote
          maskedPan: maskedPan
          is3DS: is3DS
          transactionSubtype: transactionSubtype
          merchantLogo: merchantLogo
          mid:
            country: country
            address: address
            city: city
            name: name
            value: value
          mcc:
            code: 1
          paymentCountry: paymentCountry
          cardId: cardId
          authorisationResponseCode:
            action: action
            description: description
            value: 5
          paymentLifeCycle:
          - valueDate: valueDate
            paymentCurrency: paymentCurrency
            paymentAmount: paymentAmount
            paymentLocalAmount: paymentLocalAmount
            authorizationIssuerTime: authorizationIssuerTime
          - valueDate: valueDate
            paymentCurrency: paymentCurrency
            paymentAmount: paymentAmount
            paymentLocalAmount: paymentLocalAmount
            authorizationIssuerTime: authorizationIssuerTime
          merchantCategory: merchantCategory
          localAmount:
            amount: 12000
            currency: "978"
        name: Reece Little (978 46.81)
        type: cardTransaction
        direction: DEBIT
      properties:
        date:
          example: 2022-01-31
          type: string
        type:
          example: cardTransaction
          type: string
        name:
          example: Reece Little (978 46.81)
          type: string
        direction:
          example: DEBIT
          type: string
        amount:
          example: 97.34
          format: float
          type: number
        metadata:
          $ref: '#/components/schemas/getRawStatement_200_response_operations_inner_metadata'
      type: object
    getRawStatement_200_response_user:
      example:
        country: FR
        firstname: Alex
        address3: address3
        address2: address2
        city: Paris
        address1: 15 Rosewood Road
        postcode: "75014"
        title: M
        lastname: Oak
      properties:
        title:
          enum:
          - M
          - MME
          - MLLE
          example: M
          type: string
        firstname:
          example: Alex
          type: string
        lastname:
          example: Oak
          type: string
        address1:
          example: 15 Rosewood Road
          type: string
        address2:
          type: string
        address3:
          type: string
        postcode:
          example: "75014"
          type: string
        city:
          example: Paris
          type: string
        country:
          example: FR
          type: string
      type: object
    getRawStatement_200_response_wallet:
      example:
        iban: FR761679800001000012345678
        bic: TRZOFR21XXX
      properties:
        iban:
          example: FR761679800001000012345678
          type: string
        bic:
          example: TRZOFR21XXX
          type: string
      type: object
    getRawStatement_200_response:
      example:
        lastBalance:
          date: 2023-01-31
          amount: "-553.03"
        operations:
        - date: 2022-01-31
          amount: 97.34
          metadata:
            "3dsExemptionType": 3dsExemptionType
            optimizedMerchantName: optimizedMerchantName
            authorizationNote: authorizationNote
            maskedPan: maskedPan
            is3DS: is3DS
            transactionSubtype: transactionSubtype
            merchantLogo: merchantLogo
            mid:
              country: country
              address: address
              city: city
              name: name
              value: value
            mcc:
              code: 1
            paymentCountry: paymentCountry
            cardId: cardId
            authorisationResponseCode:
              action: action
              description: description
              value: 5
            paymentLifeCycle:
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            merchantCategory: merchantCategory
            localAmount:
              amount: 12000
              currency: "978"
          name: Reece Little (978 46.81)
          type: cardTransaction
          direction: DEBIT
        - date: 2022-01-31
          amount: 97.34
          metadata:
            "3dsExemptionType": 3dsExemptionType
            optimizedMerchantName: optimizedMerchantName
            authorizationNote: authorizationNote
            maskedPan: maskedPan
            is3DS: is3DS
            transactionSubtype: transactionSubtype
            merchantLogo: merchantLogo
            mid:
              country: country
              address: address
              city: city
              name: name
              value: value
            mcc:
              code: 1
            paymentCountry: paymentCountry
            cardId: cardId
            authorisationResponseCode:
              action: action
              description: description
              value: 5
            paymentLifeCycle:
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            - valueDate: valueDate
              paymentCurrency: paymentCurrency
              paymentAmount: paymentAmount
              paymentLocalAmount: paymentLocalAmount
              authorizationIssuerTime: authorizationIssuerTime
            merchantCategory: merchantCategory
            localAmount:
              amount: 12000
              currency: "978"
          name: Reece Little (978 46.81)
          type: cardTransaction
          direction: DEBIT
        wallet:
          iban: FR761679800001000012345678
          bic: TRZOFR21XXX
        totalAmountCreditNote: 0
        totalCredit: "0.00"
        totalAmountFees: 0
        totalDebit: "0.00"
        firstBalance:
          date: 2023-01-01
          amount: "5.76"
        user:
          country: FR
          firstname: Alex
          address3: address3
          address2: address2
          city: Paris
          address1: 15 Rosewood Road
          postcode: "75014"
          title: M
          lastname: Oak
      properties:
        firstBalance:
          $ref: '#/components/schemas/getRawStatement_200_response_firstBalance'
        lastBalance:
          $ref: '#/components/schemas/getRawStatement_200_response_lastBalance'
        operations:
          items:
            $ref: '#/components/schemas/getRawStatement_200_response_operations_inner'
          type: array
        totalDebit:
          example: "0.00"
          type: string
        totalCredit:
          example: "0.00"
          type: string
        user:
          $ref: '#/components/schemas/getRawStatement_200_response_user'
        wallet:
          $ref: '#/components/schemas/getRawStatement_200_response_wallet'
        totalAmountFees:
          example: 0
          type: integer
        totalAmountCreditNote:
          example: 0
          type: integer
    getBalances_200_response_balances_inner:
      example:
        walletId: 0
        currentBalance: 6.0274563
        authorizations: 1.4658129
        currency: currency
        calculationDate: calculationDate
        authorizedBalance: 5.962134
      properties:
        walletId:
          type: integer
        currentBalance:
          format: float
          type: number
        authorizations:
          format: float
          type: number
        authorizedBalance:
          format: float
          type: number
        currency:
          type: string
        calculationDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    getBalances_200_response:
      example:
        balances:
        - walletId: 0
          currentBalance: 6.0274563
          authorizations: 1.4658129
          currency: currency
          calculationDate: calculationDate
          authorizedBalance: 5.962134
        - walletId: 0
          currentBalance: 6.0274563
          authorizations: 1.4658129
          currency: currency
          calculationDate: calculationDate
          authorizedBalance: 5.962134
      properties:
        balances:
          items:
            $ref: '#/components/schemas/getBalances_200_response_balances_inner'
          type: array
      type: object
    postBeneficiary_request_sddB2bWhitelist_inner:
      properties:
        uniqueMandateReference:
          description: |
            Unique Mandate Reference that unambiguiously identify
            a mandate signed between the user and the beneficiary
          type: string
        isRecurrent:
          description: |
            If mandate is a recuring payment, this field must be
            true.
          type: boolean
        walletId:
          description: |
            If present, the Direct Debit will be accepted only if
            the targeted wallet is the wallet with the given
            walletId. Without this value, the SDD can target any
            wallets of the user. With the value specified, only
            the explicitely authorized wallet can be targeted by
            SDD.
          type: number
      required:
      - isRecurrent
      - uniqueMandateReference
      type: object
    postBeneficiary_request:
      properties:
        tag:
          description: |
            Custom data that could be used by caller to search the instance.
          type: string
        userId:
          description: The unique identifier of the User to which the Beneficiary
            is attached.
          type: integer
        nickName:
          description: |
            Name choosen by end user to easily recognize the beneficiary.
          type: string
        name:
          description: "Beneficiary name, linked to bank account. Allowed characters\
            \ are:\n* `a` to `z`\n* `A` to `Z` \n* `0` to `9` \n* `/` `-` `?` `:`\
            \ `(` `)` `.` `,` `'` `+` `Space`\n"
          type: string
        address:
          description: "Beneficiary address, linked to bank account."
          type: string
        iban:
          description: |
            Beneficiary International Bank Account Number. Mandatory if
            `usableForSct` is `true`.
          type: string
        bic:
          description: |
            Beneficiary Bank Identifier Code. Mandatory if `usableForSct`
            is `true`.
          type: string
        sepaCreditorIdentifier:
          description: |
            Beneficiary SEPA Creditor Identifier. Mandatory to validate
            incoming direct debit, useless other wise. Between 8 and 35
            h. If sddB2bWhitelist or sddCoreBlacklist is
            provided then sepaCreditorIdentifier is mandatory.
          type: string
        sddB2bWhitelist:
          description: |
            Each unique mandate reference, with its frequency type, must
            be explicitely allowed when doing B2B Direct Debit.
            Furthermore, a mandate not used during more than 36 months
            will be automatically rejected even if in the white list. If
            provided, sepaCreditorIdentifier is mandatory.
          items:
            $ref: '#/components/schemas/postBeneficiary_request_sddB2bWhitelist_inner'
          type: array
        sddCoreBlacklist:
          description: |
            Core Direct Debit are accepted by default. If a Core mandate
            is to be refused on reception, it has to be added to this
            list. If wild char * (star) is used instead of a UMR, all
            Direct Debit from this beneficiary will be refused. If
            provided, sepaCreditorIdentifier is mandatory.
          items:
            description: |
              Unique Mandate Reference that unambiguiously identify a
              mandate signed between the user and the beneficiary. Star
              character can also be used to reject all Direct debit from
              the beneficiary.
            type: string
          type: array
        usableForSct:
          default: false
          description: |
            Indicated if the beneficiary can be used for SEPA Credit
            Transfer. This field is a conveniant way to filter all
            beneficiaries for a user that would like to do a Credit
            Transfer. Indeed, beneficaries are created automatically
            when receiving a Core Direct Debit and therefor by looking
            at the list you won't be able to idnetify which beneficary
            to use on SCT.
          type: boolean
      required:
      - name
      - userId
      type: object
    putBeneficiary_request:
      properties:
        tag:
          description: |
            Custom data that could be used by caller to search theinstance.
          type: string
        nickName:
          description: |
            Name choosen by end user to easily recognize the
            beneficiary.
          type: string
        name:
          description: "Beneficiary name, linked to bank account. Allowed characters\
            \ are\n* `a` to `z`\n* `A` to `Z` \n* `0` to `9` \n* `/` `-` `?` `:` `(`\
            \ `)` `.` `,` `'` `+` `Space`\n"
          type: string
        address:
          description: "Beneficiary address, linked to bank account."
          type: string
        iban:
          description: |
            Beneficiary International Bank Account Number. Mandatory if
            usableForSct is true.
          type: string
        bic:
          description: |
            Beneficiary Bank Identifier Code. Mandatory if usableForSct
            is true.
          type: string
        isActive:
          description: Beneficiary is activate.
          type: boolean
        sepaCreditorIdentifier:
          description: |
            Beneficiary SEPA Creditor Identifier. Mandatory to validate
            incoming direct debit, useless other wise. Between 8 and 35
            characters. If sddB2bWhitelist or sddCoreBlacklist is
            provided then sepaCreditorIdentifier is mandatory.
          type: string
        sddB2bWhitelist:
          description: |
            Each unique mandate reference, with its frequency type, must
            be explicitely allowed when doing B2B Direct Debit.
            Furthermore, a mandate not used during more than 36 months
            will be automatically rejected even if in the white list.
          items:
            $ref: '#/components/schemas/postBeneficiary_request_sddB2bWhitelist_inner'
          type: array
        sddCoreBlacklist:
          description: |
            Core Direct Debit are accepted by default. If a Core mandate
            is to be refused on reception, it has to be added to this
            list. If wild char * (star) is used instead of a UMR, all
            Direct Debit from this beneficiary will be refused.
          items:
            description: |
              Unique Mandate Reference that unambiguiously identify a
              mandate signed between the user and the beneficiary. Star
              character can also be used to reject all Direct debit from
              the beneficiary.
            type: string
          type: array
        usableForSct:
          default: false
          description: |
            Indicated if the beneficiary can be used for SEPA Credit
            Transfer. This field is a conveniant way to filter all
            beneficiaries for a user that would like to do a Credit
            Transfer. Indeed, beneficaries are created automatically
            when receiving a Core Direct Debit and therefor by looking
            at the list you won't be able to idnetify which beneficary
            to use on SCT.
          type: boolean
      type: object
    searchBusiness_200_response_inner_businessinformations_inner:
      example:
        safeNumber: safeNumber
        country: country
        tradename: tradename
        city: city
        address1: address1
        postcode: postcode
        externalId: externalId
        legalName: legalName
        phone: phone
        legalTvaNumber: legalTvaNumber
        state: state
        activityType: activityType
        legalRegistrationNumber: legalRegistrationNumber
        status: D
        officeType: 0
      properties:
        legalName:
          description: Business commercial name.
          type: string
        phone:
          description: Business phone number.
          type: string
        legalTvaNumber:
          description: Business VAT number.
          type: string
        legalRegistrationNumber:
          description: Business registration number.
          type: string
        status:
          description: |
            | Code | Description |
            | ---- | ----------- |
            |  D   | Deleted     |
            |  N   | Company non diffusible (Insee) |
            |  I   | Inactive (Insee) |
            |  A   | Economically active |
            |  C   | Closed |
            |  T   | Transfered |
            |  S   | Economically stopped (Insee) |
            |  L   | Liquidation |
            |  O   | Dormant company |
          enum:
          - D
          - "N"
          - I
          - A
          - C
          - T
          - S
          - L
          - O
          type: string
        officeType:
          description: |
            | Code | Description |
            | ---- | ----        |
            |  0   | Secondary establishment |
            |  1   | Headquarter |
          type: integer
        safeNumber:
          description: Business SAFE number.
          type: string
        activityType:
          description: Business sector. Code NAF in France.
          type: string
        externalId:
          description: Business external id.
          type: string
        address1:
          description: Business' street.
          type: string
        postcode:
          description: Business' postal code.
          type: string
        city:
          description: Business' city.
          type: string
        state:
          description: Business' province.
          type: string
        country:
          description: Business' country.
          format: ISO 3166-1 alpha-2
          type: string
        tradename:
          description: Business trade name
          type: string
      type: object
    searchBusiness_200_response_inner:
      example:
        businessinformations:
        - safeNumber: safeNumber
          country: country
          tradename: tradename
          city: city
          address1: address1
          postcode: postcode
          externalId: externalId
          legalName: legalName
          phone: phone
          legalTvaNumber: legalTvaNumber
          state: state
          activityType: activityType
          legalRegistrationNumber: legalRegistrationNumber
          status: D
          officeType: 0
        - safeNumber: safeNumber
          country: country
          tradename: tradename
          city: city
          address1: address1
          postcode: postcode
          externalId: externalId
          legalName: legalName
          phone: phone
          legalTvaNumber: legalTvaNumber
          state: state
          activityType: activityType
          legalRegistrationNumber: legalRegistrationNumber
          status: D
          officeType: 0
      properties:
        businessinformations:
          items:
            $ref: '#/components/schemas/searchBusiness_200_response_inner_businessinformations_inner'
          type: array
      type: object
    searchBusiness_default_response:
      example:
        additionalInformation:
        - additionalInformation
        - additionalInformation
        errorMessage: errorMessage
        errorCode: 6
      properties:
        errorCode:
          type: integer
        errorMessage:
          type: string
        additionalInformation:
          items:
            type: string
          type: array
      type: object
    getBusinessInfo_200_response_businessinformations_inner_users_inner:
      example:
        birthday: birthday
        firstname: firstname
        fullnames: fullnames
        parentType: Honorary president
        lastname: lastname
      properties:
        firstname:
          description: Representative's first name.
          type: string
        lastname:
          description: Representative's last name.
          type: string
        fullnames:
          description: Representative's full names.
          type: string
        birthday:
          description: Representative's birthdate. Format YYYY-MM-DD
          type: string
        parentType:
          description: Representative's position in company
          enum:
          - Honorary president
          - Not associated manager
          - President of the control council
          - Member of the management board
          - Member of the supervisory council
          - Member of the control committee
          - Partner
          - 'Management advisor '
          - Deputy managing director
          - Vice-president of the management board
          - Vice-president of the supervisory council
          - Developer
          - Other manager
          - Receiver
          - Authorized agent
          - Person in charge abroad
          - Representative in France
          - Member of the management council
          - Member of the control council
          - Treasurer
          - Secretary
          - Member
          - Administrative director
          - Sales director
          - Financial director
          - Chief Technical Officer
          - General secretary
          - Chief accountant
          - Guardian
          - 'Plan commissioner '
          - Management agent
          - Concordat commissioner
          - Representative of the creditors
          - Judicial representative
          - Substitute judge-commissioner
          - Judge-commissioner
          - Receiver/representative of the creditors
          - Conciliator
          - Auditor
          - Statutory auditor
          - Supervision commissioner
          - Deputy auditor
          - Spouse-associate
          - Accounts controller
          - Censor
          - Chief Executive Officer
          - President
          - Chairman of the Board
          - Governor
          - Deputy governor
          - Person having the power to usually involve the company
          - Manager
          - Co-managing partner
          - Managing director
          - Managing director not administrator
          - Unique managing director
          - Delegated managing director
          - Vice-president
          - Administrator
          - Delegated administrator
          - President of the management board
          - President of the supervisory council
          - Active partner
          - Management controller
          - Liquidator
          - Temporary administrator
          - Representative in France of a foreign company
          - Personal business manager
          type: string
      type: object
    getBusinessInfo_200_response_businessinformations_inner:
      example:
        country: country
        legalRegistrationDate: legalRegistrationDate
        legalNetIncomeRange: ""
        tradename: tradename
        city: city
        address1: address1
        postcode: postcode
        legalAnnualTurnOver: ""
        legalForm: legalForm
        users:
        - birthday: birthday
          firstname: firstname
          fullnames: fullnames
          parentType: Honorary president
          lastname: lastname
        - birthday: birthday
          firstname: firstname
          fullnames: fullnames
          parentType: Honorary president
          lastname: lastname
        legalSector: legalSector
        legalName: legalName
        legalShareCapital: 0.8008281904610115
        phone: phone
        legalNumberOfEmployeeRange: ""
        state: state
        legalRegistrationNumber: legalRegistrationNumber
        email: email
        status: D
      properties:
        legalName:
          description: Business commercial name.
          type: string
        legalRegistrationNumber:
          description: Business registration number.
          type: string
        legalRegistrationDate:
          description: Business registration date.
          type: string
        legalForm:
          description: "The legal form/category of the company. \n\nYou may check\
            \ out [the authoritative list](https://www.insee.fr/fr/information/2028129)\n"
          type: string
        legalShareCapital:
          description: Business share capital.
          type: number
        legalSector:
          description: |
            The Business Sector of the company (NAF or NACE code in France). The expected format depends on `legalSectorType`

            You may check out [the authoritative list](https://www.insee.fr/fr/information/2120875)
          type: string
        legalAnnualTurnOver:
          description: |
            Business annual turnover range in k€.
          enum:
          - ""
          - 0-39
          - 40-99
          - 100-249
          - 250-999
          - 1000-2999
          - 3000-9999
          - 10000-99999
          - 100000-*
          type: string
        legalNetIncomeRange:
          description: |
            Business annual netincome in k€.
          enum:
          - ""
          - 0-4
          - 5-9
          - 10-49
          - 50-149
          - 150-499
          - 500-*
          type: string
        legalNumberOfEmployeeRange:
          description: |
            Business workforce.
          enum:
          - ""
          - "0"
          - 1-9
          - 10-99
          - 100-249
          - 250-*
          type: string
        phone:
          description: Business phone number.
          type: string
        email:
          description: Business generic email.
          type: string
        address1:
          description: Business' street
          type: string
        postcode:
          description: Business' postal code
          type: string
        city:
          description: Business' city
          type: string
        state:
          description: Business' province
          type: string
        country:
          description: Business' country
          format: ISO 3166-1 alpha-2
          type: string
        status:
          description: |
            | Code | Description |
            | ---- | ----------- |
            |  D   | Deleted     |
            |  N   | Company non diffusible (Insee) |
            |  I   | Inactive (Insee) |
            |  A   | Economically active |
            |  C   | Closed |
            |  T   | Transfered |
            |  S   | Economically stopped (Insee) |
            |  L   | Liquidation |
            |  O   | Dormant company |
          enum:
          - D
          - "N"
          - I
          - A
          - C
          - T
          - S
          - L
          - O
          type: string
        tradename:
          description: Business trade name
          type: string
        users:
          items:
            $ref: '#/components/schemas/getBusinessInfo_200_response_businessinformations_inner_users_inner'
          type: array
      type: object
    getBusinessInfo_200_response:
      example:
        businessinformations:
        - country: country
          legalRegistrationDate: legalRegistrationDate
          legalNetIncomeRange: ""
          tradename: tradename
          city: city
          address1: address1
          postcode: postcode
          legalAnnualTurnOver: ""
          legalForm: legalForm
          users:
          - birthday: birthday
            firstname: firstname
            fullnames: fullnames
            parentType: Honorary president
            lastname: lastname
          - birthday: birthday
            firstname: firstname
            fullnames: fullnames
            parentType: Honorary president
            lastname: lastname
          legalSector: legalSector
          legalName: legalName
          legalShareCapital: 0.8008281904610115
          phone: phone
          legalNumberOfEmployeeRange: ""
          state: state
          legalRegistrationNumber: legalRegistrationNumber
          email: email
          status: D
        - country: country
          legalRegistrationDate: legalRegistrationDate
          legalNetIncomeRange: ""
          tradename: tradename
          city: city
          address1: address1
          postcode: postcode
          legalAnnualTurnOver: ""
          legalForm: legalForm
          users:
          - birthday: birthday
            firstname: firstname
            fullnames: fullnames
            parentType: Honorary president
            lastname: lastname
          - birthday: birthday
            firstname: firstname
            fullnames: fullnames
            parentType: Honorary president
            lastname: lastname
          legalSector: legalSector
          legalName: legalName
          legalShareCapital: 0.8008281904610115
          phone: phone
          legalNumberOfEmployeeRange: ""
          state: state
          legalRegistrationNumber: legalRegistrationNumber
          email: email
          status: D
      properties:
        businessinformations:
          items:
            $ref: '#/components/schemas/getBusinessInfo_200_response_businessinformations_inner'
          type: array
      type: object
    getCards_default_response:
      example:
        errors:
        - additionalInformation:
          - additionalInformation
          - additionalInformation
          errorMessage: errorMessage
          errorCode: 6
        - additionalInformation:
          - additionalInformation
          - additionalInformation
          errorMessage: errorMessage
          errorCode: 6
      properties:
        errors:
          items:
            $ref: '#/components/schemas/searchBusiness_default_response'
          type: array
      type: object
    putCard_request:
      properties:
        mccRestrictionGroupId:
          description: |
            The merchant category restriction group (`mccRestrictionGroup`) to apply to the card.
          type: integer
        merchantRestrictionGroupId:
          description: |
            The merchant Id restriction group (`merchantRestrictionGroupId`) to apply to the card.
          type: integer
        countryRestrictionGroupId:
          description: |
            The country restriction group (`countryRestrictionGroupId`) to apply to the card.
          type: integer
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
        cardTag:
          description: |
            This attribute is a string which can store a maximum of 250 characters that you are free to populate to suit your needs
            <br />
            You can [read more about tags](/guide/api-basics/objects-tags.html)
          type: string
      type: object
    postCardVirtual_request:
      properties:
        userId:
          description: The unique identifier of the cardholder.
          type: integer
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
        walletId:
          description: The unique identifier of the Wallet the card is attached to.
          type: integer
        permsGroup:
          description: |
            Permissions defining which features are enabled for the Card. See the [Permissions Groups](/guide/cards/restrictions-limits.html#permission-groups-permsgroup) article for more information.
          enum:
          - TRZ-CU-001
          - TRZ-CU-002
          - TRZ-CU-003
          - TRZ-CU-004
          - TRZ-CU-005
          - TRZ-CU-006
          - TRZ-CU-007
          - TRZ-CU-008
          - TRZ-CU-009
          - TRZ-CU-010
          - TRZ-CU-011
          - TRZ-CU-012
          - TRZ-CU-013
          - TRZ-CU-014
          - TRZ-CU-015
          - TRZ-CU-016
          type: string
        cardTag:
          description: |
            This attribute is a string which can store a maximum of 250 characters that you are free to populate to suit your needs
            <br />
            You can [read more about tags](/guide/api-basics/objects-tags.html)
          type: string
        batchDeliveryId:
          description: |
            Batch delivery identifier, which value must be between `1` and `238327`.

            This feature is not enabled by default, see [Customization](/guide/cards/creation.html#batch-delivery-batchdeliveryid) for more information.
          type: integer
        limitAtmYear:
          description: ATM operations limit for a sliding year. No default value.
          type: integer
        limitAtmMonth:
          description: ATM operations limit for a sliding month. No default value.
          type: integer
        limitAtmWeek:
          description: ATM operations limit for a sliding week. Default value €2000.
          type: integer
        limitAtmDay:
          description: ATM operations limit for a single day. Default value €1000.
          type: integer
        limitAtmAll:
          description: ATM operations limit from beginning. No default value.
          type: integer
        limitPaymentYear:
          description: POS operations limit for a sliding year. No default value.
          type: integer
        limitPaymentMonth:
          description: POS operations limit for a sliding month. No default value.
          type: integer
        limitPaymentWeek:
          description: POS operations limit for a sliding week. Default value €3000.
          type: integer
        limitPaymentDay:
          description: POS operations limit for a single day. Default value €2000.
          type: integer
        limitPaymentAll:
          description: POS operations limit from beginning. No default value.
          type: integer
        paymentDailyLimit:
          description: |
            POS operations limit for a single day including cents. The decimal delimiter must be ".". No default value.

            For food vouchers use cases only.
          format: float
          type: number
        pin:
          description: The PIN code value of the card.
          type: string
        cardPrint:
          description: |
            The [Card Program](introduction.html#card-program) to associate to the Card and the options provided with it. This information is shared with you by Treezor.
          type: string
        anonymous:
          description: |
            Whether the cards are to belong to [Anonymous Users](/guide/users/physical.html#anonymous-users). If so set the value to `1`, otherwise `0`.
            When set to `1`, there is no embossed name on the card.
          type: integer
        sendToParent:
          description: "Whether the card should be sent to the cardholder's Parent\
            \ User. \nWhen set to `1`, the delivery address fields will be automatically\
            \ filled in with the parent user's address.\n"
          type: integer
        mccRestrictionGroupId:
          description: |
            The merchant category restriction group (`mccRestrictionGroup`) to apply to the card.
          type: integer
        merchantRestrictionGroupId:
          description: |
            The merchant Id restriction group (`merchantRestrictionGroupId`) to apply to the card.
          type: integer
        countryRestrictionGroupId:
          description: |
            The country restriction group (`countryRestrictionGroupId`) to apply to the card.
          type: integer
        embossLegalName:
          default: false
          description: Set to `true` to emboss the cardholder's legal name on the
            card.
          type: boolean
        logoId:
          description: |
            The file name of the logo for the card. Learn more in the [Logo](/guide/cards/creation.html#logo-logoid) article.
          type: string
        logoBackId:
          description: |
            The file name of the logo for the back of the card. Learn more in the [Back Logo](/guide/cards/creation.html#back-logo-logobackid) article.
          type: string
        designCode:
          description: |
            The design code of the card. Max. 2 characters. Learn more in the [Designs](/guide/cards/creation.html#designs-designcode) article.
          format: alphanumeric
          type: string
        packageId:
          description: Packaging reference for card shipping. Max. 8 characters.
          type: string
        deliveryMethod:
          description: "The method the manufacturer uses to send the cards (e.g.,\
            \ delivery with or without tracking). \nLearn more in the [Card Delivery\
            \ Method](/guide/cards/creation.html#card-delivery-method-deliverymethod)\
            \ article.\n"
          type: string
        pinMailer:
          description: |
            You can request the card manufacturer to send the card PIN code by letter.
            Learn more in the [Pin Mailer](/guide/cards/creation.html#pin-mailer-pinmailer) article.
          enum:
          - 1
          - 2
          type: integer
        customizedInfo:
          description: "Customized text to be displayed on the card.\n\nIf populated,\
            \ it must: \n* Be alphanumeric\n* Contain at most 27 characters\n* Not\
            \ contain `!\"#%'(),:;<>?@[]^` or the backtick symbol.\n"
          type: string
        freeCustomizedInfo:
          description: "More customized text to be displayed on the card.\n\nIf populated,\
            \ it must: \n* Be alphanumeric\n* Contain at most 50 characters\n* Not\
            \ contain `!\"#%'(),:;<>?@[]^` or the backtick symbol.\n"
          type: string
        letterCustomizedInfo:
          description: |
            Customized text for the letter that is joined to the card.

            If populated, it must:
            * Be alphanumeric
            * Contain at most 50 characters
            * Not contain `!"#%'(),:;<>?@[]^` or the backtick symbol.
          type: string
        cardLanguages:
          description: |
            The language preferences for the card.

            Must be alphabetic and max. 8 characters. Format: [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).
          type: string
      required:
      - cardPrint
      - permsGroup
      - userId
      - walletId
      type: object
    post3ds_request:
      properties:
        cardId:
          description: The unique identifier of the card.
          type: integer
      required:
      - cardId
      type: object
    getCardImage_200_response_cardimages_inner:
      example:
        file: file
        cardId: cardId
        id: id
      properties:
        id:
          description: The unique identifier of the Card Image.
          type: string
        cardId:
          description: The unique identifier of the Card.
          type: string
        file:
          description: The image of the Card.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    getCardImage_200_response:
      example:
        cardimages:
        - file: file
          cardId: cardId
          id: id
        - file: file
          cardId: cardId
          id: id
      properties:
        cardimages:
          items:
            $ref: '#/components/schemas/getCardImage_200_response_cardimages_inner'
          type: array
      type: object
    activateCard_request:
      properties:
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
      type: object
    reassignCard_request:
      properties:
        userId:
          description: |
            `userId` and `walletId` can both be provided. `userId` is mandatory if `walletId` is not provided.
          type: integer
        walletId:
          description: |
            `userId` and `walletId` can both be provided. `userId` is mandatory if `walletId` is not provided.
          type: integer
      type: object
    changePin_request:
      properties:
        currentPIN:
          description: The current PIN code of the card.
          type: string
        newPIN:
          description: The new PIN code of the card.
          type: string
        confirmPIN:
          description: The confirmation of the new PIN code of the card.
          type: string
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
      required:
      - confirmPIN
      - currentPIN
      - newPIN
      type: object
    convertVirtual_request:
      properties:
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
    putLimits_request_restrictionGroupLimits:
      description: |
        Group of limits based on Restriction Groups. For now, only Restaurant Payment Vouchers with `paymentDailyLimit` can use this field.
        Furthermore, one of `mccRestrictionGroups`, `countryRestrictionGroups` or `merchantIdRestrictionGroups` must bepresent (i.e., `paymentDailyLimit` can't be alone).
      properties:
        mccRestrictionGroups:
          description: List of MCC (Merchant Category Code) Restriction Groups.
          items:
            format: int64
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
        countryRestrictionGroups:
          description: List of Country Restriction Groups.
          items:
            format: int64
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
        merchantIdRestrictionGroups:
          description: List of Merchant ID Restriction Groups.
          items:
            format: int64
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - countryRestrictionGroups
      - mccRestrictionGroups
      - merchantIdRestrictionGroups
      type: object
    putLimits_request:
      properties:
        userId:
          description: The unique identifier of the cardholder.
          type: integer
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
        limitAtmYear:
          description: ATM operations limit for a sliding year. No default value.
          type: integer
        limitAtmMonth:
          description: ATM operations limit for a sliding month. No default value.
          type: integer
        limitAtmWeek:
          description: ATM operations limit for a sliding week. Default value €2000.
          type: integer
        limitAtmDay:
          description: ATM operations limit for a single day. Default value €1000.
          type: integer
        limitAtmAll:
          description: ATM operations limit from beginning. No default value.
          type: integer
        limitPaymentYear:
          description: POS operations limit for a sliding year. No default value.
          type: integer
        limitPaymentMonth:
          description: POS operations limit for a sliding month. No default value.
          type: integer
        limitPaymentWeek:
          description: POS operations limit for a sliding week. Default value €3000.
          type: integer
        limitPaymentDay:
          description: POS operations limit for a single day. Default value €2000.
          type: integer
        limitPaymentAll:
          description: POS operations limit from beginning. No default value.
          type: integer
        paymentDailyLimit:
          description: POS operations limit for a single day including cents. The
            decimal delimiter must be ".". No default value.
          format: float
          type: number
        restrictionGroupLimits:
          $ref: '#/components/schemas/putLimits_request_restrictionGroupLimits'
      type: object
    updateBlockStatus_request:
      properties:
        lockStatus:
          description: |
            The Status of the card, indicating whether it is locked, lost, or destroyed for instance.
            While this field is an integer, it returns a plaintext value. See the full list of `lockStatus`in the [Block a Card](/guide/cards/modification.html#status) article.
          type: integer
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
      required:
      - lockStatus
      type: object
    cardOptions_request:
      properties:
        foreign:
          description: Whether or not the card is usable abroad.
          type: integer
        online:
          description: Whether or not the card is usable online.
          type: integer
        atm:
          description: Whether or not the card is usable on ATMs (withdrawal).
          type: integer
        nfc:
          description: Whether or not the card can be used for contactless payments.
          type: integer
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
      required:
      - atm
      - foreign
      - nfc
      - online
      type: object
    setPin_request:
      properties:
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
        newPIN:
          description: The new PIN code of the card.
          type: string
        confirmPIN:
          description: Confirmation of the value of the new PIN code of the card.
          type: string
      required:
      - confirmPIN
      - newPIN
    getAuthMethods_200_response:
      example:
        publicToken: publicToken
        system: system
        method: method
        id: id
      properties:
        publicToken:
          description: The public token of the Card
          type: string
        id:
          description: The unique identifier of the authentication method.
          type: string
        method:
          description: "The method used, either `OOB` or `OTPSMS`"
          type: string
        system:
          type: string
      type: object
    postAuthMethods_request:
      properties:
        method:
          default: OOB
          description: The authentication method.
          type: string
      type: object
    getRenewalDetails_200_response_cardRenewalDetails:
      example:
        renewalType: A
      properties:
        renewalType:
          description: |
            The type of renewal for the card. Can be:

            * `A` – Automatic
            * `N` – Non automatic
          example: A
          type: string
      type: object
    getRenewalDetails_200_response:
      example:
        cardRenewalDetails:
          renewalType: A
      properties:
        cardRenewalDetails:
          $ref: '#/components/schemas/getRenewalDetails_200_response_cardRenewalDetails'
      type: object
    updateRenewalDetails_request:
      properties:
        renewalType:
          description: |
            The type of renewal for the card. Can be:

            * `A` – Automatic
            * `N` – Non automatic
          enum:
          - A
          - "N"
          type: string
      required:
      - renewalType
      type: object
    putDigitalized_request:
      properties:
        status:
          description: |
            The new status for the payment Token.
          enum:
          - suspend
          - unsuspend
          type: string
        reasonCode:
          description: |
            The reason code for the action. See the [corresponding article](/guide/cards/x-pay-google-apple.html#parameters) for the definition of each value.
          enum:
          - L
          - S
          - T
          - F
          - Z
          type: string
      type: object
    cardtransaction_inner:
      example:
        fees: fees
        cardtransactionId: 0
        paymentCountry: paymentCountry
        merchantName: merchantName
        mccCode: mccCode
        transactionTypeIdentifier: transactionTypeIdentifier
        limitPaymentWeek: limitPaymentWeek
        senderData: senderData
        publicToken: publicToken
        limitPaymentAll: limitPaymentAll
        limitAtmYear: limitAtmYear
        merchantId: merchantId
        limitPaymentDay: limitPaymentDay
        paymentId: paymentId
        limitPaymentMonth: limitPaymentMonth
        paymentLocalDate: paymentLocalDate
        acquirerId: 5
        paymentLocalAmount: paymentLocalAmount
        totalLimitPaymentMonth: totalLimitPaymentMonth
        walletId: 1
        paymentLocalTime: paymentLocalTime
        merchantCity: merchantCity
        posPostcode: posPostcode
        cardDigitalizationExternalId: cardDigitalizationExternalId
        totalRows: 5
        limitAtmAll: limitAtmAll
        authorizationIssuerId: authorizationIssuerId
        cardId: 6
        totalLimitAtmWeek: totalLimitAtmWeek
        merchantCategory: merchantCategory
        paymentCurrency: paymentCurrency
        totalLimitAtmMonth: totalLimitAtmMonth
        totalLimitPaymentYear: totalLimitPaymentYear
        "3dsExemptionType": 3dsExemptionType
        posCardPresence: posCardPresence
        authorizationNote: authorizationNote
        paymentAmount: paymentAmount
        totalLimitAtmYear: totalLimitAtmYear
        receiverData: receiverData
        posTerminalId: posTerminalId
        limitAtmDay: limitAtmDay
        localMerchantId: localMerchantId
        merchantCountry: merchantCountry
        limitAtmWeek: limitAtmWeek
        paymentStatus: paymentStatus
        totalLimitPaymentDay: totalLimitPaymentDay
        optimizedMerchantName: optimizedMerchantName
        is3DS: true
        posCountry: posCountry
        walletCurrency: walletCurrency
        limitPaymentYear: limitPaymentYear
        transactionSubtype: PRE
        merchantLogo: merchantLogo
        authorizationMti: authorizationMti
        panEntryMethod: panEntryMethod
        totalLimitAtmDay: totalLimitAtmDay
        totalLimitPaymentWeek: totalLimitPaymentWeek
        authorizationResponseCode: authorizationResponseCode
        posCardholderPresence: posCardholderPresence
        totalLimitAtmAll: totalLimitAtmAll
        limitAtmMonth: limitAtmMonth
        merchantAddress: merchantAddress
        authorizedBalance: authorizedBalance
        authorizationIssuerTime: authorizationIssuerTime
        totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardtransactionId:
          type: integer
        cardId:
          type: integer
        walletId:
          type: integer
        acquirerId:
          type: integer
        walletCurrency:
          type: string
        merchantId:
          type: string
        merchantName:
          type: string
        merchantAddress:
          type: string
        merchantCity:
          type: string
        merchantCountry:
          type: string
        mccCode:
          type: string
        paymentLocalTime:
          type: string
        publicToken:
          type: string
        paymentAmount:
          type: string
        paymentCurrency:
          description: |
            The currency of the payment. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
          type: string
        fees:
          type: string
        paymentCountry:
          type: string
        paymentId:
          type: string
        paymentStatus:
          description: |
            Payment status.

            | Status | Description | Note |
            | ------ | -------     | --- |
            | A | Accepted | |
            | C | Cleared | Offline transactions are processed asynchronously. It may take up to several days.|
            | I | Declined | |
            | S | Settled | |
            | V | Reversed | |
            | M | MoneySend | |
          type: string
        paymentLocalAmount:
          type: string
        paymentLocalDate:
          type: string
        is3DS:
          type: boolean
        posCardholderPresence:
          type: string
        posPostcode:
          type: string
        posCountry:
          type: string
        posTerminalId:
          type: string
        posCardPresence:
          type: string
        panEntryMethod:
          type: string
        authorizationNote:
          type: string
        authorizationResponseCode:
          description: |
            Authorization response code.

            | Code | Description |
            | ---- | ----------- |
            | 00 | All Good |
            | 01 | Refer to card issuer Refer |
            | 03 | Invalid merchant Decline |
            | 05 | Do not honour Decline |
            | 10 | Partial Approval Approve |
            | 13 | Invalid amount Decline |
            | 14 | Invalid card number (no such number) Decline |
            | 17 | Customer Cancellation Decline |
            | 33 | Expired card (Capture) Decline & Pickup |
            | 41 | Lost card (Capture) Decline & Pickup |
            | 43 | Stolen card (Capture) Decline & Pickup |
            | 51 | Insufficient funds Decline |
            | 54 | Expired card Decline |
            | 55 | Incorrect PIN Decline |
            | 57 | Transaction not permitted to cardholder Decline |
            | 58 | Transaction not permitted to terminal Decline |
            | 61 | Exceeds withdrawal amount limit Decline |
            | 62 | Restricted card Decline |
            | 63 | Security Violation Decline |
            | 65 | Exceeds withdrawal frequency limit Decline |
            | 68 | Response received too late Decline |
            | 70 | Cardholder to contact issuer Decline |
            | 75 | Allowable number of PIN tries exceeded Decline |
            | 82 | Timeout at IEM Decline |
            | 85 | PIN Unblock request Approve |
            | 91 | Issuer or switch is inoperative Decline |
            | N7 | Decline for CVV2 failure Decline |
          type: string
        authorizationIssuerId:
          type: string
        authorizationIssuerTime:
          type: string
        authorizationMti:
          description: |
            Authorization Message Type Identifier. Please rely on the `paymentStatus` value.
          type: string
        authorizedBalance:
          type: string
        limitAtmYear:
          type: string
        limitAtmMonth:
          type: string
        limitAtmWeek:
          type: string
        limitAtmDay:
          type: string
        limitAtmAll:
          type: string
        limitPaymentYear:
          type: string
        limitPaymentMonth:
          type: string
        limitPaymentWeek:
          type: string
        limitPaymentDay:
          type: string
        limitPaymentAll:
          type: string
        totalLimitAtmYear:
          type: string
        totalLimitAtmMonth:
          type: string
        totalLimitAtmWeek:
          type: string
        totalLimitAtmDay:
          type: string
        totalLimitAtmAll:
          type: string
        totalLimitPaymentYear:
          type: string
        totalLimitPaymentMonth:
          type: string
        totalLimitPaymentWeek:
          type: string
        totalLimitPaymentDay:
          type: string
        totalLimitPaymentAll:
          type: string
        cardDigitalizationExternalId:
          type: string
        totalRows:
          type: integer
        optimizedMerchantName:
          type: string
        merchantLogo:
          type: string
        merchantCategory:
          type: string
        transactionSubtype:
          description: |
            Additional information regarding the type of card transaction. Values can be:
              * `OFT` – Offline transaction
              * `PRE` – Preauthorization
              * `SEP` – Second presentment
          enum:
          - PRE
          - SEP
          - OFT
          type: string
        "3dsExemptionType":
          description: |
            Indicates why the transaction was exempted for 3DS authentication. See [3DS Exemption Type](/guide/cards/transactions.html#_3ds-exemption-type-3dsexemptiontype) for the value list.
          type: string
        receiverData:
          description: "For MoneySend transactions, information regarding the receiver."
          type: string
        senderData:
          description: "For MoneySend transactions, information regarding the sender."
          type: string
        transactionTypeIdentifier:
          description: |
            For MoneySend transactions, code indicating the type of transaction and the source of funds. Can be:
              * `C07` – Person-to-Person Transfer
              * `C52` – General Transfer to Own Account
              * `C53` – Agent Cash Out
              * `C54` – Payment of Own Credit Card Bill
              * `C55` – Business Disbursement
              * `C56` – Government/Non-profit Disbursement
              * `C57` – Rapid Merchant Settlement
              * `C59` – Cash-in at Point of Sale
              * `C65` – General Business-to-Business Transfer
          type: string
        localMerchantId:
          description: Indicates the merchant's SIREN or SIRET if available.
          type: string
      type: object
    readCardTransaction_200_response:
      example:
        cardtransactions:
        - fees: fees
          cardtransactionId: 0
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: 5
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: 1
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          totalRows: 5
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: 6
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: PRE
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
        - fees: fees
          cardtransactionId: 0
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: 5
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: 1
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          totalRows: 5
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: 6
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: PRE
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardtransactions:
          items:
            $ref: '#/components/schemas/cardtransaction_inner'
          title: cardtransaction
          type: array
      type: object
    cardtransaction_inner_1:
      example:
        fees: fees
        cardtransactionId: 0
        paymentCountry: paymentCountry
        merchantName: merchantName
        mccCode: mccCode
        transactionTypeIdentifier: transactionTypeIdentifier
        limitPaymentWeek: limitPaymentWeek
        senderData: senderData
        publicToken: publicToken
        limitPaymentAll: limitPaymentAll
        limitAtmYear: limitAtmYear
        merchantId: merchantId
        limitPaymentDay: limitPaymentDay
        paymentId: paymentId
        limitPaymentMonth: limitPaymentMonth
        paymentLocalDate: paymentLocalDate
        acquirerId: 5
        paymentLocalAmount: paymentLocalAmount
        totalLimitPaymentMonth: totalLimitPaymentMonth
        walletId: 1
        paymentLocalTime: paymentLocalTime
        merchantCity: merchantCity
        posPostcode: posPostcode
        cardDigitalizationExternalId: cardDigitalizationExternalId
        totalRows: 5
        limitAtmAll: limitAtmAll
        authorizationIssuerId: authorizationIssuerId
        cardId: 6
        totalLimitAtmWeek: totalLimitAtmWeek
        merchantCategory: merchantCategory
        paymentCurrency: paymentCurrency
        totalLimitAtmMonth: totalLimitAtmMonth
        totalLimitPaymentYear: totalLimitPaymentYear
        "3dsExemptionType": 3dsExemptionType
        posCardPresence: posCardPresence
        authorizationNote: authorizationNote
        paymentAmount: paymentAmount
        totalLimitAtmYear: totalLimitAtmYear
        receiverData: receiverData
        posTerminalId: posTerminalId
        limitAtmDay: limitAtmDay
        localMerchantId: localMerchantId
        merchantCountry: merchantCountry
        limitAtmWeek: limitAtmWeek
        paymentStatus: paymentStatus
        totalLimitPaymentDay: totalLimitPaymentDay
        optimizedMerchantName: optimizedMerchantName
        is3DS: true
        posCountry: posCountry
        walletCurrency: walletCurrency
        limitPaymentYear: limitPaymentYear
        transactionSubtype: OFT
        merchantLogo: merchantLogo
        authorizationMti: authorizationMti
        panEntryMethod: panEntryMethod
        totalLimitAtmDay: totalLimitAtmDay
        totalLimitPaymentWeek: totalLimitPaymentWeek
        authorizationResponseCode: authorizationResponseCode
        posCardholderPresence: posCardholderPresence
        totalLimitAtmAll: totalLimitAtmAll
        limitAtmMonth: limitAtmMonth
        merchantAddress: merchantAddress
        authorizedBalance: authorizedBalance
        authorizationIssuerTime: authorizationIssuerTime
        totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardtransactionId:
          type: integer
        cardId:
          type: integer
        walletId:
          type: integer
        acquirerId:
          type: integer
        walletCurrency:
          type: string
        merchantId:
          type: string
        merchantName:
          type: string
        merchantAddress:
          type: string
        merchantCity:
          type: string
        merchantCountry:
          type: string
        mccCode:
          type: string
        paymentLocalTime:
          type: string
        publicToken:
          type: string
        paymentAmount:
          type: string
        paymentCurrency:
          description: |
            The currency of the payment. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
          type: string
        fees:
          type: string
        paymentCountry:
          type: string
        paymentId:
          type: string
        paymentStatus:
          description: |
            Payment status.

            | Status | Description | Note |
            | ------ | -------     | --- |
            | A | Accepted | |
            | C | Cleared | Offline transactions are processed asynchronously. It may take up to several days.|
            | I | Declined | |
            | S | Settled | |
            | V | Reversed | |
            | M | MoneySend | |
          type: string
        paymentLocalAmount:
          type: string
        paymentLocalDate:
          type: string
        is3DS:
          type: boolean
        posCardholderPresence:
          type: string
        posPostcode:
          type: string
        posCountry:
          type: string
        posTerminalId:
          type: string
        posCardPresence:
          type: string
        panEntryMethod:
          type: string
        authorizationNote:
          type: string
        authorizationResponseCode:
          description: |
            Authorization response code.

            | Code | Description |
            | ---- | ----------- |
            | 00 | All Good |
            | 01 | Refer to card issuer Refer |
            | 03 | Invalid merchant Decline |
            | 05 | Do not honour Decline |
            | 10 | Partial Approval Approve |
            | 13 | Invalid amount Decline |
            | 14 | Invalid card number (no such number) Decline |
            | 17 | Customer Cancellation Decline |
            | 33 | Expired card (Capture) Decline & Pickup |
            | 41 | Lost card (Capture) Decline & Pickup |
            | 43 | Stolen card (Capture) Decline & Pickup |
            | 51 | Insufficient funds Decline |
            | 54 | Expired card Decline |
            | 55 | Incorrect PIN Decline |
            | 57 | Transaction not permitted to cardholder Decline |
            | 58 | Transaction not permitted to terminal Decline |
            | 61 | Exceeds withdrawal amount limit Decline |
            | 62 | Restricted card Decline |
            | 63 | Security Violation Decline |
            | 65 | Exceeds withdrawal frequency limit Decline |
            | 68 | Response received too late Decline |
            | 70 | Cardholder to contact issuer Decline |
            | 75 | Allowable number of PIN tries exceeded Decline |
            | 82 | Timeout at IEM Decline |
            | 85 | PIN Unblock request Approve |
            | 91 | Issuer or switch is inoperative Decline |
            | N7 | Decline for CVV2 failure Decline |
          type: string
        authorizationIssuerId:
          type: string
        authorizationIssuerTime:
          type: string
        authorizationMti:
          description: |
            Authorization Message Type Identifier. Please rely on the `paymentStatus` value.
          type: string
        authorizedBalance:
          type: string
        limitAtmYear:
          type: string
        limitAtmMonth:
          type: string
        limitAtmWeek:
          type: string
        limitAtmDay:
          type: string
        limitAtmAll:
          type: string
        limitPaymentYear:
          type: string
        limitPaymentMonth:
          type: string
        limitPaymentWeek:
          type: string
        limitPaymentDay:
          type: string
        limitPaymentAll:
          type: string
        totalLimitAtmYear:
          type: string
        totalLimitAtmMonth:
          type: string
        totalLimitAtmWeek:
          type: string
        totalLimitAtmDay:
          type: string
        totalLimitAtmAll:
          type: string
        totalLimitPaymentYear:
          type: string
        totalLimitPaymentMonth:
          type: string
        totalLimitPaymentWeek:
          type: string
        totalLimitPaymentDay:
          type: string
        totalLimitPaymentAll:
          type: string
        cardDigitalizationExternalId:
          type: string
        totalRows:
          type: integer
        optimizedMerchantName:
          type: string
        merchantLogo:
          type: string
        merchantCategory:
          type: string
        transactionSubtype:
          description: |
            Additional information regarding the type of card transaction. Values can be:
              * `OFT` – Offline transaction
              * `PRE` – Preauthorization
              * `SEP` – Second presentment
          enum:
          - OFT
          - PRE
          - SEP
          type: string
        "3dsExemptionType":
          description: |
            Indicates why the transaction was exempted for 3DS authentication. See [3DS Exemption Type](/guide/cards/transactions.html#_3ds-exemption-type-3dsexemptiontype) for the value list.
          type: string
        receiverData:
          description: "For MoneySend transactions, information regarding the receiver."
          type: string
        senderData:
          description: "For MoneySend transactions, information regarding the sender."
          type: string
        transactionTypeIdentifier:
          description: |
            For MoneySend transactions, code indicating the type of transaction and the source of funds. Can be:
              * `C07` – Person-to-Person Transfer
              * `C52` – General Transfer to Own Account
              * `C53` – Agent Cash Out
              * `C54` – Payment of Own Credit Card Bill
              * `C55` – Business Disbursement
              * `C56` – Government/Non-profit Disbursement
              * `C57` – Rapid Merchant Settlement
              * `C59` – Cash-in at Point of Sale
              * `C65` – General Business-to-Business Transfer
          type: string
        localMerchantId:
          description: Indicates the merchant's SIREN or SIRET if available.
          type: string
      type: object
    getCardtransaction_200_response:
      example:
        cardtransactions:
        - fees: fees
          cardtransactionId: 0
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: 5
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: 1
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          totalRows: 5
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: 6
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: OFT
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
        - fees: fees
          cardtransactionId: 0
          paymentCountry: paymentCountry
          merchantName: merchantName
          mccCode: mccCode
          transactionTypeIdentifier: transactionTypeIdentifier
          limitPaymentWeek: limitPaymentWeek
          senderData: senderData
          publicToken: publicToken
          limitPaymentAll: limitPaymentAll
          limitAtmYear: limitAtmYear
          merchantId: merchantId
          limitPaymentDay: limitPaymentDay
          paymentId: paymentId
          limitPaymentMonth: limitPaymentMonth
          paymentLocalDate: paymentLocalDate
          acquirerId: 5
          paymentLocalAmount: paymentLocalAmount
          totalLimitPaymentMonth: totalLimitPaymentMonth
          walletId: 1
          paymentLocalTime: paymentLocalTime
          merchantCity: merchantCity
          posPostcode: posPostcode
          cardDigitalizationExternalId: cardDigitalizationExternalId
          totalRows: 5
          limitAtmAll: limitAtmAll
          authorizationIssuerId: authorizationIssuerId
          cardId: 6
          totalLimitAtmWeek: totalLimitAtmWeek
          merchantCategory: merchantCategory
          paymentCurrency: paymentCurrency
          totalLimitAtmMonth: totalLimitAtmMonth
          totalLimitPaymentYear: totalLimitPaymentYear
          "3dsExemptionType": 3dsExemptionType
          posCardPresence: posCardPresence
          authorizationNote: authorizationNote
          paymentAmount: paymentAmount
          totalLimitAtmYear: totalLimitAtmYear
          receiverData: receiverData
          posTerminalId: posTerminalId
          limitAtmDay: limitAtmDay
          localMerchantId: localMerchantId
          merchantCountry: merchantCountry
          limitAtmWeek: limitAtmWeek
          paymentStatus: paymentStatus
          totalLimitPaymentDay: totalLimitPaymentDay
          optimizedMerchantName: optimizedMerchantName
          is3DS: true
          posCountry: posCountry
          walletCurrency: walletCurrency
          limitPaymentYear: limitPaymentYear
          transactionSubtype: OFT
          merchantLogo: merchantLogo
          authorizationMti: authorizationMti
          panEntryMethod: panEntryMethod
          totalLimitAtmDay: totalLimitAtmDay
          totalLimitPaymentWeek: totalLimitPaymentWeek
          authorizationResponseCode: authorizationResponseCode
          posCardholderPresence: posCardholderPresence
          totalLimitAtmAll: totalLimitAtmAll
          limitAtmMonth: limitAtmMonth
          merchantAddress: merchantAddress
          authorizedBalance: authorizedBalance
          authorizationIssuerTime: authorizationIssuerTime
          totalLimitPaymentAll: totalLimitPaymentAll
      properties:
        cardtransactions:
          items:
            $ref: '#/components/schemas/cardtransaction_inner_1'
          title: cardtransaction
          type: array
      type: object
    getCountryRestrictionGroups_200_response_countryRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        countries:
        - countries
        - countries
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the Country Group.
          type: integer
        name:
          description: The name the Country Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n * `true` (default) –\
            \ Allows only a specified list of countries (whitelist)\n * `false` –\
            \ Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: The list of countries (each item is a string).
          items:
            type: string
          type: array
        status:
          description: The status of the Country Group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created. Format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    getCountryRestrictionGroups_200_response:
      example:
        countryRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
      properties:
        countryRestrictionGroups:
          items:
            $ref: '#/components/schemas/getCountryRestrictionGroups_200_response_countryRestrictionGroups_inner'
          type: array
      type: object
    postCountryRestrictionGroup_request:
      properties:
        name:
          description: The name of the Country Group.
          type: string
        status:
          description: The status of the Country Group.
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: "Indicates the kind of restriction: \n  * `true` (default)\
            \ – Allows only a specified list of countries (whitelist)\n  * `false`\
            \ – Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: List of countries (each item is a string).
          items:
            type: integer
          type: array
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
      required:
      - countries
      - name
      type: object
    postCountryRestrictionGroup_200_response_countryRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        countries:
        - countries
        - countries
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the Country Group.
          type: integer
        name:
          description: The name of the Country Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n * `true` (default) –\
            \ Allows only a specified list of countries (whitelist)\n * `false` –\
            \ Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: Array of countries
          items:
            type: string
          type: array
        status:
          description: The status of the Country Group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created. Format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    postCountryRestrictionGroup_200_response:
      example:
        countryRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
      properties:
        countryRestrictionGroups:
          items:
            $ref: '#/components/schemas/postCountryRestrictionGroup_200_response_countryRestrictionGroups_inner'
          type: array
      type: object
    getCountryRestrictionGroupsId_200_response_countryRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        countries:
        - countries
        - countries
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the Country Group.
          type: integer
        name:
          description: The name of the Country Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n * `true` (default) –\
            \ Allows only a specified list of countries (whitelist)\n * `false` –\
            \ Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: List of countries (each item is a string).
          items:
            type: string
          type: array
        status:
          description: The status of the Country Group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created. Format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    getCountryRestrictionGroupsId_200_response:
      example:
        countryRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
      properties:
        countryRestrictionGroups:
          items:
            $ref: '#/components/schemas/getCountryRestrictionGroupsId_200_response_countryRestrictionGroups_inner'
          type: array
      type: object
    putCountryRestrictionGroups_request:
      properties:
        name:
          description: The name of the Country Group.
          type: string
        status:
          description: The status of the Country Group.
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: "Indicates the kind of restriction: \n  * `true` (default)\
            \ – Allows only a specified list of countries (whitelist)\n  * `false`\
            \ – Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: List of countries (each item is a string).
          items:
            type: integer
          type: array
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
        fields:
          description: List of the object properties you want to pick up.
          items:
            type: string
          type: array
      type: object
    putCountryRestrictionGroups_200_response_countryRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        countries:
        - countries
        - countries
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the Country Restriction Group.
          type: integer
        name:
          description: The name of the Country Restriction Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n * `true` (default) –\
            \ Allows only a specified list of countries (whitelist)\n * `false` –\
            \ Allows all countries except the specified list (blacklist)\n"
          type: boolean
        countries:
          description: List of countries (each item is a string).
          items:
            type: string
          type: array
        status:
          description: The status of the Country Restriction Group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created. Format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    putCountryRestrictionGroups_200_response:
      example:
        countryRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          countries:
          - countries
          - countries
          startDate: startDate
          status: PENDING
      properties:
        countryRestrictionGroups:
          items:
            $ref: '#/components/schemas/putCountryRestrictionGroups_200_response_countryRestrictionGroups_inner'
          type: array
      type: object
    createDocuments_request:
      properties:
        documentTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        userId:
          description: The unique identifier of the User the document belongs to.
          type: integer
        residenceId:
          description: "The unique identifier of the User's [Tax Residence](/guide/user-verification/tax-residence.html).\
            \ Required if the document type is `24` or `25`. \nShouldn't be provided\
            \ otherwise.\n"
          format: int64
          minimum: 1
          type: integer
        documentTypeId:
          description: |
            The type of document. See the Document [Types](/guide/user-verification/documents.html#types-documenttypeid) article for the list.
          type: integer
        name:
          description: The name of the document.
          type: string
        fileContentBase64:
          description: The file encoded in standard base64 (RFC 4648).
          example: !!binary |-
            VTI5dFpTQnpZVzF3YkdVZ2RHVjRkQT09
          format: byte
          type: string
      required:
      - documentTypeId
      - fileContentBase64
      - name
      - userId
      type: object
    putDocument_request:
      properties:
        name:
          description: The name of the document.
          type: string
      type: object
    getDocumentDownloadUrl_200_response:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    tavRequestPOST_request_additionnalData:
      description: |
        This parameter is required in the case of `APPLE` tokenRequestor
      properties:
        certificates:
          description: |
            The certificate chain. Required when tokenRequestor is
            APPLE. The first element of array is the leaf
            certificate and the last should be the root certificate.
            There can be 0 or several sub certificates inbetween the
            first element of array and the last. All certificates
            are of type string (base64 encoded of DER format)
          items:
            type: string
          type: array
        nonce:
          description: |
            The nonce as provided by the Apple SDK. Required when tokenRequestor is `APPLE`
          type: string
        nonceSignature:
          description: |
            The nonce signature as provided by the Apple SDK.
            Required when tokenRequestor is `APPLE`
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    tavRequestPOST_request:
      properties:
        cardId:
          description: |
            The id of the card on which to create an issuerInitiatedDigitizationData request
          type: integer
        tokenRequestor:
          description: The Token Requestor also named wallet provider.
          enum:
          - APPLE
          - SAMSUNG
          - GOOGLE
          type: string
        additionnalData:
          $ref: '#/components/schemas/tavRequestPOST_request_additionnalData'
      required:
      - cardId
      - tokenRequestor
      type: object
    tavRequestPOST_200_response_issuerInitiatedDigitizationDatas_inner:
      example:
        additionnalData:
        - additionnalData
        - additionnalData
        createdDate: createdDate
        statusId: 1
        credential: credential
        cardId: 6
        modifiedDate: modifiedDate
        id: 0
        tokenRequestor: tokenRequestor
      properties:
        id:
          description: Tav request Id
          type: integer
        cardId:
          description: The id of the card
          type: integer
        statusId:
          description: |
            The status ID of the TAV request; "1" means the
            "issuerInitiatedDigitizationData have been
            requested", "2" means that the data object can be
            retrieved.
          type: integer
        credential:
          type: string
        additionnalData:
          description: |
            Treezor doesn't persist this information for security reasons
          items:
            type: string
          type: array
        tokenRequestor:
          description: The token requestor also named wallet provider.
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    tavRequestPOST_200_response:
      example:
        issuerInitiatedDigitizationDatas:
        - additionnalData:
          - additionnalData
          - additionnalData
          createdDate: createdDate
          statusId: 1
          credential: credential
          cardId: 6
          modifiedDate: modifiedDate
          id: 0
          tokenRequestor: tokenRequestor
        - additionnalData:
          - additionnalData
          - additionnalData
          createdDate: createdDate
          statusId: 1
          credential: credential
          cardId: 6
          modifiedDate: modifiedDate
          id: 0
          tokenRequestor: tokenRequestor
      properties:
        issuerInitiatedDigitizationDatas:
          items:
            $ref: '#/components/schemas/tavRequestPOST_200_response_issuerInitiatedDigitizationDatas_inner'
          type: array
      type: object
    postMandates_request:
      properties:
        sddType:
          description: |
            The type of Mandate, which can be:
            * `core` – To debit individuals (physical persons).
            * `b2b` – To debit legal entities.
          enum:
          - core
          - b2b
          type: string
        isPaper:
          description: |
            Indicates whether the Mandate is a paper-based document, or electronically signed. As of today, should only be set to `true`.
          type: boolean
        userId:
          description: "The unique identifier of the end user requesting the SEPA\
            \ Direct Debit (i.e., the creditor initiating the Mandate request)."
          type: integer
        debtorName:
          description: |
            The full name of the debited entity or individual. Format: alphanumeric with at least 3 alphabetic characters.
          format: alphanumeric
          type: string
        debtorAddress:
          description: The address of the debited end user.
          type: string
        debtorCity:
          description: City in which the debited end user is domiciled.
          type: string
        debtorZipcode:
          description: Postcode of the city in which the debited end user is domiciled.
          type: string
        debtorCountry:
          description: Country in which the debited end user is domiciled.
          example: FR
          format: ISO 3166-1 alpha-2
          type: string
        debtorIban:
          description: IBAN of the debited user.
          type: string
        debtorBic:
          description: The BIC (or SWIFT) of the debited user
          type: string
        sequenceType:
          description: |
            Defines whether or not the debtor will be debited multiple times. Can be one of the following:
            * `one-off` – For a one-time payment.
            * `recurrent` – For recurring payments.
          enum:
          - one-off
          - recurrent
          type: string
        createdIp:
          description: IP address of the end user requesting the SDD.
          type: string
        signatureDate:
          description: "Date on which the Mandate has been signed by the end user.\
            \ \n"
          format: date
          type: string
      required:
      - debtorAddress
      - debtorCity
      - debtorCountry
      - debtorIban
      - debtorName
      - debtorZipcode
      - isPaper
      - sddType
      - sequenceType
      - signatureDate
      - userId
      type: object
    deleteMandate_200_response_mandates_inner:
      example:
        uniqueMandateReference: uniqueMandateReference
        debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
        isPaper: true
        debtorAddress: debtorAddress
        creditorName: creditorName
        debtorReferencePartyName: debtorReferencePartyName
        createdIp: createdIp
        debtorCity: debtorCity
        contractDescription: contractDescription
        title: title
        creditorZipCode: creditorZipCode
        creditorCountry: creditorCountry
        debtorBic: debtorBic
        debtorIban: debtorIban
        mandateStatus: CANCELED
        mandateId: 0
        creditorCity: creditorCity
        debtorCountry: FR
        debtorSignatureIp: debtorSignatureIp
        creditorReferencePartyName: creditorReferencePartyName
        sepaCreditorIdentifier: sepaCreditorIdentifier
        creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
        debtorIdentificationCode: debtorIdentificationCode
        signed: 1
        debtorName: debtorName
        debtorZipCode: debtorZipCode
        userId: 6
        legalInformations: legalInformations
        contractIdentificationNumber: contractIdentificationNumber
        creditorAddress: creditorAddress
        createdDate: createdDate
        signatureDate: signatureDate
        revocationSignatureDate: revocationSignatureDate
        sddType: core
        modifiedDate: modifiedDate
        sequenceType: one-off
      properties:
        mandateId:
          type: integer
        title:
          type: string
        legalInformations:
          type: string
        uniqueMandateReference:
          type: string
        mandateStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          example: CANCELED
          type: string
        userId:
          type: integer
        debtorName:
          type: string
        debtorAddress:
          type: string
        debtorCity:
          type: string
        debtorZipCode:
          type: string
        debtorCountry:
          example: FR
          format: ISO 3166-1 alpha-2
          type: string
        debtorIban:
          type: string
        debtorBic:
          type: string
        sequenceType:
          enum:
          - one-off
          - recurrent
          type: string
        creditorName:
          type: string
        sepaCreditorIdentifier:
          type: string
        creditorAddress:
          type: string
        creditorCity:
          type: string
        creditorZipCode:
          type: string
        creditorCountry:
          type: string
        signatureDate:
          description: Date YYYY-MM-DD
          type: string
        debtorSignatureIp:
          type: string
        signed:
          type: integer
        debtorIdentificationCode:
          type: string
        debtorReferencePartyName:
          type: string
        debtorReferenceIdentificationCode:
          type: string
        creditorReferencePartyName:
          type: string
        creditorReferenceIdentificationCode:
          type: string
        contractIdentificationNumber:
          type: string
        contractDescription:
          type: string
        isPaper:
          type: boolean
        sddType:
          enum:
          - core
          - b2b
          type: string
        revocationSignatureDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        createdIp:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    deleteMandate_200_response:
      example:
        mandates:
        - uniqueMandateReference: uniqueMandateReference
          debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
          isPaper: true
          debtorAddress: debtorAddress
          creditorName: creditorName
          debtorReferencePartyName: debtorReferencePartyName
          createdIp: createdIp
          debtorCity: debtorCity
          contractDescription: contractDescription
          title: title
          creditorZipCode: creditorZipCode
          creditorCountry: creditorCountry
          debtorBic: debtorBic
          debtorIban: debtorIban
          mandateStatus: CANCELED
          mandateId: 0
          creditorCity: creditorCity
          debtorCountry: FR
          debtorSignatureIp: debtorSignatureIp
          creditorReferencePartyName: creditorReferencePartyName
          sepaCreditorIdentifier: sepaCreditorIdentifier
          creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
          debtorIdentificationCode: debtorIdentificationCode
          signed: 1
          debtorName: debtorName
          debtorZipCode: debtorZipCode
          userId: 6
          legalInformations: legalInformations
          contractIdentificationNumber: contractIdentificationNumber
          creditorAddress: creditorAddress
          createdDate: createdDate
          signatureDate: signatureDate
          revocationSignatureDate: revocationSignatureDate
          sddType: core
          modifiedDate: modifiedDate
          sequenceType: one-off
        - uniqueMandateReference: uniqueMandateReference
          debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
          isPaper: true
          debtorAddress: debtorAddress
          creditorName: creditorName
          debtorReferencePartyName: debtorReferencePartyName
          createdIp: createdIp
          debtorCity: debtorCity
          contractDescription: contractDescription
          title: title
          creditorZipCode: creditorZipCode
          creditorCountry: creditorCountry
          debtorBic: debtorBic
          debtorIban: debtorIban
          mandateStatus: CANCELED
          mandateId: 0
          creditorCity: creditorCity
          debtorCountry: FR
          debtorSignatureIp: debtorSignatureIp
          creditorReferencePartyName: creditorReferencePartyName
          sepaCreditorIdentifier: sepaCreditorIdentifier
          creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
          debtorIdentificationCode: debtorIdentificationCode
          signed: 1
          debtorName: debtorName
          debtorZipCode: debtorZipCode
          userId: 6
          legalInformations: legalInformations
          contractIdentificationNumber: contractIdentificationNumber
          creditorAddress: creditorAddress
          createdDate: createdDate
          signatureDate: signatureDate
          revocationSignatureDate: revocationSignatureDate
          sddType: core
          modifiedDate: modifiedDate
          sequenceType: one-off
      properties:
        mandates:
          items:
            $ref: '#/components/schemas/deleteMandate_200_response_mandates_inner'
          type: array
      type: object
    getMccRestrictionGroups_200_response_mccRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        mcc:
        - 6
        - 6
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the MCC Group.
          type: integer
        name:
          description: The name of the MCC Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: The list of MCC (each item is an integer).
          items:
            type: integer
          type: array
        status:
          description: The status of the MCC group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was.
          type: string
      type: object
    getMccRestrictionGroups_200_response:
      example:
        mccRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
      properties:
        mccRestrictionGroups:
          items:
            $ref: '#/components/schemas/getMccRestrictionGroups_200_response_mccRestrictionGroups_inner'
          type: array
      type: object
    postMccRestrictionGroup_request:
      properties:
        name:
          description: The name of the MCC Group.
          type: string
        status:
          description: The status of the MCC group.
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: The list of MCC (each item is an integer).
          items:
            type: integer
          type: array
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
      required:
      - mcc
      - name
      type: object
    postMccRestrictionGroup_200_response_mccRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        mcc:
        - 6
        - 6
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the MCC restriction group.
          type: integer
        name:
          description: The name of the MCC restriction group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: The list of MCC (each item is an integer)
          items:
            type: integer
          type: array
        status:
          description: The status of the MCC group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created.
          type: string
      type: object
    postMccRestrictionGroup_200_response:
      example:
        mccRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
      properties:
        mccRestrictionGroups:
          items:
            $ref: '#/components/schemas/postMccRestrictionGroup_200_response_mccRestrictionGroups_inner'
          type: array
      type: object
    getMccRestrictionGroupsId_200_response_mccRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        mcc:
        - 6
        - 6
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the MCC Restriction Group.
          type: integer
        name:
          description: The name of the MCC Restriction Group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: List of MCC (each item is an integer)
          items:
            type: integer
          type: array
        status:
          description: The status of the MCC group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created.
          type: string
      type: object
    getMccRestrictionGroupsId_200_response:
      example:
        mccRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
      properties:
        mccRestrictionGroups:
          items:
            $ref: '#/components/schemas/getMccRestrictionGroupsId_200_response_mccRestrictionGroups_inner'
          type: array
      type: object
    putMccRestrictionGroups_request:
      properties:
        name:
          description: Name of the MCC restriction group
          type: string
        status:
          description: Status of the MCC restriction group
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: determines whether it will be a black or a white list
          type: boolean
        mcc:
          description: Array of MCC
          items:
            type: integer
          type: array
        startDate:
          description: |
            The date at which the MCC restriction group will be take
            into account. Format YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
        fields:
          description: List of the object properties you want to pick up.
          items:
            type: string
          type: array
      type: object
    putMccRestrictionGroups_200_response_mccRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        mcc:
        - 6
        - 6
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the MCC restriction group
          type: integer
        name:
          description: The name of the MCC restriction group
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: The list of MCC (each item is an integer)
          items:
            type: integer
          type: array
        status:
          description: The status of the MCC restriction group
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: The date and time at which the restriction group was created.
          type: string
      type: object
    putMccRestrictionGroups_200_response:
      example:
        mccRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
      properties:
        mccRestrictionGroups:
          items:
            $ref: '#/components/schemas/putMccRestrictionGroups_200_response_mccRestrictionGroups_inner'
          type: array
      type: object
    deleteMccRestrictionGroups_200_response_mccRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        mcc:
        - 6
        - 6
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the MCC restriction group.
          type: integer
        name:
          description: The namme of the MCC restriction group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant caegories (whitelist)\n* `false`\
            \ – Allows all merchant categories except the specified list (blacklist)\n"
          type: boolean
        mcc:
          description: The list of MCC (each item is an integer).
          items:
            type: integer
          type: array
        status:
          description: The status of the MCC restriction group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Defaults to the date and time of creation. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: The date and time at which the restriction group was created.
          type: string
      type: object
    deleteMccRestrictionGroups_200_response:
      example:
        mccRestrictionGroups:
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
        - createdDate: createdDate
          isWhitelist: true
          name: name
          id: 0
          mcc:
          - 6
          - 6
          startDate: startDate
          status: PENDING
      properties:
        mccRestrictionGroups:
          items:
            $ref: '#/components/schemas/deleteMccRestrictionGroups_200_response_mccRestrictionGroups_inner'
          type: array
      type: object
    postMerchantIdRestrictionGroup_request:
      properties:
        name:
          description: Name of the Merchant ID restriction group.
          type: string
        status:
          description: Status of the Merchant ID restriction group.
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant ids (whitelist)\n* `false`\
            \ – Allows all merchant ids except the specified list (blacklist)\n"
          type: boolean
        merchants:
          description: List of Merchant Ids (each item is a string).
          items:
            type: string
          type: array
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
      required:
      - merchants
      - name
      type: object
    putMerchantIdRestrictionGroups_request:
      properties:
        name:
          description: Name of the merchant ID restriction group
          type: string
        status:
          description: Status of the merchant ID restriction group
          enum:
          - VALIDATED
          - PENDING
          - CANCELED
          type: string
        isWhitelist:
          default: true
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant ids (whitelist)\n* `false`\
            \ – Allows all merchant ids except the specified list (blacklist)\n"
          type: boolean
        merchants:
          deprecated: true
          description: |
            (Deprecated. Use `PUT /merchantIdRestrictionGroups/{id}/DeltaUpdate` to update merchants ID list)
          items:
            type: string
          type: array
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          format: datetime
          type: string
      type: object
    put_merchandidrestrictiongroups_deltaupdate_request:
      properties:
        merchants:
          description: The list of Merchant Ids (each item is a string)
          items:
            type: string
          type: array
        merchantsOperation:
          description: Whether to `add` or `removed` the Merchant Ids.
          enum:
          - add
          - remove
          type: string
      type: object
    put_midrestrictiongroups_request:
      properties:
        merchants:
          description: The list of Merchant Ids (each item is a string).
          items:
            type: string
          type: array
      type: object
    postPayin_request:
      properties:
        payinTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        walletId:
          description: The unique identifier of the credited Wallet.
          type: integer
        userId:
          description: |
            The unique identifier of the User making the payin.

            Note that for the `paymentMethodId` of `21` and `26`, you don't need to provide this value.
            It will be set automatically by Treezor.
          type: string
        paymentMethodId:
          description: |
            | Id | Payment by |
            | ---| --- |
            | `20` | SEPA Credit Transfer (SCTR) – You can only create such payins in Sandbox, otherwise created automatically upon receiving a transfer. |
            | `21` | SEPA Direct Debit Core |
            | `23` | Full Hosted HTML Payment Form. If you use this `paymentMethodId`, the `paymentAcceptedUrl`, `paymentRefusedUrl`, `paymentWaitingUrl`, `paymentCanceledUrl` and `paymentExceptionUrl` fields are mandatory. CSS of the payment page can be customized. |
            | `24` | IFrame Payment Form. Please note that if you use this `paymentMethodId`, the `paymentAcceptedUrl`, `paymentRefusedUrl`, `paymentWaitingUrl`, `paymentCanceledUrl` and `paymentExceptionUrl` fields are mandatory. CSS of the payment page can be customized. |
            | `25` | Card topup - You cannot create a payin directly with this method id. The payin will be automatically created by Treezor. |
            | `26` | Check |
            | `27` | Instant Credit Transfers (SCTR Inst) – You cannot create a payin directly with this method id. The payin will be automatically created by Treezor. |
          enum:
          - 20
          - 21
          - 23
          - 24
          - 25
          - 26
          - 27
          type: integer
        paymentAcceptedUrl:
          description: |
            URL to which the cardholder is redirected if payment is successful. When using `paymentMethodId` `23` and `24` an HTTPS URL is mandatory.
          type: string
        paymentWaitingUrl:
          description: |
            URL to which the cardholder is redirected to wait payment processing. When using `paymentMethodId` `23` and `24` an HTTPS URL is mandatory.
          type: string
        paymentCanceledUrl:
          description: |
            URL to which the cardholder is redirected if payment is canceled. When using `paymentMethodId` `23` and `24` an HTTPS URL is mandatory.
          type: string
        paymentRefusedUrl:
          description: |
            URL to which the cardholder is redirected if payment is refused. When using `paymentMethodId` `23` and `24` an HTTPS URL is mandatory.
          type: string
        paymentExceptionUrl:
          description: |
            URL to which the cardholder is redirected if the payment process raised an exception. When using `paymentMethodId` `23` and `24` an HTTPS URL is mandatory.
          type: string
        amount:
          description: The amount of the payin.
          format: float
          type: number
        distributorFee:
          description: Distributor fee.
          format: float
          type: number
        currency:
          description: |
            The currency of the payin. Must be the same as the Wallet currency.
            Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
          type: string
        messageToUser:
          description: "Message to send to Wallet of the user. In the case of a SEPA\
            \ Direct Debit Core payment method, this parameter will be the reconciliation\
            \ information transmitted to the Debtor (i.e., Invoice number). In this\
            \ case it can't exceed 140 characters."
          type: string
        language:
          description: Language for the third party interface.
          enum:
          - FRA
          - GBR
          - ESP
          - ITA
          - PRT
          type: string
        createdIp:
          description: The IP address of the User.
          type: string
        payinDate:
          description: "The date at which the SDD should be presented. \n\nIn the\
            \ case of SDD Core, this parameter defaults to the third working day following\
            \ the payin creation if left empty. \n\nFormat: YYYY-MM-DD, a [SEPA Open\
            \ Banking Day](/guide/overview/glossary.html#sepa-open-banking-days) is\
            \ expected (at least 2 days after the creation).\n"
          type: string
        mandateId:
          description: The unique identifier of the Mandate. This parameter is mandatory
            when performing a payin with method SDD Core.
          type: integer
      required:
      - amount
      - currency
      - paymentMethodId
      - userId
      - walletId
      type: object
    getPayinrefunds_200_response_payinrefunds_inner:
      example:
        payinrefundId: 0
        payinrefundDate: 5
        walletId: 6
        payinId: 1
        amount: amount
        createdDate: createdDate
        payinrefundStatus: PENDING
        payinrefundTag: payinrefundTag
        modifiedDate: modifiedDate
        currency: currency
        totalRows: 5
      properties:
        payinrefundId:
          type: integer
        payinrefundTag:
          type: string
        payinrefundStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        walletId:
          type: integer
        payinId:
          type: integer
        payinrefundDate:
          type: integer
        amount:
          type: string
        currency:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
      type: object
    getPayinrefunds_200_response:
      example:
        payinrefunds:
        - payinrefundId: 0
          payinrefundDate: 5
          walletId: 6
          payinId: 1
          amount: amount
          createdDate: createdDate
          payinrefundStatus: PENDING
          payinrefundTag: payinrefundTag
          modifiedDate: modifiedDate
          currency: currency
          totalRows: 5
        - payinrefundId: 0
          payinrefundDate: 5
          walletId: 6
          payinId: 1
          amount: amount
          createdDate: createdDate
          payinrefundStatus: PENDING
          payinrefundTag: payinrefundTag
          modifiedDate: modifiedDate
          currency: currency
          totalRows: 5
      properties:
        payinrefunds:
          items:
            $ref: '#/components/schemas/getPayinrefunds_200_response_payinrefunds_inner'
          type: array
      type: object
    getPayouts_200_response_payouts_inner:
      example:
        uniqueMandateReference: uniqueMandateReference
        metadata: "{}"
        payoutType: Credit Transfer
        userLastname: userLastname
        payoutTypeId: 6
        payoutStatus: PENDING
        supportingFileLink: supportingFileLink
        endToEndId: endToEndId
        payoutDate: payoutDate
        informationStatus: informationStatus
        virtualIbanId: 2
        bankaccountIBAN: bankaccountIBAN
        walletAlias: walletAlias
        currency: currency
        reasonCode: reasonCode
        walletEventName: walletEventName
        walletId: 1
        reasonDescription: reasonDescription
        amount: amount
        label: label
        totalRows: 7
        payoutId: 0
        userId: 5
        codeStatus: codeStatus
        virtualIbanReference: virtualIbanReference
        payoutTag: payoutTag
        createdDate: createdDate
        modifiedDate: modifiedDate
        userFirstname: userFirstname
        beneficiaryId: 5
        partnerFee: partnerFee
      properties:
        payoutId:
          type: integer
        payoutTag:
          type: string
        payoutStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        payoutTypeId:
          type: integer
        payoutType:
          enum:
          - Credit Transfer
          - Direct Debit
          - Sepa Instant Credit Transfer
          type: string
        walletId:
          type: integer
        payoutDate:
          description: Date YYYY-MM-DD
          type: string
        walletEventName:
          type: string
        walletAlias:
          type: string
        userFirstname:
          type: string
        userLastname:
          type: string
        userId:
          type: integer
        beneficiaryId:
          type: integer
        uniqueMandateReference:
          type: string
        bankaccountIBAN:
          type: string
        virtualIbanId:
          nullable: true
          type: integer
        virtualIbanReference:
          nullable: true
          type: string
        label:
          type: string
        endToEndId:
          type: string
        reasonCode:
          nullable: true
          type: string
        reasonDescription:
          nullable: true
          type: string
        codeStatus:
          type: string
        informationStatus:
          type: string
        supportingFileLink:
          type: string
        amount:
          type: string
        currency:
          type: string
        partnerFee:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
        metadata:
          nullable: true
          type: object
      type: object
    getPayouts_200_response:
      example:
        payouts:
        - uniqueMandateReference: uniqueMandateReference
          metadata: "{}"
          payoutType: Credit Transfer
          userLastname: userLastname
          payoutTypeId: 6
          payoutStatus: PENDING
          supportingFileLink: supportingFileLink
          endToEndId: endToEndId
          payoutDate: payoutDate
          informationStatus: informationStatus
          virtualIbanId: 2
          bankaccountIBAN: bankaccountIBAN
          walletAlias: walletAlias
          currency: currency
          reasonCode: reasonCode
          walletEventName: walletEventName
          walletId: 1
          reasonDescription: reasonDescription
          amount: amount
          label: label
          totalRows: 7
          payoutId: 0
          userId: 5
          codeStatus: codeStatus
          virtualIbanReference: virtualIbanReference
          payoutTag: payoutTag
          createdDate: createdDate
          modifiedDate: modifiedDate
          userFirstname: userFirstname
          beneficiaryId: 5
          partnerFee: partnerFee
        - uniqueMandateReference: uniqueMandateReference
          metadata: "{}"
          payoutType: Credit Transfer
          userLastname: userLastname
          payoutTypeId: 6
          payoutStatus: PENDING
          supportingFileLink: supportingFileLink
          endToEndId: endToEndId
          payoutDate: payoutDate
          informationStatus: informationStatus
          virtualIbanId: 2
          bankaccountIBAN: bankaccountIBAN
          walletAlias: walletAlias
          currency: currency
          reasonCode: reasonCode
          walletEventName: walletEventName
          walletId: 1
          reasonDescription: reasonDescription
          amount: amount
          label: label
          totalRows: 7
          payoutId: 0
          userId: 5
          codeStatus: codeStatus
          virtualIbanReference: virtualIbanReference
          payoutTag: payoutTag
          createdDate: createdDate
          modifiedDate: modifiedDate
          userFirstname: userFirstname
          beneficiaryId: 5
          partnerFee: partnerFee
      properties:
        payouts:
          items:
            $ref: '#/components/schemas/getPayouts_200_response_payouts_inner'
          type: array
      type: object
    postPayout_request:
      properties:
        payoutTag:
          description: |
            Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.
          type: integer
        walletId:
          description: The unique identifier of the debited Wallet.
          type: integer
        payoutTypeId:
          description: |
            Type of payout among the following:
            * `1` for SEPA Credit Transfer (default)
            * `2` for SEPA Direct Debit
            * `3` for SEPA Instant Credit Transfer
          enum:
          - 1
          - 2
          - 3
          type: integer
        bankAccountId:
          deprecated: true
          description: DEPRECATED - Do not use this field as it is deprecated. Please
            use `beneficiaryId` instead.
          type: integer
        beneficiaryId:
          description: The unique identifier of the payout Beneficiary.
          type: integer
        label:
          description: "The payout label that will be displayed on the receiver's\
            \ bank account. <br> Max length: 140 characters.\n* Allowed characters:\
            \ `a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H\
            \ I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 / - ? : ( )\
            \ . , ' + Space“.` \n* Accentuated characters will be replaced by the\
            \ same characters without accent \n* `/n` character are removed\n* Must\
            \ not start or end with `/`\n* Must not contain `//`\n"
          type: string
        endToEndId:
          description: "Unique identification assigned by the final client to unumbiguously\
            \ identify the transaction. This identification is passed on, unchanged,\
            \ throughout the entire end-to-end chain. Length is 35 chars max\n* Allowed\
            \ characters: `a b c d e f g h i j k l m n o p q r s t u v w x y z A B\
            \ C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9\
            \ / - ? : ( ) . , ' + Space“.` \n* Accentuated characters will be replaced\
            \ by the same characters without accent \n* `/n` character are removed\n\
            * Must not start or end with `/`\n* Must not contain `//`\n"
          type: string
        amount:
          description: "The amount of the payout.\n* Must be greater than `0`. \n\
            * Must be specified as a float with two decimals. \n\nFor example `180.99`\
            \ for 180,99 euros and `120.00` for 120 euros. \n"
          format: float
          type: number
        currency:
          description: |
            The currency of the transfer amount. Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
          type: string
        supportFileLink:
          description: The link of the support file.
          type: string
      required:
      - amount
      - beneficiaryId
      - currency
      - walletId
      type: object
    postPayout_200_response_payouts_inner:
      example:
        uniqueMandateReference: uniqueMandateReference
        metadata: "{}"
        payoutType: Credit Transfer
        userLastname: userLastname
        payoutTypeId: 6
        payoutStatus: PENDING
        supportingFileLink: supportingFileLink
        endToEndId: endToEndId
        payoutDate: payoutDate
        informationStatus: informationStatus
        virtualIbanId: 2
        bankaccountIBAN: bankaccountIBAN
        walletAlias: walletAlias
        currency: currency
        reasonCode: reasonCode
        walletEventName: walletEventName
        walletId: 1
        reasonDescription: reasonDescription
        amount: amount
        label: label
        totalRows: 7
        payoutId: 0
        userId: 5
        codeStatus: codeStatus
        virtualIbanReference: virtualIbanReference
        payoutTag: payoutTag
        createdDate: createdDate
        modifiedDate: modifiedDate
        userFirstname: userFirstname
        beneficiaryId: 5
        partnerFee: partnerFee
      properties:
        payoutId:
          type: integer
        payoutTag:
          type: string
        payoutStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        payoutTypeId:
          type: integer
        payoutType:
          enum:
          - Credit Transfer
          - Direct Debit
          - Instant Sepa Credit Transfer
          type: string
        walletId:
          type: integer
        payoutDate:
          description: Date YYYY-MM-DD
          type: string
        walletEventName:
          type: string
        walletAlias:
          type: string
        userFirstname:
          type: string
        userLastname:
          type: string
        userId:
          type: integer
        beneficiaryId:
          type: integer
        uniqueMandateReference:
          type: string
        bankaccountIBAN:
          type: string
        virtualIbanId:
          nullable: true
          type: integer
        virtualIbanReference:
          nullable: true
          type: string
        label:
          type: string
        endToEndId:
          type: string
        reasonCode:
          nullable: true
          type: string
        reasonDescription:
          nullable: true
          type: string
        codeStatus:
          type: string
        informationStatus:
          type: string
        supportingFileLink:
          type: string
        amount:
          type: string
        currency:
          type: string
        partnerFee:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
        metadata:
          nullable: true
          type: object
      type: object
    postPayout_200_response:
      example:
        payouts:
        - uniqueMandateReference: uniqueMandateReference
          metadata: "{}"
          payoutType: Credit Transfer
          userLastname: userLastname
          payoutTypeId: 6
          payoutStatus: PENDING
          supportingFileLink: supportingFileLink
          endToEndId: endToEndId
          payoutDate: payoutDate
          informationStatus: informationStatus
          virtualIbanId: 2
          bankaccountIBAN: bankaccountIBAN
          walletAlias: walletAlias
          currency: currency
          reasonCode: reasonCode
          walletEventName: walletEventName
          walletId: 1
          reasonDescription: reasonDescription
          amount: amount
          label: label
          totalRows: 7
          payoutId: 0
          userId: 5
          codeStatus: codeStatus
          virtualIbanReference: virtualIbanReference
          payoutTag: payoutTag
          createdDate: createdDate
          modifiedDate: modifiedDate
          userFirstname: userFirstname
          beneficiaryId: 5
          partnerFee: partnerFee
        - uniqueMandateReference: uniqueMandateReference
          metadata: "{}"
          payoutType: Credit Transfer
          userLastname: userLastname
          payoutTypeId: 6
          payoutStatus: PENDING
          supportingFileLink: supportingFileLink
          endToEndId: endToEndId
          payoutDate: payoutDate
          informationStatus: informationStatus
          virtualIbanId: 2
          bankaccountIBAN: bankaccountIBAN
          walletAlias: walletAlias
          currency: currency
          reasonCode: reasonCode
          walletEventName: walletEventName
          walletId: 1
          reasonDescription: reasonDescription
          amount: amount
          label: label
          totalRows: 7
          payoutId: 0
          userId: 5
          codeStatus: codeStatus
          virtualIbanReference: virtualIbanReference
          payoutTag: payoutTag
          createdDate: createdDate
          modifiedDate: modifiedDate
          userFirstname: userFirstname
          beneficiaryId: 5
          partnerFee: partnerFee
      properties:
        payouts:
          items:
            $ref: '#/components/schemas/postPayout_200_response_payouts_inner'
          type: array
      type: object
    postPayoutRefund_request:
      properties:
        payoutId:
          description: The unique identifier of the payout for which the recall is
            to be made.
          type: string
        accessTag:
          description: "A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html).\
            \ \n<br>Max length: 250 characters.\n"
          type: string
        payoutRefundTag:
          description: |
            Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.
            <br>Max length: 250 characters
            <br>Format: hc characters and `/` `!` `-` `_` `.` `*` `'` `(` `)`
          type: string
        requestAmount:
          description: The amount of the recall request. Defaults to the initial Payout
            amount.
          format: float
          type: number
        requestCurrency:
          default: The initial Payout amount currency.
          description: The currency of the recall request.
          type: string
        requestComment:
          description: |
            Max length: 105 characters.
          type: string
        reasonCode:
          description: |
            The reason for the recall, as listed in the [Types of Recalls](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) article.
          enum:
          - DUPL
          - TECH
          - FRAD
          - CUST
          - AM09
          - AC03
          type: string
      required:
      - payoutId
      - reasonCode
      type: object
    postPayoutRefund_200_response_payoutRefunds_inner:
      example:
        negativeResponseReasonCode: negativeResponseReasonCode
        payoutId: payoutId
        requestAmount: 0.8008281904610115
        codeStatus: codeStatus
        informationStatus: PENDING
        requestComment: requestComment
        createdDate: createdDate
        payoutRefundTag: payoutRefundTag
        modifiedDate: modifiedDate
        refundCurrency: EUR
        id: id
        reasonCode: DUPL
        requestCurrency: EUR
        refundDate: refundDate
        refundComment: refundComment
        refundAmount: 6.0274563
      properties:
        id:
          format: uuid v4
          type: string
        payoutRefundTag:
          type: string
        codeStatus:
          type: string
        informationStatus:
          enum:
          - PENDING
          - VALIDATED
          - CANCELED
          type: string
        payoutId:
          format: uuid v4
          type: string
        requestAmount:
          type: number
        requestCurrency:
          enum:
          - EUR
          type: string
        requestComment:
          type: string
        reasonCode:
          enum:
          - DUPL
          - TECH
          - FRAD
          - CUST
          - AM09
          - AC03
          type: string
        refundAmount:
          format: float
          type: number
        refundCurrency:
          enum:
          - EUR
          type: string
        refundDate:
          type: string
        refundComment:
          type: string
        negativeResponseReasonCode:
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    postPayoutRefund_200_response:
      example:
        payoutRefunds:
        - negativeResponseReasonCode: negativeResponseReasonCode
          payoutId: payoutId
          requestAmount: 0.8008281904610115
          codeStatus: codeStatus
          informationStatus: PENDING
          requestComment: requestComment
          createdDate: createdDate
          payoutRefundTag: payoutRefundTag
          modifiedDate: modifiedDate
          refundCurrency: EUR
          id: id
          reasonCode: DUPL
          requestCurrency: EUR
          refundDate: refundDate
          refundComment: refundComment
          refundAmount: 6.0274563
        - negativeResponseReasonCode: negativeResponseReasonCode
          payoutId: payoutId
          requestAmount: 0.8008281904610115
          codeStatus: codeStatus
          informationStatus: PENDING
          requestComment: requestComment
          createdDate: createdDate
          payoutRefundTag: payoutRefundTag
          modifiedDate: modifiedDate
          refundCurrency: EUR
          id: id
          reasonCode: DUPL
          requestCurrency: EUR
          refundDate: refundDate
          refundComment: refundComment
          refundAmount: 6.0274563
      properties:
        payoutRefunds:
          items:
            $ref: '#/components/schemas/postPayoutRefund_200_response_payoutRefunds_inner'
          type: array
      type: object
    getRecallRs_200_response_recallrs_inner:
      example:
        userTypeId: 7
        inError: true
        payinRefundId: 1
        userStatusId: 9
        updatedDate: updatedDate
        automaticResponse: automaticResponse
        walletDesactivationDate: walletDesactivationDate
        payinId: 7
        responseType: 1
        sctrSettelmentDate: sctrSettelmentDate
        sctrDbtrBIC: sctrDbtrBIC
        recallRSepaMessageId: 6
        sctrDbtrName: sctrDbtrName
        fraudConfirmed: true
        id: 0
        reasonCode: DUPL
        walletStatusId: 2
        receivedDate: receivedDate
        additionalInformation: additionalInformation
        walletId: 3
        clientId: 5
        sctrAmount: sctrAmount
        negativeResponseReasonCode: CUST
        walletActivationDate: walletActivationDate
        responseComment: responseComment
        partialRefund: true
        userName: userName
        userId: 2
        statusLabel: PENDING
        negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
        createdDate: createdDate
        statusId: 5
        responseSepaMessageId: 4
        boResponse: true
        cxlId: 1
        comment: comment
        frozenWalletFollowingRecallr: true
        sctrDbtrIBAN: sctrDbtrIBAN
      properties:
        id:
          type: integer
        recallRSepaMessageId:
          type: integer
        cxlId:
          type: integer
        statusId:
          description: |
            The status of the recall. See [Status](/guide/transfers/sepa-recalls.html#status-statusid) for more information.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
        statusLabel:
          description: |
            The status of the recall. See [Status](/guide/transfers/sepa-recalls.html#status-statusid) for more information.
          enum:
          - PENDING
          - PENDING_PAYIN_REFUND_CREATED
          - PENDING_ANSWER_REQUESTED
          - ACCEPTED
          - REJECTED
          - CANCELED
          - IN_ERROR
          type: string
        reasonCode:
          description: |
            The type of recall. See [Types](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) for more information.
          enum:
          - DUPL
          - TECH
          - FRAD
          - CUST
          - AM09
          - AC03
          type: string
        additionalInformation:
          type: string
        clientId:
          type: integer
        userId:
          type: integer
        userTypeId:
          type: integer
        userName:
          type: string
        userStatusId:
          type: integer
        walletId:
          type: integer
        walletStatusId:
          type: integer
        walletActivationDate:
          type: string
        walletDesactivationDate:
          type: string
        sctrAmount:
          type: string
        sctrSettelmentDate:
          type: string
        sctrDbtrIBAN:
          type: string
        sctrDbtrBIC:
          type: string
        sctrDbtrName:
          type: string
        responseSepaMessageId:
          type: integer
        receivedDate:
          type: string
        payinId:
          type: integer
        payinRefundId:
          type: integer
        responseType:
          type: integer
        negativeResponseReasonCode:
          enum:
          - CUST
          - LEGL
          - AC04
          - NOOR
          - AM04
          - NOAS
          - ARDT
          type: string
        negativeResponseAdditionalInformation:
          type: string
        responseComment:
          type: string
        boResponse:
          type: boolean
        frozenWalletFollowingRecallr:
          type: boolean
        automaticResponse:
          type: string
        comment:
          type: string
        fraudConfirmed:
          type: boolean
        partialRefund:
          type: boolean
        inError:
          type: boolean
        createdDate:
          type: string
        updatedDate:
          type: string
      type: object
    getRecallRs_200_response:
      example:
        recallrs:
        - userTypeId: 7
          inError: true
          payinRefundId: 1
          userStatusId: 9
          updatedDate: updatedDate
          automaticResponse: automaticResponse
          walletDesactivationDate: walletDesactivationDate
          payinId: 7
          responseType: 1
          sctrSettelmentDate: sctrSettelmentDate
          sctrDbtrBIC: sctrDbtrBIC
          recallRSepaMessageId: 6
          sctrDbtrName: sctrDbtrName
          fraudConfirmed: true
          id: 0
          reasonCode: DUPL
          walletStatusId: 2
          receivedDate: receivedDate
          additionalInformation: additionalInformation
          walletId: 3
          clientId: 5
          sctrAmount: sctrAmount
          negativeResponseReasonCode: CUST
          walletActivationDate: walletActivationDate
          responseComment: responseComment
          partialRefund: true
          userName: userName
          userId: 2
          statusLabel: PENDING
          negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
          createdDate: createdDate
          statusId: 5
          responseSepaMessageId: 4
          boResponse: true
          cxlId: 1
          comment: comment
          frozenWalletFollowingRecallr: true
          sctrDbtrIBAN: sctrDbtrIBAN
        - userTypeId: 7
          inError: true
          payinRefundId: 1
          userStatusId: 9
          updatedDate: updatedDate
          automaticResponse: automaticResponse
          walletDesactivationDate: walletDesactivationDate
          payinId: 7
          responseType: 1
          sctrSettelmentDate: sctrSettelmentDate
          sctrDbtrBIC: sctrDbtrBIC
          recallRSepaMessageId: 6
          sctrDbtrName: sctrDbtrName
          fraudConfirmed: true
          id: 0
          reasonCode: DUPL
          walletStatusId: 2
          receivedDate: receivedDate
          additionalInformation: additionalInformation
          walletId: 3
          clientId: 5
          sctrAmount: sctrAmount
          negativeResponseReasonCode: CUST
          walletActivationDate: walletActivationDate
          responseComment: responseComment
          partialRefund: true
          userName: userName
          userId: 2
          statusLabel: PENDING
          negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
          createdDate: createdDate
          statusId: 5
          responseSepaMessageId: 4
          boResponse: true
          cxlId: 1
          comment: comment
          frozenWalletFollowingRecallr: true
          sctrDbtrIBAN: sctrDbtrIBAN
      properties:
        recallrs:
          items:
            $ref: '#/components/schemas/getRecallRs_200_response_recallrs_inner'
          type: array
      type: object
    putRecallR_request:
      properties:
        accessSignature:
          deprecated: true
          description: "Legacy attribute, do not use."
          type: string
        accessTag:
          description: |
            A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.
          type: string
        accessUserId:
          deprecated: true
          description: "Legacy attribute, do not use."
          type: string
        accessUserIp:
          deprecated: true
          description: "Legacy attribute, do not use."
          type: string
        responseType:
          description: |
            Response to the received recall request. The recall request can be:
            * `1` – Accepted and generates a positive response to the originating bank.
            * `0` – Refused and generates a negative response to the originating bank.
          enum:
          - 0
          - 1
          type: integer
        negativeResponseReasonCode:
          description: |
            Reason of negative response type. Required if `responseType` is false.
            This field is non case sensitive.
          enum:
          - CUST
          - LEGL
          - AC04
          - NOOR
          - AM04
          - NOAS
          - ARDT
          type: string
        negativeResponseAdditionalInformation:
          description: |
            Free field to add more informations of a negative response type.
          type: string
        responseComment:
          description: |
            Free field to add more informations regardless the response type.
          type: string
      required:
      - responseType
      type: object
    getRecallSctInst_200_response_recalls_inner:
      example:
        sctrCdtrName: sctrCdtrName
        sctrCdtrBIC: sctrCdtrBIC
        sctrDbtrCountry: sctrDbtrCountry
        payinRefundId: 5
        sctrTrzId: sctrTrzId
        updatedDate: updatedDate
        automaticResponse: automaticResponse
        sctrSettlementDate: sctrSettlementDate
        sctrRemittanceInformation: sctrRemittanceInformation
        sctrExternalId: sctrExternalId
        responseType: 5
        sctrCdtrAddress: sctrCdtrAddress
        sctrDbtrBIC: sctrDbtrBIC
        recallId: recallId
        sctrDbtrName: sctrDbtrName
        reasonCode: DUPL
        receivedDate: receivedDate
        cxId: cxId
        additionalInformation: additionalInformation
        walletId: 1
        clientId: 0
        sctrCdtrIBAN: sctrCdtrIBAN
        sctrAmount: sctrAmount
        negativeResponseReasonCode: NOOR
        sctrInstrId: sctrInstrId
        responseComment: responseComment
        userId: 6
        statusLabel: PENDING
        sctrMsgId: sctrMsgId
        sctrDbtrAddress: sctrDbtrAddress
        negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
        createdDate: createdDate
        sctrE2EID: sctrE2EID
        sctrCdtrCountry: sctrCdtrCountry
        sctrDbtrIBAN: sctrDbtrIBAN
        sctrTxId: sctrTxId
        creationDateTIme: creationDateTIme
      properties:
        recallId:
          type: string
        creationDateTIme:
          type: string
        statusLabel:
          description: |
            The status of the recall. See [Status](/guide/transfers/sepa-recalls.html#status-statuslabel) for more information.
          enum:
          - PENDING
          - PENDING_REJECTED_WAITING_ACK
          - PENDING_ACCEPTED_WAITING_ACK
          - ACCEPTED
          - REJECTED
          type: string
        cxId:
          type: string
        reasonCode:
          description: |
            The type of recall. See [Types](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) for more information.
          enum:
          - DUPL
          - TECH
          - FRAD
          - CUST
          - AM09
          - AC03
          type: string
        additionalInformation:
          type: string
        sctrDbtrIBAN:
          type: string
        sctrDbtrBIC:
          type: string
        sctrDbtrName:
          type: string
        sctrDbtrAddress:
          type: string
        sctrDbtrCountry:
          type: string
        sctrCdtrIBAN:
          type: string
        sctrCdtrBIC:
          type: string
        sctrCdtrName:
          type: string
        sctrCdtrAddress:
          type: string
        sctrCdtrCountry:
          type: string
        sctrMsgId:
          type: string
        sctrInstrId:
          type: string
        sctrTxId:
          type: string
        sctrE2EID:
          type: string
        sctrAmount:
          type: string
        sctrSettlementDate:
          type: string
        sctrRemittanceInformation:
          type: string
        sctrTrzId:
          type: string
        sctrExternalId:
          type: string
        clientId:
          type: integer
        userId:
          type: integer
        walletId:
          type: integer
        receivedDate:
          type: string
        payinRefundId:
          type: integer
        responseType:
          type: integer
        negativeResponseReasonCode:
          description: "The [type of Recall Rejection](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode)."
          enum:
          - NOOR
          - ARDT
          - AC04
          - NOAS
          - CUST
          - AM04
          - LEGL
          type: string
        negativeResponseAdditionalInformation:
          type: string
        responseComment:
          type: string
        automaticResponse:
          type: string
        createdDate:
          type: string
        updatedDate:
          type: string
      type: object
    getRecallSctInst_200_response:
      example:
        recalls:
        - sctrCdtrName: sctrCdtrName
          sctrCdtrBIC: sctrCdtrBIC
          sctrDbtrCountry: sctrDbtrCountry
          payinRefundId: 5
          sctrTrzId: sctrTrzId
          updatedDate: updatedDate
          automaticResponse: automaticResponse
          sctrSettlementDate: sctrSettlementDate
          sctrRemittanceInformation: sctrRemittanceInformation
          sctrExternalId: sctrExternalId
          responseType: 5
          sctrCdtrAddress: sctrCdtrAddress
          sctrDbtrBIC: sctrDbtrBIC
          recallId: recallId
          sctrDbtrName: sctrDbtrName
          reasonCode: DUPL
          receivedDate: receivedDate
          cxId: cxId
          additionalInformation: additionalInformation
          walletId: 1
          clientId: 0
          sctrCdtrIBAN: sctrCdtrIBAN
          sctrAmount: sctrAmount
          negativeResponseReasonCode: NOOR
          sctrInstrId: sctrInstrId
          responseComment: responseComment
          userId: 6
          statusLabel: PENDING
          sctrMsgId: sctrMsgId
          sctrDbtrAddress: sctrDbtrAddress
          negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
          createdDate: createdDate
          sctrE2EID: sctrE2EID
          sctrCdtrCountry: sctrCdtrCountry
          sctrDbtrIBAN: sctrDbtrIBAN
          sctrTxId: sctrTxId
          creationDateTIme: creationDateTIme
        - sctrCdtrName: sctrCdtrName
          sctrCdtrBIC: sctrCdtrBIC
          sctrDbtrCountry: sctrDbtrCountry
          payinRefundId: 5
          sctrTrzId: sctrTrzId
          updatedDate: updatedDate
          automaticResponse: automaticResponse
          sctrSettlementDate: sctrSettlementDate
          sctrRemittanceInformation: sctrRemittanceInformation
          sctrExternalId: sctrExternalId
          responseType: 5
          sctrCdtrAddress: sctrCdtrAddress
          sctrDbtrBIC: sctrDbtrBIC
          recallId: recallId
          sctrDbtrName: sctrDbtrName
          reasonCode: DUPL
          receivedDate: receivedDate
          cxId: cxId
          additionalInformation: additionalInformation
          walletId: 1
          clientId: 0
          sctrCdtrIBAN: sctrCdtrIBAN
          sctrAmount: sctrAmount
          negativeResponseReasonCode: NOOR
          sctrInstrId: sctrInstrId
          responseComment: responseComment
          userId: 6
          statusLabel: PENDING
          sctrMsgId: sctrMsgId
          sctrDbtrAddress: sctrDbtrAddress
          negativeResponseAdditionalInformation: negativeResponseAdditionalInformation
          createdDate: createdDate
          sctrE2EID: sctrE2EID
          sctrCdtrCountry: sctrCdtrCountry
          sctrDbtrIBAN: sctrDbtrIBAN
          sctrTxId: sctrTxId
          creationDateTIme: creationDateTIme
      properties:
        recalls:
          items:
            $ref: '#/components/schemas/getRecallSctInst_200_response_recalls_inner'
          type: array
      type: object
    getRecallSctInst_404_response:
      example:
        reason: item not found
        details: details
      properties:
        reason:
          example: item not found
          type: string
        details:
          type: string
      type: object
    putRecallSctInst_request:
      properties:
        responseType:
          description: |
            Indicates whether to accept (`1`) or decline (`0`) the recall.
          enum:
          - 0
          - 1
          type: integer
        negativeResponseAdditionalInformation:
          description: |
            Additional information for rejecting a Recall. May be mandatory in some situations, learn more in the [Reject a Recall](/guide/transfers/sepa-recalls.html#reject-a-recall-2) article.
          type: string
        negativeResponseReasonCode:
          description: "The [type of Recall Rejection](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode).\
            \ This field is mandatory if the `responseType` is `0`."
          enum:
          - NOOR
          - ARDT
          - AC04
          - NOAS
          - CUST
          - AM04
          - LEGL
          type: string
      required:
      - responseType
      type: object
    putRecallSctInst_201_response:
      example:
        recallID: a14d728e-b02a-43c2-9b2d-a394fc45xx1d
      properties:
        recallID:
          example: a14d728e-b02a-43c2-9b2d-a394fc45xx1d
          type: string
      type: object
    putRecallSctInst_409_response:
      example:
        reason: reason
        details: details
      properties:
        reason:
          type: string
        details:
          type: string
      type: object
    postTaxresidence_request:
      properties:
        userId:
          description: The unique identifier of the user.
          type: integer
        country:
          description: The country of the resident.
          type: string
        taxPayerId:
          description: |
            Tax payer's id. This field is mandatory if the country of the resident is `US`, but optional otherwise.
          type: string
        liabilityWaiver:
          description: |
            Must be set to true if the `taxPayerId` is empty or null, and set to false otherwise.
          type: boolean
      required:
      - country
      - liabilityWaiver
      - userId
      type: object
    getTransactions_200_response_transactions_inner:
      example:
        walletDebitId: 6
        walletDebitBalance: walletDebitBalance
        amount: amount
        walletCreditBalance: walletCreditBalance
        walletCreditId: 1
        executionDate: executionDate
        description: description
        valueDate: valueDate
        totalRows: 5
        transactionId: 0
        transactionType: transactionType
        foreignId: 5
        createdDate: createdDate
        name: name
        currency: currency
      properties:
        transactionId:
          type: integer
        walletDebitId:
          type: integer
        walletCreditId:
          type: integer
        transactionType:
          type: string
        foreignId:
          type: integer
        name:
          type: string
        description:
          type: string
        valueDate:
          description: Date YYYY-MM-DD
          type: string
        executionDate:
          description: Date YYYY-MM-DD
          type: string
        amount:
          type: string
        walletDebitBalance:
          type: string
        walletCreditBalance:
          type: string
        currency:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
      type: object
    getTransactions_200_response:
      example:
        transactions:
        - walletDebitId: 6
          walletDebitBalance: walletDebitBalance
          amount: amount
          walletCreditBalance: walletCreditBalance
          walletCreditId: 1
          executionDate: executionDate
          description: description
          valueDate: valueDate
          totalRows: 5
          transactionId: 0
          transactionType: transactionType
          foreignId: 5
          createdDate: createdDate
          name: name
          currency: currency
        - walletDebitId: 6
          walletDebitBalance: walletDebitBalance
          amount: amount
          walletCreditBalance: walletCreditBalance
          walletCreditId: 1
          executionDate: executionDate
          description: description
          valueDate: valueDate
          totalRows: 5
          transactionId: 0
          transactionType: transactionType
          foreignId: 5
          createdDate: createdDate
          name: name
          currency: currency
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/getTransactions_200_response_transactions_inner'
          type: array
      type: object
    postTransfers_request:
      properties:
        transferTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        walletId:
          description: The debited Wallet unique identifier.
          type: integer
        beneficiaryWalletId:
          description: The credited Wallet unique identifier.
          type: integer
        amount:
          description: The amount of the Transfer.
          format: float
          type: number
        currency:
          description: |
            The currency of the Transfer. Debited wallet and credited wallet must share same currency.

            Format: [ISO 4217](/guide/api-basics/data-format.html#currencies).
          example: EUR
          type: string
        label:
          description: Custom data.
          type: string
        transferTypeId:
          description: "The type of the Transfer:\n* `1` – Wallet to wallet \n* `3`\
            \ – Client fees\n* `4` – Credit note\n"
          type: integer
      required:
      - amount
      - beneficiaryWalletId
      - currency
      - walletId
      type: object
    postUsers_request:
      properties:
        userTypeId:
          description: |
            The type of the user. May be one of the following:
            * `1` – Natural person (default)
            * `2` – Business entity
            * `3` – Non - governmental organization
            * `4` – Governmental organization

            You may read more about [Users](/guide/users/introduction.html)
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
        userTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        parentUserId:
          description: The unique identifier of the parent user (if any).
          type: integer
        parentType:
          description: |
            The type of relationship between the parent and the current users.

            You may read more about [parent-children relationships](/guide/users/parent-children.html).
          enum:
          - shareholder
          - employee
          - leader
          type: string
        specifiedUSPerson:
          description: "Should be set to `1` for any citizen or resident of the United\
            \ States, e.g. at least one of the following conditions is true: \n* `country`\
            \ or `secondaryCountry` = US (the address or the secondary address is\
            \ in the US)\n* `nationality` or `nationalityOther` = US (the user has\
            \ the US nationality)\n* `birthCountry` = US (the user is born in the\
            \ US)\n\nWhen set to `1`, the user must have a US tax residence declared.\n\
            \nShould be set to `0` otherwise.\n\nYou may read more about who is considered\
            \ a US Person in the [dedicated article](https://docs.treezor.com/guide/user-verification/tax-residence.html#the-specific-case-of-us-taxpayers).\n"
          enum:
          - 0
          - 1
          type: integer
        controllingPersonType:
          description: |
            Type of relationship:
            * `0` – None (default)
            * `1` – Shareholder
            * `2` – Other_relationship
            * `3` – Director

            You may read more about [parent-children relationships](/guide/users/parent-children.html).
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
        employeeType:
          description: |
            Type of user role:
            * `0` – None (default)
            * `1` – Leader
            * `2` – Employee
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
        entityType:
          description: |
            The entity type of the legal entity:
            * `1` – Reporting Financial Institution
            * `2` – Non-Reporting Financial Institution
            * `3` – Active Non-Financial Entity - Governmental entities, Int. organizations
            * `4` – Active Non-Financial Entity - Other
            * `5` – Passive Non-Financial Entity - Investment entity that is not Participating Jurisdiction FI
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
        title:
          description: |
            The title of the user, which can be one of the following:
            * `M` – Stands for mister (Mr.)
            * `MME` – Stands for misses (Mrs.)
            * `MLLE` – Stands for miss
          enum:
          - M
          - MME
          - MLLE
          type: string
        firstname:
          description: The User first name.
          type: string
        lastname:
          description: The User last name.
          type: string
        middleNames:
          description: "The User middle names, if any."
          type: string
        birthday:
          description: |
            The birth date of the User. Format: YYYY-MM-DD
          type: string
        email:
          description: The User email. Must be valid and unique.
          type: string
        address1:
          description: The User postal address (main). Cannot contain carriage return.
          type: string
        address2:
          description: The User postal address (complement). Cannot contain carriage
            return.
          type: string
        address3:
          description: The User postal address (complement2). Cannot contain carriage
            return.
          type: string
        postcode:
          description: The User address postcode.
          type: string
        city:
          description: The User address city.
          type: string
        state:
          description: The User address state.
          type: string
        country:
          description: The country of the user's address.
          format: ISO  3166-1 alpha-2
          type: string
        distributionCountry:
          description: |
            The country in which the end user is using your services. Available values may vary depending on your configuration. Please contact Treezor to configure this feature.

            This field is only required when you operate in multiple countries. Otherwise, it either defaults to your country or is set to `null`.
          enum:
          - FR
          - ES
          - IT
          - DE
          - BE
          - NL
          format: ISO 3166-1 alpha-2
          nullable: true
          type: string
        secondaryAddress1:
          description: The User secondary postal address (main).
          type: string
        secondaryAddress2:
          description: The User secondary postal address (complement)
          type: string
        secondaryAddress3:
          description: The User secondary postal address (complement2)
          type: string
        secondaryPostcode:
          description: The User secondary address postcode.
          type: string
        secondaryCity:
          description: The User secondary address city.
          type: string
        secondaryState:
          description: The User secondary address state.
          type: string
        secondaryCountry:
          description: |
            The User secondary address country. Format: ISO 3166-1 alpha-2
          type: string
        phone:
          description: |
            The User phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
        mobile:
          description: |
            The User mobile phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
        nationality:
          description: |
            The User nationality. Format: ISO 3166-1 alpha-2
          type: string
        nationalityOther:
          description: |
            The User other nationality. Format: ISO 3166-1 alpha-2
          type: string
        placeOfBirth:
          description: The User place of birth.
          type: string
        birthCountry:
          description: |
            The User country of Birth. Format: ISO 3166-1 alpha-2
          type: string
        occupation:
          deprecated: true
          description: Deprecated. You must use the `occupationCategory` field instead.
          type: string
        incomeRange:
          deprecated: true
          description: Deprecated. Use `monthlyIncomeRange` instead.
          enum:
          - 0-18
          - 19-23
          - 24-27
          - 28-35
          - 36-56
          - 57-*
          type: string
        legalName:
          description: The Business legal name.
          type: string
        legalRegistrationNumber:
          description: The Business registration number.
          type: string
        legalTvaNumber:
          description: The Business VAT number.
          type: string
        legalRegistrationDate:
          description: The Business registration date.
          format: date
          type: string
        legalForm:
          description: "The legal form/category of the company. \n<br />\nYou may\
            \ check out [the authoritative list](https://www.insee.fr/fr/information/2028129)\n"
          type: string
        legalShareCapital:
          description: The Business share capital.
          type: integer
        legalSector:
          description: |
            The Business Sector of the company (NAF or NACE code in France). The expected format depends on `legalSectorType`
            <br />
            You may check out [the authoritative list](https://www.insee.fr/fr/information/2120875)
          type: string
        legalAnnualTurnOver:
          description: The Business annual turnover (in k€).
          enum:
          - 0-39
          - 40-99
          - 100-249
          - 250-999
          - 1000-2999
          - 3000-9999
          - 10000-99999
          - 100000-*
          type: string
        legalNetIncomeRange:
          description: The Business net income range (in k€).
          enum:
          - 0-4
          - 5-9
          - 10-49
          - 50-149
          - 150-499
          - 500-*
          type: string
        legalNumberOfEmployeeRange:
          description: The Business number of employees.
          enum:
          - "0"
          - 1-9
          - 10-99
          - 100-249
          - 250-*
          type: string
        effectiveBeneficiary:
          description: "The effective beneficiary shares of the legal entity (e.g.,\
            \ for a beneficiary holding 70% of a company, value must be `70`). For\
            \ shareholders only."
          type: integer
        language:
          description: |
            The User preferred language. Format: ISO 639-1
          type: string
        taxNumber:
          deprecated: true
          description: Deprecated. You must use the `taxResidence` endpoint.
          type: string
        taxResidence:
          deprecated: true
          description: Deprecated. You must use the `taxResidence` endpoint.
          type: string
        position:
          description: The geographic activity coverage (for NGOs only).
          type: string
        personalAssets:
          deprecated: true
          description: Deprecated. You must use `personalAssetsRange` instead.
          enum:
          - 0-2
          - 3-22
          - 23-128
          - 129-319
          - 320-464
          - 465-
          type: string
        activityOutsideEu:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes. \n\nWhether the entity and its business\
            \ units, subsidiaries, and joint ventures have a commercial activity outside\
            \ of the European Union.\n\nCan be:\n* `0` – False\n* `1` – True. When\
            \ set to this value, the next attributes become mandatory. \n\nSee the\
            \ [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        economicSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, entities,\
            \ employees, directors, beneficial owners, or joint ventures are subject\
            \ to Economic Sanctions.\n\nCan be:\n* `0` – False\n* `1` – True \n\n\
            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        residentCountriesSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, or joint\
            \ ventures, located within or operating from any countries or territories\
            \ are subject to Comprehensive Sanctions. \n\nCan be:\n* `0` – False\n\
            * `1` – True \n\nSee the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        involvedSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, or joint\
            \ ventures, are engaged in transactions, investments, business, or other\
            \ dealings that directly or indirectly involve or benefit:\n* Any countries\
            \ or territories subject to Comprehensive Sanctions (Cuba, Iran, North\
            \ Korea, Syria, Crimea, Ukrainian Oblasts not controlled by the government,\
            \ or Russia), or \n* Any person or entity which is the target of any Sanctions\
            \ (“Sanctioned Targets”).\n\nCan be:\n* `0` – False\n* `1` – True \n\n\
            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        entitySanctionsQuestionnaire:
          description: |
            For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the `activityOutsideEu` value is set to `1`.

            Defines the scope to which the `activityOutsideEu` field applies:
            * `0` – Not applicable
            * `1` – Only the legal entity
            * `2` – The legal entity and all its subsidiaries held at 100%
            * `3` – The legal entity and all its subsidiaries held at 50% or more
            * `4` – The legal entity and a list of subsidiaries

            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        timezone:
          description: |
            The User timezone in the [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.
            The timezones have unique names in the form "Area/Location" (e.g. "America/New_York", "Europe/Paris").

            It may be used to enforce a card `paymentDailyLimit` based on the cardholder's timezone.
          type: string
        occupationType:
          deprecated: true
          description: Deprecated. Use `occupationCategory` instead.
          enum:
          - self_employed
          - public_sector_employees
          - private_sector_employees
          - retired_people_and_students
          - without_any_professional_activity
          type: string
        sourceOfFunds:
          description: The source of funds for opening an account for a company or
            self-employed person.
          enum:
          - donation
          - inheritance
          - loan
          - lottery
          - pension
          - proceeds_from_investment
          - proceeds_from_sale
          - salary
          - savings
          type: string
        legalSectorType:
          description: "Qualify the type of data in the `legalSector` field:\n* If\
            \ it is set to NACE the legalSector needs to be in a NACE format (4 digits).\
            \ \n* If it is set to NAF (or not set at all) the legalSector needs to\
            \ be in a NAF format (4 digits followed by a capital letter).\n"
          enum:
          - NAF
          - NACE
          type: string
        isOnStockExchange:
          description: |
            The user is a corporation and is quoted on an organized stock exchange.
            * `0` – No
            * `1` – Yes
          enum:
          - 0
          - 1
          type: integer
        webauthn:
          description: |
            The `PublicKeyCredential` after the WebAuthn Register, encoded in base64.

            See the Web Native article, [Device enrollment](/guide/strong-customer-authentication/web-native.html#device-enrollment) section for more information.
          type: string
        passcode:
          description: |
            Required if the `webauthn` field is provided. Must be base64 encoded and encrypted.

            See the Web Native article, [Device enrollment](/guide/strong-customer-authentication/web-native.html#device-enrollment) section for more information.
          type: string
        occupationCategory:
          description: |
            Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          nullable: true
          type: integer
        personalAssetsRange:
          description: |
            The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
        monthlyIncomeRange:
          description: |
            Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
      required:
      - email
      - specifiedUSPerson
      - userTypeId
      type: object
    putUser_request:
      properties:
        userTag:
          description: Custom data.
          type: string
        specifiedUSPerson:
          description: |
            You may read more about who is considered a US Person in the [dedicated article](https://docs.treezor.com/guide/user-verification/tax-residence.html#the-specific-case-of-us-taxpayers).
          type: integer
        controllingPersonType:
          description: |
            Type of relationship, among the following:
            * `0` – None (default)
            * `1` – Shareholder
            * `2` – Other_relationship
            * `3` – Director
          type: integer
        employeeType:
          description: |
            The tyoe of relationship among the following:
            * `0` – None (default)
            * `1` – Leader
            * `2` – Employee
          type: integer
        title:
          description: |
            The title of the user, which can be one of the following:
            * `M` – Stands for mister (Mr.)
            * `MME` – Stands for misses (Mrs.)
            * `MLLE` – Stands for miss
          type: string
        firstname:
          description: The first name of the User.
          type: string
        lastname:
          description: The last name of the User.
          type: string
        middleNames:
          description: "The middle names of the User, if any."
          type: string
        birthday:
          description: |
            The birth date of the User. Format: YYYY-MM-DD
          type: string
        email:
          description: The email address of the User. Must be valid.
          type: string
        address1:
          description: The User postal address (main).
          type: string
        address2:
          description: The User postal address (complement). Cannot contain carriage
            return.
          type: string
        address3:
          description: The User postal address (complement2). Cannot contain carriage
            return.
          type: string
        postcode:
          description: The User address postcode.
          type: string
        city:
          description: The User address city.
          type: string
        state:
          description: The User address state.
          type: string
        country:
          description: The country of the user's address.
          format: ISO  3166-1 alpha-2
          type: string
        distributionCountry:
          description: |
            The country in which the end user is using your services. Available values may vary depending on your configuration. Please contact Treezor to configure this feature.

            This field is only required when you operate in multiple countries. Otherwise, it either defaults to your country or is set to `null`.
          enum:
          - FR
          - ES
          - IT
          - DE
          - BE
          - NL
          format: ISO 3166-1 alpha-2
          nullable: true
          type: string
        secondaryAddress1:
          description: The User secondary postal address (main).
          type: string
        secondaryAddress2:
          description: The User secondary postal address (complement)
          type: string
        secondaryAddress3:
          description: The User secondary postal address (complement2)
          type: string
        secondaryPostcode:
          description: The User secondary address postcode.
          type: string
        secondaryCity:
          description: The User secondary address city.
          type: string
        secondaryState:
          description: The User secondary address state.
          type: string
        secondaryCountry:
          description: |
            The User secondary address country. Format: ISO  3166-1 alpha-2
          type: string
        phone:
          description: |
            The User phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
        mobile:
          description: |
            The User mobile phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
        nationality:
          description: |
            The User nationality. Format: ISO 3166-1 alpha-2
          type: string
        nationalityOther:
          description: |
            The User other nationality. Format: ISO 3166-1 alpha-2
          type: string
        placeOfBirth:
          description: The User place of birth.
          type: string
        birthCountry:
          description: |
            The User country of Birth. Format: ISO 3166-1 alpha-2
          type: string
        occupation:
          deprecated: true
          description: Deprecated. You must use the `occupationCategory` field instead.
          type: string
        incomeRange:
          description: The User income range.
          enum:
          - 0-18
          - 19-23
          - 24-27
          - 28-35
          - 36-56
          - 57-*
          type: string
        legalName:
          description: The Business legal name.
          type: string
        legalRegistrationNumber:
          description: The Business registration number.
          type: string
        legalTvaNumber:
          description: The Business VAT number.
          type: string
        legalRegistrationDate:
          description: The Business registration date.
          format: date
          type: string
        legalForm:
          description: "The legal form/category of the company. \n<br />\nYou may\
            \ check out [the authoritative list](https://www.insee.fr/fr/information/2028129)\n"
          type: string
        legalShareCapital:
          description: The Business share capital.
          type: integer
        legalSector:
          description: |
            The Business Sector of the company (NAF or NACE code in France). The expected format depends on `legalSectorType`
            <br />
            You may check out [the authoritative list](https://www.insee.fr/fr/information/2120875)
          type: string
        legalAnnualTurnOver:
          description: The Business annual turnover (in k€).
          enum:
          - 0-39
          - 40-99
          - 100-249
          - 250-999
          - 1000-2999
          - 3000-9999
          - 10000-99999
          - 100000-*
          type: string
        legalNetIncomeRange:
          description: The Business net income range (in k€).
          enum:
          - 0-4
          - 5-9
          - 10-49
          - 50-149
          - 150-499
          - 500-*
          type: string
        legalNumberOfEmployeeRange:
          description: The Business number of employees.
          enum:
          - "0"
          - 1-9
          - 10-99
          - 100-249
          - 250-*
          type: string
        effectiveBeneficiary:
          description: "The effective beneficiary shares of the legal entity (e.g.,\
            \ for a beneficiary holding 70% of a company, value must be `70`). For\
            \ shareholders only."
          type: integer
        language:
          description: |
            The User preferred language. Format: ISO 639-1
          type: string
        taxNumber:
          deprecated: true
          description: Deprecated. Your must use the `taxResidence` endpoint.
          type: string
        taxResidence:
          deprecated: true
          description: Deprecated. Your must use the `taxResidence` endpoint.
          type: string
        position:
          description: The geographic activity coverage (for NGOs only).
          type: string
        personalAssets:
          deprecated: true
          description: Deprecated. You must use `personalAssetsRange` instead.
          enum:
          - 0-2
          - 3-22
          - 23-128
          - 129-319
          - 320-464
          - 465-
          type: string
        activityOutsideEu:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes. \n\nWhether the entity and its business\
            \ units, subsidiaries, and joint ventures have a commercial activity outside\
            \ of the European Union.\n\nCan be:\n* `0` – False\n* `1` – True. When\
            \ set to this value, the next attributes become mandatory. \n\nSee the\
            \ [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        economicSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, entities,\
            \ employees, directors, beneficial owners, or joint ventures are subject\
            \ to Economic Sanctions.\n\nCan be:\n* `0` – False\n* `1` – True \n\n\
            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        residentCountriesSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, or joint\
            \ ventures, located within or operating from any countries or territories\
            \ are subject to Comprehensive Sanctions. \n\nCan be:\n* `0` – False\n\
            * `1` – True \n\nSee the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        involvedSanctions:
          description: "For Users obligated to complete a due diligence questionnaire\
            \ regarding sanctions and embargoes, and for which the `activityOutsideEu`\
            \ value is set to `1`.\n\nWhether the entity, its subsidiaries, or joint\
            \ ventures, are engaged in transactions, investments, business, or other\
            \ dealings that directly or indirectly involve or benefit:\n* Any countries\
            \ or territories subject to Comprehensive Sanctions (Cuba, Iran, North\
            \ Korea, Syria, Crimea, Ukrainian Oblasts not controlled by the government,\
            \ or Russia), or \n* Any person or entity which is the target of any Sanctions\
            \ (“Sanctioned Targets”).\n\nCan be:\n* `0` – False\n* `1` – True \n\n\
            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo)\
            \ article for more information.\n"
          enum:
          - 0
          - 1
          type: integer
        entitySanctionsQuestionnaire:
          description: |
            For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the `activityOutsideEu` value is set to `1`.

            Defines the scope to which the `activityOutsideEu` field applies:
            * `0` – Not applicable
            * `1` – Only the legal entity
            * `2` – The legal entity and all its subsidiaries held at 100%
            * `3` – The legal entity and all its subsidiaries held at 50% or more
            * `4` – The legal entity and a list of subsidiaries

            See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        timezone:
          description: |
            The User timezone in the [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.
            The timezones have unique names in the form "Area/Location" (e.g. "America/New_York", "Europe/Paris").

            It may be used to enforce a card `paymentDailyLimit` based on the cardholder's timezone.
          type: string
        occupationType:
          deprecated: true
          description: Deprecated. Use `occupationCategory` instead.
          enum:
          - self_employed
          - public_sector_employees
          - private_sector_employees
          - retired_people_and_students
          - without_any_professional_activity
          type: string
        sourceOfFunds:
          description: The source of funds for opening an account for a company or
            self-employed person.
          enum:
          - donation
          - inheritance
          - loan
          - lottery
          - pension
          - proceeds_from_investment
          - proceeds_from_sale
          - salary
          - savings
          type: string
        legalSectorType:
          description: "Qualify the type of data in the `legalSector` field:\n* If\
            \ it is set to NACE the legalSector needs to be in a NACE format (4 digits).\
            \ \n* If it is set to NAF (or not set at all) the legalSector needs to\
            \ be in a NAF format (4 digits followed by a capital letter).\n"
          enum:
          - NAF
          - NACE
          type: string
        isOnStockExchange:
          description: |
            The user is a corporation and is quoted on an organized stock exchange.
            * `0` – No
            * `1` – Yes
          enum:
          - 0
          - 1
          type: integer
        occupationCategory:
          description: |
            Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          nullable: true
          type: integer
        personalAssetsRange:
          description: |
            The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
        monthlyIncomeRange:
          description: |
            Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
      type: object
    postKycliveness_request:
      properties:
        redirectUrl:
          description: |
            Specify the URL where the User should be redirected after the Live verification process. This overrides the default configured value.
          type: string
      type: object
    postKycliveness_201_response_user_kyc_inner:
      example:
        identification-url: identification-url
        identification-id: identification-id
      properties:
        identification-id:
          type: string
        identification-url:
          type: string
      type: object
    postKycliveness_201_response:
      example:
        user_kyc:
        - identification-url: identification-url
          identification-id: identification-id
        - identification-url: identification-url
          identification-id: identification-id
      properties:
        user_kyc:
          items:
            $ref: '#/components/schemas/postKycliveness_201_response_user_kyc_inner'
          type: array
      type: object
    postKycqes_request:
      properties:
        redirectUrl:
          description: |
            Specify the URL where the user should be redirected after the QES verification process. This overrides the configured default value.
          type: string
      type: object
    postKycqes_201_response:
      example:
        identificationURL: identificationURL
        identificationId: identificationId
      properties:
        identificationId:
          type: string
        identificationURL:
          type: string
      type: object
    postVirtualIban_request:
      properties:
        walletId:
          description: |
            The unique identifier of the Wallet to which the Virtual IBAN is associated. Must be a `walletType` of `9` or `10`.
          type: integer
        typeId:
          description: "The type of IBAN, allowing for a specific transfer direction.\
            \ \nCan be: <ul><li>`1` for `SDDR` [SEPA Direct Debit](/guide/transfers/direct-debit.html)</li><li>`2`\
            \ for `SCTR` [SEPA Credit Transfer](/guide/transfers/credit-transfer.html#received-credit-transfers-sctr)</li></ul>\n"
          enum:
          - 1
          - 2
          type: integer
        tag:
          description: |
            Custom attribute that you can use as you see fit.

            Learn more in the [Object tags](/guide/api-basics/objects-tags.html) article.
          type: string
        validFrom:
          description: |
            The date from which the Virtual IBAN validity starts. Defaults to today's date and must be set in the future.<br> Format: YYYY-MM-DD
          type: string
        validTo:
          description: |
            The date from which the Virtual IBAN validity ends. Must be set after the `validFrom` date.<br> Format: YYYY-MM-DD
          type: string
        maxUsage:
          description: "The maximum number of transactions allowed (`0` = unlimited).\
            \ \n"
          type: integer
        maxAmount:
          description: |
            The maximum cumulated amount of all transactions (`"0.00"` = unlimited).
          format: float
          type: string
        reference:
          description: |
            Custom field for your internal reference of the Virtual IBAN.

            Max. length: 255 characters.
          type: string
      required:
      - typeId
      - walletId
      type: object
    putVirtualIban_request:
      properties:
        validFrom:
          description: |
            The date from which the Virtual IBAN validity starts. Defaults to today's date and must be set in the future.<br> Format: YYYY-MM-DD
          type: string
        validTo:
          description: |
            The date from which the Virtual IBAN validity ends. Must be set after the `validFrom` date.<br> Format: YYYY-MM-DD
          type: string
        maxUsage:
          description: "The maximum number of transactions allowed (`0` = unlimited).\
            \ \n"
          type: integer
        maxAmount:
          description: |
            The maximum cumulated amount of all transactions (`"0.00"` = unlimited).
          format: float
          type: string
        reference:
          description: |
            Custom field for your internal reference of the Virtual IBAN.

            Max. length: 255 characters.
          type: string
      type: object
    postWallets_request:
      properties:
        walletTypeId:
          description: |
            The type of Wallet. The following values are allowed:
            * `9` – Electronic Money Wallet
            * `10` – Payment Account Wallet

            Other types are available but can only be set by Treezor. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
          enum:
          - 9
          - 10
          type: integer
        tariffId:
          description: "The fees applied to the Wallet, as defined by your contract\
            \ with Treezor. Usually required, but may have a default value set by\
            \ Treezor."
          type: integer
        userId:
          description: The unique identifier of the User owning the Wallet.
          type: integer
        jointUserId:
          deprecated: true
          description: "Legacy attribute, do not use."
          type: integer
        walletTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        currency:
          description: |
            The currency of the Wallet, which will be used for money transactions.
            <br>Format: [ISO 4217 3-letter code](/guide/api-basics/data-format.html#currencies)
          type: string
        eventName:
          description: The name of the Wallet.
          type: string
        eventAlias:
          deprecated: true
          description: "Legacy attribute, do not use."
          type: string
        eventMessage:
          description: Can be used to describe the Wallet.
          type: string
      required:
      - currency
      - eventName
      - tariffId
      - userId
      - walletTypeId
      type: object
    putWallet_request:
      properties:
        tariffId:
          description: "The fees applied to the Wallet, as defined by your contract\
            \ with Treezor."
          type: integer
        walletTypeId:
          description: |
            The type of Wallet. Can only be updated if no transaction occurred with the Wallet yet.

            The following values are allowed:
            * `9` – Electronic Money Wallet
            * `10` – Payment Account Wallet

            Other types are available but can only be set by Treezor. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
          enum:
          - 9
          - 10
          type: integer
        walletTag:
          description: "Custom attribute to use as you see fit. Learn more in the\
            \ [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.\n\
            <br>Max length: 250 characters \n<br>Format: hc characters and `/` `!`\
            \ `-` `_` `.` `*` `'` `(` `)`\n"
          type: string
        eventName:
          description: The name of the Wallet.
          type: string
        eventMessage:
          description: Can be used to describe the Wallet.
          type: string
      type: object
    deleteWallet_200_response_wallets_inner:
      example:
        eventMessage: eventMessage
        eventPayinEndDate: eventPayinEndDate
        eventPayinStartDate: eventPayinStartDate
        userLastname: userLastname
        payinCount: 9
        transferCount: 2
        jointUserId: 5
        informationStatus: informationStatus
        eventAlias: eventAlias
        eventName: eventName
        solde: 4
        currency: currency
        tariffId: 2
        urlImage: urlImage
        contractSigned: 7
        walletId: 0
        payoutCount: 3
        totalRows: 1
        userId: 5
        codeStatus: 1
        walletTag: walletTag
        createdDate: createdDate
        iban: iban
        modifiedDate: modifiedDate
        walletStatus: PENDING
        userFirstname: userFirstname
        walletTypeId: 6
        bic: bic
        authorizedBalance: 7
        eventDate: eventDate
      properties:
        walletId:
          type: integer
        walletTypeId:
          description: |
            The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
          enum:
          - 9
          - 10
          - 13
          - 14
          - 15
          type: integer
        walletStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        codeStatus:
          description: |
            See [Wallet status](/guide/wallets/introduction.html#wallet-status).
          type: integer
        informationStatus:
          type: string
        walletTag:
          type: string
        userId:
          type: integer
        userLastname:
          type: string
        userFirstname:
          type: string
        jointUserId:
          deprecated: true
          type: integer
        tariffId:
          type: integer
        eventName:
          type: string
        eventAlias:
          type: string
        eventDate:
          description: Date YYYY-MM-DD
          type: string
        eventMessage:
          type: string
        eventPayinStartDate:
          description: Date YYYY-MM-DD
          type: string
        eventPayinEndDate:
          description: Date YYYY-MM-DD
          type: string
        contractSigned:
          deprecated: true
          type: integer
        bic:
          type: string
        iban:
          type: string
        urlImage:
          deprecated: true
          type: string
        currency:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        payinCount:
          type: integer
        payoutCount:
          type: integer
        transferCount:
          type: integer
        solde:
          format: decimal
          type: integer
        authorizedBalance:
          format: decimal
          type: integer
        totalRows:
          type: integer
      type: object
    deleteWallet_200_response:
      example:
        wallets:
        - eventMessage: eventMessage
          eventPayinEndDate: eventPayinEndDate
          eventPayinStartDate: eventPayinStartDate
          userLastname: userLastname
          payinCount: 9
          transferCount: 2
          jointUserId: 5
          informationStatus: informationStatus
          eventAlias: eventAlias
          eventName: eventName
          solde: 4
          currency: currency
          tariffId: 2
          urlImage: urlImage
          contractSigned: 7
          walletId: 0
          payoutCount: 3
          totalRows: 1
          userId: 5
          codeStatus: 1
          walletTag: walletTag
          createdDate: createdDate
          iban: iban
          modifiedDate: modifiedDate
          walletStatus: PENDING
          userFirstname: userFirstname
          walletTypeId: 6
          bic: bic
          authorizedBalance: 7
          eventDate: eventDate
        - eventMessage: eventMessage
          eventPayinEndDate: eventPayinEndDate
          eventPayinStartDate: eventPayinStartDate
          userLastname: userLastname
          payinCount: 9
          transferCount: 2
          jointUserId: 5
          informationStatus: informationStatus
          eventAlias: eventAlias
          eventName: eventName
          solde: 4
          currency: currency
          tariffId: 2
          urlImage: urlImage
          contractSigned: 7
          walletId: 0
          payoutCount: 3
          totalRows: 1
          userId: 5
          codeStatus: 1
          walletTag: walletTag
          createdDate: createdDate
          iban: iban
          modifiedDate: modifiedDate
          walletStatus: PENDING
          userFirstname: userFirstname
          walletTypeId: 6
          bic: bic
          authorizedBalance: 7
          eventDate: eventDate
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/deleteWallet_200_response_wallets_inner'
          type: array
      type: object
    get_rulesets_200_response_ruleset_inner:
      example:
        name: Example of a Ruleset
        description: ""
        id: 9ea4c7f6-50a2-4679-8634-dfe42f03cbdc
        status: ENABLED
      properties:
        id:
          example: 9ea4c7f6-50a2-4679-8634-dfe42f03cbdc
          format: uuid
          type: string
        name:
          example: Example of a Ruleset
          type: string
        description:
          example: ""
          type: string
        status:
          enum:
          - ENABLED
          - DELETE
          example: ENABLED
          type: string
      type: object
    get_rulesets_200_response:
      example:
        ruleset:
        - name: Example of a Ruleset
          description: ""
          id: 9ea4c7f6-50a2-4679-8634-dfe42f03cbdc
          status: ENABLED
        - name: Example of a Ruleset
          description: ""
          id: 9ea4c7f6-50a2-4679-8634-dfe42f03cbdc
          status: ENABLED
      properties:
        ruleset:
          items:
            $ref: '#/components/schemas/get_rulesets_200_response_ruleset_inner'
          type: array
      type: object
    create_ruleset_request:
      properties:
        metadata:
          $ref: '#/components/schemas/RulesetMetadata'
        ruleset:
          $ref: '#/components/schemas/Ruleset'
      type: object
    create_ruleset_201_response:
      example:
        rulesetId: 200cf363-32cd-4edd-a9ff-bc4aee6ba070
      properties:
        rulesetId:
          example: 200cf363-32cd-4edd-a9ff-bc4aee6ba070
          type: string
      type: object
    get_ruleset_from_card_200_response_inner:
      example:
        rulesetId: 404b794e-6e19-495a-bd21-51d5adb82b94
        metadata: "{}"
      properties:
        rulesetId:
          example: 404b794e-6e19-495a-bd21-51d5adb82b94
          format: uuid
          type: string
        metadata:
          type: object
      type: object
    getFactsBalance_200_response_facts_month_total_amount:
      example:
        definedValue: 50
        consumedValue: 0
        remainingValue: 50
      properties:
        definedValue:
          example: 50
          type: integer
        consumedValue:
          example: 0
          type: integer
        remainingValue:
          example: 50
          type: integer
      type: object
    getFactsBalance_200_response_facts:
      example:
        month_total_amount:
          definedValue: 50
          consumedValue: 0
          remainingValue: 50
      properties:
        month_total_amount:
          $ref: '#/components/schemas/getFactsBalance_200_response_facts_month_total_amount'
      type: object
    getFactsBalance_200_response:
      example:
        error: error
        facts:
          month_total_amount:
            definedValue: 50
            consumedValue: 0
            remainingValue: 50
      properties:
        facts:
          $ref: '#/components/schemas/getFactsBalance_200_response_facts'
        error:
          nullable: true
          type: string
      type: object
    readcardDigitalizations_200_response_cardDigitalizations_inner:
      example:
        createdDate: createdDate
        cardId: cardId
        modifiedDate: modifiedDate
        externalId: 6
        id: 0
        status: status
      properties:
        id:
          type: integer
        cardId:
          type: string
        externalId:
          type: integer
        status:
          description: |
            | Status | Description |
            | ---- | ----------- |
            | A | Active |
            | U | Not tokenized |
            | S | Suspended |
            | D (or X) | Deactivated (Final status, cannot be changed)|
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    readcardDigitalizations_200_response:
      example:
        cardDigitalizations:
        - createdDate: createdDate
          cardId: cardId
          modifiedDate: modifiedDate
          externalId: 6
          id: 0
          status: status
        - createdDate: createdDate
          cardId: cardId
          modifiedDate: modifiedDate
          externalId: 6
          id: 0
          status: status
      properties:
        cardDigitalizations:
          items:
            $ref: '#/components/schemas/readcardDigitalizations_200_response_cardDigitalizations_inner'
          type: array
      type: object
    cardDigitalizationsId_200_response_cardDigitalizations_inner:
      example:
        createdDate: createdDate
        cardId: 6
        modifiedDate: modifiedDate
        externalId: 1
        id: 0
        status: status
      properties:
        id:
          type: integer
        cardId:
          type: integer
        externalId:
          type: integer
        status:
          description: |
            | Status | Description |
            | ---- | ----------- |
            | A | Active |
            | U | Not tokenized |
            | S | Suspended |
            | D (or X) | Deactivated (Final status, cannot be changed)|
          type: string
        createdDate:
          type: string
        modifiedDate:
          type: string
      type: object
    cardDigitalizationsId_200_response:
      example:
        cardDigitalizations:
        - createdDate: createdDate
          cardId: 6
          modifiedDate: modifiedDate
          externalId: 1
          id: 0
          status: status
        - createdDate: createdDate
          cardId: 6
          modifiedDate: modifiedDate
          externalId: 1
          id: 0
          status: status
      properties:
        cardDigitalizations:
          items:
            $ref: '#/components/schemas/cardDigitalizationsId_200_response_cardDigitalizations_inner'
          type: array
      type: object
    ScheduledPayment_failedPayment_inner:
      example:
        date: date
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        date:
          type: string
        errorCode:
          type: string
        errorMessage:
          type: string
      type: object
    ScheduledPayment:
      example:
        walletId: 0
        amount: 1.4658129805029452
        period: period
        execAt: execAt
        amr:
        - amr
        - amr
        type: oneshot
        endAt: endAt
        creationDate: creationDate
        endToEndId: endToEndId
        beneficiaryLabel: beneficiaryLabel
        userId: userId
        beneficiary: 6
        beneficiaryType: payout
        currency: currency
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduledPaymentName: scheduledPaymentName
        startAt: startAt
        failedPayment:
        - date: date
          errorMessage: errorMessage
          errorCode: errorCode
        - date: date
          errorMessage: errorMessage
          errorCode: errorCode
        status: VALIDATED
      properties:
        id:
          description: The unique identifier of the Scheduled Payment order.
          format: uuid
          type: string
        status:
          description: The status of the Scheduled Payment.
          enum:
          - VALIDATED
          - CANCELED
          type: string
        scheduledPaymentName:
          description: The label describing the goal of the Scheduled Payment.
          type: string
        walletId:
          description: The unique identifier of the Wallet to be debited.
          type: integer
        beneficiaryType:
          description: |
            The type of beneficiary for the operation.
          enum:
          - payout
          - walletTransfer
          type: string
        beneficiary:
          description: |
            The unique identifier of the beneficiary of the Scheduled Payment, which can be either `beneficiaryId` for Payouts or `beneficiaryWalletId` for Wallet-to-Wallet transfers.
          type: integer
        amount:
          description: The amount of the Scheduled Payment.
          type: number
        type:
          description: "The type of Scheduled Payment, which can be: \n* `oneshot`\
            \ – The payment will occur only once.\n* `periodic` – The payment will\
            \ occur periodically over a defined timeframe.\n"
          enum:
          - oneshot
          - periodic
          type: string
        execAt:
          description: |
            The date on which the a `oneshot` Scheduled Payment is to be executed. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        startAt:
          description: |
            The date from which a `periodic` Scheduled Payment execution starts. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        endAt:
          description: |
            The date on which a `periodic` Scheduled Payment ends. This date must be set after the `startAt` date. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        creationDate:
          description: The date and time at which the Scheduled Payment was created.
          type: string
        period:
          description: |
            The frequency at which a `periodic` Scheduled Payment is to occur.
          type: string
        beneficiaryLabel:
          description: "The label that will be displayed for the Scheduled Payments,\
            \ regardless of the type. Max. 140 characters."
          type: string
        currency:
          description: |
            The currency of the Scheduled Payments (ISO-4217). Can only be `EUR`.
          type: string
        userId:
          description: The unique identifier of the User owning the Wallet to debit.
          type: string
        amr:
          description: |
            The type of SCA for per-operation SCA (e.g., `CLOUD_PIN`, `HYBRID_PIN`, `DEVICE_BIOMETRIC`).
          items:
            type: string
          type: array
        failedPayment:
          items:
            $ref: '#/components/schemas/ScheduledPayment_failedPayment_inner'
          type: array
        endToEndId:
          description: |
            The end-to-end identifier, for Payouts only.  Max. 24 characters. <br> Allowed characters: alphanumeric and `/` `-` `?` `:` `(` `)` `.` `,` `+` ` ` (space). <br> Musn't start nor end with `/`, and musn't contain `//`.
          type: string
      title: ScheduledPayment
      type: object
    postScheduledPayment_request:
      properties:
        scheduledPaymentName:
          description: The label describing the goal of the Scheduled Payment.
          type: string
        walletId:
          description: The unique identifier of the Wallet to debit.
          type: integer
        beneficiaryType:
          description: |
            The type of beneficiary for the operation, which can be:
            * `payout` – The Scheduled Payment targets an external account.
            * `walletTransfer` – The Scheduled Payment targets another Wallet in your Treezor environment.
          enum:
          - payout
          - walletTransfer
          type: string
        beneficiary:
          description: |
            The unique identifier of the beneficiary of the Scheduled Payment, which can be either `beneficiaryId` for Payouts or `beneficiaryWalletId` for Wallet-to-Wallet transfers.
          type: integer
        amount:
          description: The amount of the Scheduled Payment.
          type: number
        type:
          description: "The type of Scheduled Payment, which can be: \n* `oneshot`\
            \ – The payment will occur only once.\n* `periodic` – The payment will\
            \ occur periodically over a defined timeframe.\n"
          enum:
          - oneshot
          - periodic
          type: string
        execAt:
          description: |
            The date on which the a `oneshot` Scheduled Payment is to be executed. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          type: string
        startAt:
          description: |
            The date from which a `periodic` Scheduled Payment execution starts. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          type: string
        endAt:
          description: |
            The date on which a `periodic` Scheduled Payment ends. This date must be set after the `startAt` date. Format: YYYY-MM-DD.
          type: string
        period:
          description: |
            The frequency at which a `periodic` Scheduled Payment is to occur.
          enum:
          - weekly
          - monthly
          - quarterly
          - bi-annual
          - annual
          type: string
        beneficiaryLabel:
          description: "The label that will be displayed for the Scheduled Payments,\
            \ regardless of the type. Max. 140 characters."
          type: string
        currency:
          description: |
            The currency of the Scheduled Payments (ISO-4217). Can only be `EUR`.
          type: string
        endToEndId:
          description: "The end-to-end identifier, for Payouts only.  Max. 24 characters."
          type: string
      required:
      - amount
      - beneficiary
      - beneficiaryType
      - currency
      - type
      - walletId
      type: object
    ScheduledPayment_1:
      example:
        walletId: 0
        amount: 1.4658129805029452
        period: period
        execAt: execAt
        amr:
        - amr
        - amr
        type: oneshot
        endAt: endAt
        creationDate: creationDate
        endToEndId: endToEndId
        beneficiaryLabel: beneficiaryLabel
        userId: userId
        beneficiary: 6
        beneficiaryType: payout
        currency: currency
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduledPaymentName: scheduledPaymentName
        startAt: startAt
        failedPayment:
        - date: date
          errorMessage: errorMessage
          errorCode: errorCode
        - date: date
          errorMessage: errorMessage
          errorCode: errorCode
        status: CANCELED
      properties:
        id:
          description: The unique identifier of the Scheduled Payment order.
          format: uuid
          type: string
        status:
          description: The status of the Scheduled Payment.
          enum:
          - VALIDATED
          - CANCELED
          example: CANCELED
          type: string
        scheduledPaymentName:
          description: The label describing the goal of the Scheduled Payment.
          type: string
        walletId:
          description: The unique identifier of the Wallet to be debited.
          type: integer
        beneficiaryType:
          description: |
            The type of beneficiary for the operation.
          enum:
          - payout
          - walletTransfer
          type: string
        beneficiary:
          description: |
            The unique identifier of the beneficiary of the Scheduled Payment, which can be either `beneficiaryId` for Payouts or `beneficiaryWalletId` for Wallet-to-Wallet transfers.
          type: integer
        amount:
          description: The amount of the Scheduled Payment.
          type: number
        type:
          description: "The type of Scheduled Payment, which can be: \n* `oneshot`\
            \ – The payment will occur only once.\n* `periodic` – The payment will\
            \ occur periodically over a defined timeframe.\n"
          enum:
          - oneshot
          - periodic
          type: string
        execAt:
          description: |
            The date on which the a `oneshot` Scheduled Payment is to be executed. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        startAt:
          description: |
            The date from which a `periodic` Scheduled Payment execution starts. This date must be set at least one day in the future. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        endAt:
          description: |
            The date on which a `periodic` Scheduled Payment ends. This date must be set after the `startAt` date. Format: YYYY-MM-DD.
          format: Y-m-d
          type: string
        creationDate:
          description: The date and time at which the Scheduled Payment was created.
          type: string
        period:
          description: |
            The frequency at which a `periodic` Scheduled Payment is to occur.
          type: string
        beneficiaryLabel:
          description: "The label that will be displayed for the Scheduled Payments,\
            \ regardless of the type. Max. 140 characters."
          type: string
        currency:
          description: |
            The currency of the Scheduled Payments (ISO-4217). Can only be `EUR`.
          type: string
        userId:
          description: The unique identifier of the User owning the Wallet to debit.
          type: string
        amr:
          description: |
            The type of SCA for per-operation SCA (e.g., `CLOUD_PIN`, `HYBRID_PIN`, `DEVICE_BIOMETRIC`).
          items:
            type: string
          type: array
        failedPayment:
          items:
            $ref: '#/components/schemas/ScheduledPayment_failedPayment_inner'
          type: array
        endToEndId:
          description: |
            The end-to-end identifier, for Payouts only.  Max. 24 characters. <br> Allowed characters: alphanumeric and `/` `-` `?` `:` `(` `)` `.` `,` `+` ` ` (space). <br> Musn't start nor end with `/`, and musn't contain `//`.
          type: string
      title: ScheduledPayment
      type: object
    getScheduledPaymentOperations_200_response_payments_inner:
      example:
        date: date
        amount: 0.8008281904610115
        paymentId: 6
        errorMessage: errorMessage
        errorCode: errorCode
        currency: currency
        label: label
        endToEndId: endToEndId
        status: status
      properties:
        date:
          type: string
        amount:
          type: number
        currency:
          type: string
        endToEndId:
          type: string
        label:
          type: string
        status:
          type: string
        paymentId:
          type: integer
        errorCode:
          type: string
        errorMessage:
          type: string
      type: object
    getScheduledPaymentOperations_200_response:
      example:
        cursor:
          next: next
          current: current
          prev: prev
        payments:
        - date: date
          amount: 0.8008281904610115
          paymentId: 6
          errorMessage: errorMessage
          errorCode: errorCode
          currency: currency
          label: label
          endToEndId: endToEndId
          status: status
        - date: date
          amount: 0.8008281904610115
          paymentId: 6
          errorMessage: errorMessage
          errorCode: errorCode
          currency: currency
          label: label
          endToEndId: endToEndId
          status: status
      properties:
        cursor:
          $ref: '#/components/schemas/getCoCardTransactions_200_response_cursor'
        payments:
          items:
            $ref: '#/components/schemas/getScheduledPaymentOperations_200_response_payments_inner'
          type: array
      type: object
    postAcqAuthPayin_request:
      properties:
        amount:
          description: The amount of the payin. Must be ≤ to the authorization amount.
          type: number
        currency:
          description: |
            The currency of the operation. Format: ISO-4217.
          type: string
      type: object
    DefaultError_errors_inner:
      example:
        code: resource_not_found_error
        docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
        type: invalid_request
        message: message
      properties:
        type:
          example: invalid_request
          type: string
        code:
          example: resource_not_found_error
          type: string
        message:
          description: The resource was not found
          type: string
        docUrl:
          example: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: string
      type: object
    DigitalizedCardsBadRequest_inner:
      example:
        code: invalid_parameter_in_request
        docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
        type: invalid_request
        message: message
      properties:
        type:
          example: invalid_request
          type: string
        code:
          example: invalid_parameter_in_request
          type: string
        message:
          description: Error description for human use. Content subject to change
            without notice.
          type: string
        docUrl:
          example: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: string
    DigitalizedCardsUnauthorizedError_inner:
      example:
        code: authorization_error
        docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
        type: invalid_client
        message: message
      properties:
        type:
          example: invalid_client
          type: string
        code:
          example: authorization_error
          type: string
        message:
          description: Error description for human use. Content subject to change
            without notice.
          type: string
        docUrl:
          example: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: string
    DigitalizedCardsNotFound_inner:
      example:
        code: resource_not_found_error
        docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
        type: not_found
        message: message
      properties:
        type:
          example: not_found
          type: string
        code:
          example: resource_not_found_error
          type: string
        message:
          description: Error description for human use. Content subject to change
            without notice.
          type: string
        docUrl:
          example: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: string
    DigitalizedCardsInternalError_inner:
      example:
        code: unexpected_error
        docUrl: https://docs.treezor.com/guide/api-basics/response-codes.html
        type: unexpected_internal_server_error
        message: message
      properties:
        type:
          example: unexpected_internal_server_error
          type: string
        code:
          example: unexpected_error
          type: string
        message:
          description: Error description for human use. Content subject to change
            without notice.
          type: string
        docUrl:
          example: https://docs.treezor.com/guide/api-basics/response-codes.html
          type: string
    NotificationSimulationPayins_cardPaymentMethod:
      description: Payment card used during payin
      properties:
        brand:
          type: string
        cardExpiryMonth:
          type: string
        cardExpiryYear:
          type: string
        cardHolder:
          type: string
        country:
          type: string
        issuer:
          type: string
        maskedPan:
          type: string
        token:
          type: string
      type: object
    NotificationSimulationAuthorizations_cardPaymentMethod:
      description: Payment card used during authorization
      example:
        country: country
        maskedPan: maskedPan
        cardExpiryYear: cardExpiryYear
        cardHolder: cardHolder
        brand: brand
        cardExpiryMonth: cardExpiryMonth
        issuer: issuer
        token: token
      properties:
        brand:
          type: string
        cardExpiryMonth:
          type: string
        cardExpiryYear:
          type: string
        cardHolder:
          type: string
        country:
          type: string
        issuer:
          type: string
        maskedPan:
          type: string
        token:
          type: string
      type: object
    AuthorizationRequest_browserInfo:
      example:
        screenWidth: 5
        javaEnabled: true
        deviceFingerprint: deviceFingerprint
        timezone: timezone
        httpAccept: httpAccept
        screenHeight: 5
        javascriptEnabled: true
        language: language
        colorDepth: 1
        ipaddr: ipaddr
        httpUserAgent: httpUserAgent
      properties:
        javaEnabled:
          description: |
            Represents the ability of the device's browser to run Java, when applicable
          type: boolean
        javascriptEnabled:
          description: |
            Represents the ability for the client's browser to run JavaScript
          type: boolean
        ipaddr:
          description: The IP address of the end-user making a top-up
          type: string
        httpAccept:
          description: |
            This element must include the exact content of the HTTP Accept header, as sent to the Treezor customer from the end-user
          type: string
        httpUserAgent:
          description: |
            This element must include the exact content of the User_Agent HTTP header, as sent to the Treezor customer from the end-user
          type: string
        language:
          description: |
            Value representing the client's browser language as defined in IETF-BCP47
          type: string
        colorDepth:
          description: |
            Value representing the depth of the color palette to display an image, in bits/pixel
          enum:
          - 1
          - 4
          - 8
          - 15
          - 16
          - 32
          - 48
          type: integer
        screenHeight:
          description: "Total height of the device screen (in pixels), when applicable"
          type: integer
        screenWidth:
          description: Total width of the end-user screen (in pixels)
          type: integer
        timezone:
          description: |
            Time difference in minutes between UTC and cardholder's browser local time
          type: string
        deviceFingerprint:
          type: string
      type: object
    TopupCards_topupCards_inner:
      example:
        country: country
        maskedPan: maskedPan
        profile: profile
        cardExpiryYear: cardExpiryYear
        cardType: cardType
        cardHolder: cardHolder
        updatedDate: updatedDate
        userId: userId
        cardExpiryMonth: cardExpiryMonth
        issuer: issuer
        token: token
        domesticNetwork: domesticNetwork
        createdDate: createdDate
        topupCardId: topupCardId
        brand: brand
        providerName: providerName
        status: VALIDATED
      properties:
        topupCardId:
          description: The tokenized card universally unique identifier (UUID)
          type: string
        token:
          description: HiPay token of the card
          type: string
        userId:
          description: Treezor user unique identifier
          type: string
        brand:
          description: Brand of the payment method
          type: string
        maskedPan:
          description: Masked card number
          type: string
        cardHolder:
          description: Cardholder name
          type: string
        cardExpiryMonth:
          description: Expiry month of the card
          type: string
        cardExpiryYear:
          description: Expiry year of the card
          type: string
        issuer:
          description: Issuer bank name
          type: string
        country:
          description: |
            Country code of the bank where the card was issued. This two-letter
            country code complies with ISO 3166-1 (alpha 2).
          type: string
        domesticNetwork:
          description: Card domestic network
          type: string
        cardType:
          description: "Type of the card.\n\nPossible values: \n- *DEBIT* \n- *CREDIT* "
          type: string
        createdDate:
          description: Creation date of the TopupCard
          type: string
        updatedDate:
          description: Updated date of the TopupCard
          type: string
        status:
          description: |
            Status of the TopupCard.
          enum:
          - VALIDATED
          - CANCELED
          type: string
        providerName:
          description: Token provider name (eg HiPay)
          type: string
        profile:
          description: Acquisition profile used for operations on this card
          type: string
      type: object
    BeneficiaryObject_beneficiaries_inner_sddB2bWhitelist_inner:
      example:
        uniqueMandateReference: uniqueMandateReference
        walletId: 1.4658129805029452
        isRecurrent: true
      properties:
        uniqueMandateReference:
          description: |
            Unique Mandate Reference that unambiguiously
            identify a mandate signed between the user and
            the beneficiary
          type: string
        isRecurrent:
          description: |
            If mandate is a recuring payment, this field
            must be true.
          type: boolean
        walletId:
          description: |
            If present, the Direct Debit will be accepted
            only if the targeted wallet is the wallet with
            the given walletId. Without this value, the
            SDD can target any wallets of the user. With
            the value specified, only the explicitely
            authorized wallet can be targeted by SDD.
          type: number
      required:
      - isRecurrent
      - uniqueMandateReference
      type: object
    BeneficiaryObject_beneficiaries_inner:
      example:
        address: address
        sepaCreditorIdentifier: sepaCreditorIdentifier
        nickName: nickName
        sddCoreBlacklist:
        - sddCoreBlacklist
        - sddCoreBlacklist
        isActive: true
        userId: 6
        createdDate: createdDate
        sddCoreKnownUniqueMandateReference:
        - sddCoreKnownUniqueMandateReference
        - sddCoreKnownUniqueMandateReference
        iban: iban
        name: name
        modifiedDate: modifiedDate
        id: 0
        tag: tag
        bic: bic
        sddB2bWhitelist:
        - uniqueMandateReference: uniqueMandateReference
          walletId: 1.4658129805029452
          isRecurrent: true
        - uniqueMandateReference: uniqueMandateReference
          walletId: 1.4658129805029452
          isRecurrent: true
        usableForSct: false
      properties:
        id:
          description: |
            The unique identifier of the Beneficiary.
          type: integer
        tag:
          description: |
            Custom data that could be used by caller to search
            the instance.
          type: string
        userId:
          description: The unique identifier of the User to which the Beneficiary
            is attached.
          type: integer
        nickName:
          description: |
            Name choosen by end user to easily recognize the
            beneficiary.
          type: string
        name:
          description: "Beneficiary name, linked to bank account."
          type: string
        address:
          description: "Beneficiary address, linked to bank account."
          type: string
        iban:
          description: Beneficiary International Bank Account Number.
          type: string
        bic:
          description: Beneficiary Bank Identifier Code.
          type: string
        sepaCreditorIdentifier:
          description: |
            Beneficiary SEPA Creditor Identifier. Mandatory to
            validate B2B incoming direct debit, useless otherwise. Between 8 and 35 h.
          type: string
        sddB2bWhitelist:
          description: |
            Each unique mandate reference, with its frequency
            type, must be explicitely allowed when doing B2B
            Direct Debit. Furthermore, a mandate not used during
            more than 36 months will be automatically rejected
            even if in the white list.
          items:
            $ref: '#/components/schemas/BeneficiaryObject_beneficiaries_inner_sddB2bWhitelist_inner'
          type: array
        sddCoreBlacklist:
          description: |
            Core Direct Debit are accepted by default. If a Core
            mandate is to be refused on reception, it has to be
            added to this list. If wild char * (star) is used
            instead of a UMR, all Direct Debit from this
            beneficiary will be refused. Note that the mandate
            ref entered is case sensitive.
          items:
            description: |
              Unique Mandate Reference that unambiguiously
              identify a mandate signed between the user and the
              beneficiary. Star character can also be used to
              reject all Direct debit from the beneficiary.
            type: string
          type: array
        usableForSct:
          default: false
          description: |
            Indicated if the beneficiary can be used for SEPA
            Credit Transfer. This field is a conveniant way to
            filter all beneficiaries for a user that would like
            to do a Credit Transfer. Indeed, beneficaries are
            created automatically when receiving a Core Direct
            Debit and therefor by looking at the list you won't
            be able to idnetify which beneficary to use on SCT.
          type: boolean
        sddCoreKnownUniqueMandateReference:
          items:
            description: |
              List of all the unique mandate references received
              from the beneficiary of Core Direct Debits for
              given user
            type: string
          type: array
        isActive:
          description: Indicates whether or not the Beneficiary is active. This value
            is set to `true` by default.
          type: boolean
        createdDate:
          description: Creation date.
          type: string
        modifiedDate:
          description: Update date.
          type: string
      type: object
    DocumentObject_documents_inner:
      example:
        fileName: fileName
        temporaryUrl: temporaryUrl
        userLastname: userLastname
        documentType: documentType
        documentTypeId: 1
        documentTag: documentTag
        userId: 6
        residenceId: 5
        codeStatus: codeStatus
        thumbfileName: thumbfileName
        informationStatus: informationStatus
        createdDate: createdDate
        name: name
        modifiedDate: modifiedDate
        temporaryUrlThumb: temporaryUrlThumb
        userFirstname: userFirstname
        documentId: 0
        documentStatus: PENDING
      properties:
        documentId:
          type: integer
        documentTag:
          type: string
        userId:
          type: integer
        userFirstname:
          type: string
        userLastname:
          type: string
        name:
          type: string
        documentStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        documentTypeId:
          type: integer
        documentType:
          type: string
        fileName:
          type: string
        thumbfileName:
          type: string
        createdDate:
          description: YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: YYYY-MM-DD HH:MM:SS
          type: string
        codeStatus:
          type: string
        informationStatus:
          type: string
        residenceId:
          type: integer
        temporaryUrl:
          type: string
        temporaryUrlThumb:
          type: string
      type: object
    MandateObject_mandates_inner:
      example:
        uniqueMandateReference: uniqueMandateReference
        debtorReferenceIdentificationCode: debtorReferenceIdentificationCode
        isPaper: true
        debtorAddress: debtorAddress
        creditorName: creditorName
        debtorReferencePartyName: debtorReferencePartyName
        createdIp: createdIp
        debtorCity: debtorCity
        contractDescription: contractDescription
        title: title
        creditorZipCode: creditorZipCode
        creditorCountry: creditorCountry
        debtorBic: debtorBic
        debtorIban: debtorIban
        mandateStatus: PENDING
        mandateId: 0
        creditorCity: creditorCity
        debtorCountry: FR
        debtorSignatureIp: debtorSignatureIp
        creditorReferencePartyName: creditorReferencePartyName
        sepaCreditorIdentifier: sepaCreditorIdentifier
        creditorReferenceIdentificationCode: creditorReferenceIdentificationCode
        debtorIdentificationCode: debtorIdentificationCode
        signed: 1
        debtorName: debtorName
        debtorZipCode: debtorZipCode
        userId: 6
        legalInformations: legalInformations
        contractIdentificationNumber: contractIdentificationNumber
        creditorAddress: creditorAddress
        createdDate: 2000-01-23T04:56:07.000+00:00
        signatureDate: 2000-01-23
        revocationSignatureDate: 2000-01-23T04:56:07.000+00:00
        sddType: core
        modifiedDate: 2000-01-23T04:56:07.000+00:00
        sequenceType: one-off
      properties:
        mandateId:
          description: The unique identifier of the Mandate.
          type: integer
        title:
          type: string
        legalInformations:
          type: string
        uniqueMandateReference:
          type: string
        mandateStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        userId:
          description: The unique identifier of the User.
          type: integer
        debtorName:
          type: string
        debtorAddress:
          type: string
        debtorCity:
          type: string
        debtorZipCode:
          type: string
        debtorCountry:
          example: FR
          format: ISO 3166-1 alpha-2
          type: string
        debtorIban:
          type: string
        debtorBic:
          type: string
        sequenceType:
          description: |
            Defines whether or not the debtor will be debited multiple times. Can be one of the following:
            * `one-off` – For a one-time payment.
            * `recurrent` – For recurring payments.
          enum:
          - one-off
          - recurrent
          type: string
        creditorName:
          type: string
        sepaCreditorIdentifier:
          type: string
        creditorAddress:
          type: string
        creditorCity:
          type: string
        creditorZipCode:
          type: string
        creditorCountry:
          type: string
        signatureDate:
          description: The date on which the Mandate was signed.
          format: date
          type: string
        debtorSignatureIp:
          type: string
        signed:
          type: integer
        debtorIdentificationCode:
          type: string
        debtorReferencePartyName:
          type: string
        debtorReferenceIdentificationCode:
          type: string
        creditorReferencePartyName:
          type: string
        creditorReferenceIdentificationCode:
          type: string
        contractIdentificationNumber:
          type: string
        contractDescription:
          type: string
        isPaper:
          type: boolean
        sddType:
          enum:
          - core
          - b2b
          type: string
        revocationSignatureDate:
          description: Date YYYY-MM-DD HH:MM:SS
          format: date-time
          type: string
        createdIp:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          format: date-time
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          format: date-time
          type: string
      type: object
    CardObject_cards_inner_restrictionGroupLimits_inner:
      example:
        paymentDailyLimit: 0.6519181
        merchantIdRestrictionGroups: 0
        mccRestrictionGroups: 0
        countryRestrictionGroups: 0
      properties:
        paymentDailyLimit:
          exclusiveMinimum: true
          format: float
          minimum: 0
          type: number
        mccRestrictionGroups:
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        countryRestrictionGroups:
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        merchantIdRestrictionGroups:
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
      type: object
    CardObject_cards_inner:
      example:
        limitsGroup: limitsGroup
        metadata: metadata
        endDate: endDate
        optionNfc: 1
        virtualConverted: 2
        limitPaymentWeek: 6
        freeCustomizedInfo: freeCustomizedInfo
        publicToken: publicToken
        pinTryExceeds: 3
        limitPaymentAll: 9
        totalPaymentYear: 6
        isLive: 9
        limitAtmYear: 6
        optionForeign: 1
        limitPaymentDay: 8
        limitPaymentMonth: 9
        eventName: eventName
        optionAtm: 7
        mccRestrictionGroupId: 5
        cardLanguages: cardLanguages
        walletId: 1
        maskedPan: maskedPan
        deliveryPostcode: deliveryPostcode
        optionOnline: 1
        totalAtmWeek: 1
        letterCustomizedInfo: letterCustomizedInfo
        customizeInfo: customizeInfo
        totalPaymentAll: 3
        totalRows: 7
        limitAtmAll: 5
        totalPaymentDay: 3
        merchantRestrictionGroupId: 2
        walletCardtransactionId: 5
        cardDesign: cardDesign
        cardId: 0
        modifiedDate: modifiedDate
        startDate: startDate
        logoId: logoId
        statusCode: UNLOCK
        totalAtmMonth: 6
        CVV: CVV
        deliveryFirstname: deliveryFirstname
        originalCardId: 7
        embossedName: embossedName
        mobileSent: mobileSent
        expiryDate: expiryDate
        limitAtmDay: 4
        logoBackId: logoBackId
        countryCode: countryCode
        deliveryTitle: deliveryTitle
        eventAlias: eventAlias
        deliveryLastname: deliveryLastname
        totalPaymentWeek: 6
        modifiedBy: 0
        lang: lang
        physical: 4
        limitAtmWeek: 1
        totalPaymentMonth: 5
        deliveryCity: deliveryCity
        paymentDailyLimit: 6.4384236
        totalAtmAll: 6
        limitPaymentYear: 9
        renewalType: A
        deliveryAddress2: deliveryAddress2
        totalAtmDay: 2
        packageId: packageId
        deliveryAddress3: deliveryAddress3
        countryRestrictionGroupId: 7
        deliveryAddress1: deliveryAddress1
        renewalDate: renewalDate
        userId: 6
        cardTag: cardTag
        createdDate: createdDate
        permsGroup: permsGroup
        createdBy: 7
        restrictionGroupLimits:
        - paymentDailyLimit: 0.6519181
          merchantIdRestrictionGroups: 0
          mccRestrictionGroups: 0
          countryRestrictionGroups: 0
        - paymentDailyLimit: 0.6519181
          merchantIdRestrictionGroups: 0
          mccRestrictionGroups: 0
          countryRestrictionGroups: 0
        deliveryCountry: deliveryCountry
        limitAtmMonth: 7
        cancellationNumber: cancellationNumber
        currencyCode: currencyCode
        designCode: designCode
        totalAtmYear: 3
      properties:
        cardId:
          description: The unique identifier of the card.
          type: integer
        userId:
          description: The unique identifier of the cardholder.
          type: integer
        walletId:
          description: The unique identifier of the Wallet the card is attached to.
          type: integer
        walletCardtransactionId:
          type: integer
        mccRestrictionGroupId:
          description: |
            The merchant category restriction group (`mccRestrictionGroup`) applied to the card.
          type: integer
        merchantRestrictionGroupId:
          description: |
            The merchant Id restriction group (`merchantRestrictionGroupId`) applied to the card.
          type: integer
        countryRestrictionGroupId:
          description: |
            The country restriction group (`countryRestrictionGroupId`) applied to the card.
          type: integer
        publicToken:
          type: string
        cardTag:
          type: string
        statusCode:
          enum:
          - UNLOCK
          - LOCK
          - LOST
          - STOLEN
          - DESTROYED
          - LOCK_INTERNAL
          - EXPIRED
          type: string
        isLive:
          type: integer
        pinTryExceeds:
          type: integer
        maskedPan:
          type: string
        embossedName:
          type: string
        expiryDate:
          description: "The date on which the card expires. \nThe [`card.expiryAlert`](/guide/cards/events.md#structure-of-a-card-expiryalert)\
            \ webhook is sent a month before the `expiryDate` for you to anticipate\
            \ [Renewal](/guide/cards/renewal.html).\nFormat: YYYY-MM-DD \n"
          type: string
        CVV:
          description: "The verification code of the card. This field is to be deprecated\
            \ and hence may return a value of `000`. \n\nYou may retrieve the card\
            \ CVV by using the [`/v1/cardimages`](/guide/swagger/introduction.html#/Cards/getCardImage)\
            \ request or by migrating to the [PCI DSS-compliant services](/guide/cards/pci-dss.html).\n"
          type: string
        startDate:
          type: string
        endDate:
          type: string
        countryCode:
          description: Inherited from the cardholder's country.
          type: string
        currencyCode:
          type: string
        lang:
          description: Inherited from the cardholder's language.
          type: string
        deliveryTitle:
          type: string
        deliveryLastname:
          type: string
        deliveryFirstname:
          type: string
        deliveryAddress1:
          type: string
        deliveryAddress2:
          type: string
        deliveryAddress3:
          type: string
        deliveryCity:
          type: string
        deliveryPostcode:
          type: string
        deliveryCountry:
          type: string
        mobileSent:
          description: Inherited from the cardholder' phone.
          type: string
        limitsGroup:
          type: string
        permsGroup:
          type: string
        cardDesign:
          type: string
        virtualConverted:
          description: |
            Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be:
            * `1` – Physical card converted from a virtual card
            * `0` – Not converted, virtual card only
          enum:
          - 0
          - 1
          type: integer
        physical:
          type: integer
        optionAtm:
          type: integer
        optionForeign:
          type: integer
        optionOnline:
          type: integer
        optionNfc:
          type: integer
        limitAtmYear:
          type: integer
        limitAtmMonth:
          type: integer
        limitAtmWeek:
          type: integer
        limitAtmDay:
          type: integer
        limitAtmAll:
          type: integer
        limitPaymentYear:
          type: integer
        limitPaymentMonth:
          type: integer
        limitPaymentWeek:
          type: integer
        limitPaymentDay:
          type: integer
        limitPaymentAll:
          type: integer
        paymentDailyLimit:
          format: float
          type: number
        totalAtmYear:
          type: integer
        totalAtmMonth:
          type: integer
        totalAtmWeek:
          type: integer
        totalAtmDay:
          type: integer
        totalAtmAll:
          type: integer
        totalPaymentYear:
          type: integer
        totalPaymentMonth:
          type: integer
        totalPaymentWeek:
          type: integer
        totalPaymentDay:
          type: integer
        totalPaymentAll:
          type: integer
        createdBy:
          type: integer
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedBy:
          type: integer
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
        designCode:
          type: string
        cardLanguages:
          type: string
        eventName:
          description: "Name of the Wallet, inherited from the wallet the card is\
            \ attached to."
          type: string
        eventAlias:
          description: "Description of the Wallet, inherited from the wallet the card\
            \ is attached to."
          type: string
        restrictionGroupLimits:
          items:
            $ref: '#/components/schemas/CardObject_cards_inner_restrictionGroupLimits_inner'
          minItems: 1
          type: array
        cancellationNumber:
          description: |
            Number generated when the card `statusCode` is set to `STOLEN` or `LOST`.
          type: string
        metadata:
          type: string
        renewalDate:
          description: Date on which the card was renewed (field populated for the
            original card only). YYYY-MM-DD.
          type: string
        renewalType:
          description: |
            Indicates how the Card is to be renewed. `A` for automatic renewal, `N` for non-automatic renewal.
          enum:
          - A
          - "N"
          type: string
        originalCardId:
          description: The unique identifier of the original Card (field populated
            for renewed cards only).
          type: integer
        logoId:
          description: |
            The file name of the logo for the card. Learn more in the [Logo](/guide/cards/creation.html#logo-logoid) article.
          type: string
        logoBackId:
          description: |
            The file name of the logo for the back of the card. Learn more in the [Back Logo](/guide/cards/creation.html#back-logo-logobackid) article.
          type: string
        packageId:
          description: Packaging reference for card shipping. Max. 8 characters.
          type: string
        customizeInfo:
          description: Customized text to be displayed on the card.
          type: string
        letterCustomizedInfo:
          description: Customized text for the letter that is joined to the card.
          type: string
        freeCustomizedInfo:
          description: More customized text to be displayed on the card.
          type: string
      type: object
    MerchantIdGroupObject_merchantIdRestrictionGroups_inner:
      example:
        createdDate: createdDate
        isWhitelist: true
        name: name
        id: 0
        merchants:
        - merchants
        - merchants
        startDate: startDate
        status: PENDING
      properties:
        id:
          description: The unique identifier of the Merchant ID restriction group.
          type: integer
        name:
          description: The name of the Merchant ID restriction group.
          type: string
        isWhitelist:
          description: "Indicates the kind of restriction: \n* `true` (default) –\
            \ Allows only a specified list of merchant ids(whitelist)\n* `false` –\
            \ Allows all merchant ids except the specified list (blacklist)\n"
          type: boolean
        merchants:
          description: List of Merchant IDs (each item is a string).
          items:
            type: string
          type: array
        status:
          description: The status of the Merchant ID restriction group.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        startDate:
          description: |
            The date and time at which the restriction starts. Format: YYYY-MM-DD HH:MM:SS
          type: string
        createdDate:
          description: |
            The date and time at which the restriction group was created. Format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    ScaWalletObject_scaWallets_inner_mobileWallet:
      example:
        pushMessagingId: pushMessagingId
        productModel: productModel
        os: os
        deviceIdType: deviceIdType
        secretFingerprint: secretFingerprint
        lastEligibilityCheck: 2000-01-23T04:56:07.000+00:00
        nfc: true
        deviceId: deviceId
        appBuildNumber: appBuildNumber
        productFingerprint: productFingerprint
        mobileUpdateDate: mobileUpdateDate
        appleTeamId: appleTeamId
        emulator: true
        pushMessagingProvider: pushMessagingProvider
        osVersion: osVersion
        root: root
        sdkVersion: sdkVersion
        brand: brand
      properties:
        appBuildNumber:
          type: string
        sdkVersion:
          type: string
        os:
          type: string
        osVersion:
          type: string
        brand:
          type: string
        productModel:
          type: string
        deviceId:
          type: string
        deviceIdType:
          type: string
        productFingerprint:
          type: string
        secretFingerprint:
          type: string
        root:
          type: string
        pushMessagingId:
          type: string
        pushMessagingProvider:
          type: string
        mobileUpdateDate:
          type: string
        lastEligibilityCheck:
          format: date-time
          type: string
        nfc:
          type: boolean
        emulator:
          type: boolean
        appleTeamId:
          type: string
      type: object
    ScaWalletObject_scaWallets_inner:
      example:
        clientId: clientId
        settingsProfile: settingsProfile
        scaWalletTag: scaWalletTag
        lockReasons:
        - ISSUER
        - ISSUER
        activationCodeExpiryDate: 2024-05-30T16:29:22+02:00
        creationDate: 2024-05-30T16:09:22+02:00
        userId: userId
        subStatus: CREATING_IN_PROGRESS
        mobileWallet:
          pushMessagingId: pushMessagingId
          productModel: productModel
          os: os
          deviceIdType: deviceIdType
          secretFingerprint: secretFingerprint
          lastEligibilityCheck: 2000-01-23T04:56:07.000+00:00
          nfc: true
          deviceId: deviceId
          appBuildNumber: appBuildNumber
          productFingerprint: productFingerprint
          mobileUpdateDate: mobileUpdateDate
          appleTeamId: appleTeamId
          emulator: true
          pushMessagingProvider: pushMessagingProvider
          osVersion: osVersion
          root: root
          sdkVersion: sdkVersion
          brand: brand
        deletionDate: 2000-01-23T04:56:07.000+00:00
        authenticationMethods:
        - "{}"
        - "{}"
        passcodeStatus: SET
        lockMessage: lockMessage
        id: id
        activationCode: activationCode
        locked: true
        activationDate: activationDate
        status: CREATING
        invalidActivationAttempts: invalidActivationAttempts
      properties:
        id:
          type: string
        status:
          enum:
          - CREATING
          - CREATED
          - INITIALIZING
          - ACTIVE
          - DELETED
          nullable: true
          type: string
        subStatus:
          enum:
          - CREATING_IN_PROGRESS
          - CREATED_BLOCKED
          - CREATED_READY
          - INITIALIZING_MOBILE
          - ACTIVATED_LOGGED_IN
          - ACTIVATED_LOGGED_OUT
          - DELETED_BY_ISSUER
          - DELETED_UNINSTALLED
          nullable: true
          type: string
        passcodeStatus:
          enum:
          - SET
          - NOT_SET
          - TO_BE_CHANGED
          - NONE
          nullable: true
          type: string
        locked:
          nullable: true
          type: boolean
        lockReasons:
          items:
            enum:
            - ISSUER
            - LOST_DEVICE
            - STOLEN_DEVICE
            - FRAUDULENT_USE_SUSPECTED_BY_ISSUER
            - FRAUDULENT_USE_SUSPECTED_BY_CLIENT
            - TERMINATE_SERVICE
            - INCIDENT
            type: string
          nullable: true
          type: array
        lockMessage:
          nullable: true
          type: string
        settingsProfile:
          nullable: true
          type: string
        mobileWallet:
          $ref: '#/components/schemas/ScaWalletObject_scaWallets_inner_mobileWallet'
        activationCode:
          type: string
        creationDate:
          example: 2024-05-30T16:09:22+02:00
          format: date-time
          nullable: true
          type: string
        deletionDate:
          format: date-time
          nullable: true
          type: string
        activationCodeExpiryDate:
          example: 2024-05-30T16:29:22+02:00
          format: date-time
          nullable: true
          type: string
        authenticationMethods:
          items:
            type: object
          nullable: true
          type: array
        invalidActivationAttempts:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
        scaWalletTag:
          nullable: true
          type: string
        clientId:
          type: string
        activationDate:
          nullable: true
          type: string
      type: object
    SupportUserObject_clients_inner:
      example:
        clientId: clientId
        lastLoginAt: 2000-01-23
        scopes:
        - read_all
        - read_all
        acceptedAt: 2000-01-23
      properties:
        clientId:
          type: string
        scopes:
          items:
            enum:
            - read_all
            - read_write
            - read_only
            - admin
            - support_user_management
            - legal
            type: string
          type: array
        lastLoginAt:
          format: date
          type: string
        acceptedAt:
          format: date
          type: string
      type: object
    TaxResidenceObject_taxResidences_inner:
      example:
        country: country
        liabilityWaiver: true
        createdDate: createdDate
        isDeleted: true
        deletedDate: deletedDate
        taxPayerId: taxPayerId
        lastUpdate: lastUpdate
        id: 0
        userId: 6
      properties:
        id:
          description: The unique identifier of the Tax Residence.
          type: integer
        userId:
          description: The unique identifier of the User.
          type: integer
        country:
          description: The country code for the country of Tax Residence.
          type: string
        taxPayerId:
          description: The Tax Identification Number (TIN).
          type: string
        liabilityWaiver:
          description: The waiver exempting Treezor from liability in case of a missing
            TIN.
          type: boolean
        createdDate:
          description: The date of creation of the Tax Residence object.
          type: string
        lastUpdate:
          description: The date and time at which the Tax Residence has been updated.
          type: string
        deletedDate:
          description: The date and time at which the Tax Residence has been deleted.
          type: string
        isDeleted:
          description: Whether or not the Tax Residence object was deleted.
          type: boolean
      type: object
    TransferObject_transfers_inner:
      example:
        beneficiaryWalletAlias: beneficiaryWalletAlias
        transferTypeId: 2
        walletId: 6
        amount: amount
        transferStatus: PENDING
        transferTag: transferTag
        label: label
        totalRows: 7
        transferId: 0
        transferDate: transferDate
        codeStatus: codeStatus
        foreignId: foreignId
        informationStatu: informationStatu
        createdDate: createdDate
        beneficiaryWalletTypeId: 5
        modifiedDate: modifiedDate
        walletAlias: walletAlias
        walletTypeId: 1
        currency: currency
        beneficiaryWalletId: 5
        walletEventName: walletEventName
        beneficiaryWalletEventName: beneficiaryWalletEventName
        partnerFee: partnerFee
      properties:
        transferId:
          description: The unique identifier of the Transfer.
          type: integer
        transferStatus:
          description: The status of the Transfer.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        transferTag:
          type: string
        walletId:
          description: The unique identifier of the debited Wallet.
          type: integer
        walletTypeId:
          description: "The type of the debited Wallet:\n\n* `9` – Electronic Money\
            \ Wallet \n* `10` – Payment Account Wallet\n* `13` – Mirror Wallet\n"
          type: integer
        beneficiaryWalletId:
          description: The unique identifier of the credited Wallet.
          type: integer
        beneficiaryWalletTypeId:
          description: |
            The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
          enum:
          - 9
          - 10
          - 14
          - 15
          type: integer
        transferDate:
          description: |
            The date of the Transfer. Format: YYYY-MM-DD
          type: string
        walletEventName:
          description: The name of the debited Wallet.
          type: string
        walletAlias:
          deprecated: true
          type: string
        beneficiaryWalletEventName:
          description: The name of the credited Wallet.
          type: string
        beneficiaryWalletAlias:
          deprecated: true
          type: string
        amount:
          description: The amount of the transfer.
          type: string
        currency:
          description: The currency of the transfer.
          type: string
        label:
          type: string
        transferTypeId:
          description: "The type of transfer:\n* `1` – Wallet to wallet \n* `2` –\
            \ Card transaction\n* `3` – Client fees\n* `4` – Credit note\n"
          type: integer
        createdDate:
          description: |
            The date and time at which the transfer is created. Format: YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: |
            The date and time at which the transfer is updated. Format: YYYY-MM-DD HH:MM:SS
          type: string
        totalRows:
          type: integer
        foreignId:
          type: string
        partnerFee:
          type: string
        codeStatus:
          type: string
        informationStatu:
          type: string
      type: object
    UserObject_users_inner:
      example:
        country: country
        legalNetIncomeRange: legalNetIncomeRange
        occupation: occupation
        residentCountriesSanctions: 1
        language: language
        sourceOfFunds: donation
        middleNames: middleNames
        legalName: legalName
        occupationType: self_employed
        informationStatus: informationStatus
        optInMailing: 7
        incomeRange: incomeRange
        legalTvaNumber: legalTvaNumber
        birthCountry: birthCountry
        involvedSanctions: 6
        state: state
        legalRegistrationDate: legalRegistrationDate
        kycReviewComment: kycReviewComment
        parentUserId: 6
        postcode: postcode
        kycReview: 3
        legalAnnualTurnOver: legalAnnualTurnOver
        taxNumber: taxNumber
        personalAssetsRange: 6
        totalRows: 9
        secondaryAddress1: secondaryAddress1
        secondaryAddress2: secondaryAddress2
        lastname: lastname
        secondaryAddress3: secondaryAddress3
        legalSector: legalSector
        codeStatus: codeStatus
        economicSanctions: 1
        nationality: nationality
        phone: phone
        activityOutsideEu: 1
        modifiedDate: modifiedDate
        walletCount: 4
        countryName: countryName
        taxResidence: taxResidence
        position: position
        distributionCountry: FR
        legalRegistrationNumber: legalRegistrationNumber
        birthday: birthday
        firstname: firstname
        userStatus: PENDING
        city: city
        timezone: timezone
        payinCount: 5
        title: M
        occupationCategory: 9
        isFreezed: 2
        legalNameEmbossed: legalNameEmbossed
        secondaryCity: secondaryCity
        legalNumberOfEmployeeRange: legalNumberOfEmployeeRange
        personalAssets: personalAssets
        isFrozen: 4
        effectiveBeneficiary: 7
        email: email
        secondaryCountry: secondaryCountry
        entitySanctionsQuestionnaire: 7
        monthlyIncomeRange: 8
        placeOfBirth: placeOfBirth
        sanctionsQuestionnaireDate: sanctionsQuestionnaireDate
        address3: address3
        address2: address2
        sepaCreditorIdentifier: sepaCreditorIdentifier
        address1: address1
        controllingPersonType: 1
        secondaryPostcode: secondaryPostcode
        mobile: mobile
        secondaryState: secondaryState
        specifiedUSPerson: 5
        userId: 0
        legalForm: legalForm
        parentType: shareholder
        nationalityOther: nationalityOther
        kycLevel: 9
        employeeType: 5
        createdDate: createdDate
        legalShareCapital: 2
        userTag: userTag
        legalSectorType: NAF
        isOnStockExchange: 1
      properties:
        userId:
          description: The unique identifier of the User.
          type: integer
        userStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        userTag:
          type: string
        parentUserId:
          type: integer
        parentType:
          enum:
          - shareholder
          - employee
          - leader
          type: string
        controllingPersonType:
          type: integer
        employeeType:
          type: integer
        specifiedUSPerson:
          type: integer
        title:
          enum:
          - M
          - MME
          - MLLE
          type: string
        firstname:
          type: string
        lastname:
          type: string
        middleNames:
          type: string
        birthday:
          type: string
        email:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        postcode:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          format: ISO 3166-1 alpha-2
          type: string
        countryName:
          type: string
        distributionCountry:
          description: |
            The country in which the end user is using your services.
          enum:
          - FR
          - ES
          - IT
          - DE
          - BE
          - NL
          format: ISO 3166-1 alpha-2
          nullable: true
          type: string
        secondaryAddress1:
          type: string
        secondaryAddress2:
          type: string
        secondaryAddress3:
          type: string
        secondaryPostcode:
          type: string
        secondaryCity:
          type: string
        secondaryState:
          type: string
        secondaryCountry:
          description: Format ISO 3166-1 alpha-2
          type: string
        phone:
          type: string
        mobile:
          type: string
        nationality:
          description: Format ISO 3166-1 alpha-2
          type: string
        nationalityOther:
          description: Format ISO 3166-1 alpha-2
          type: string
        placeOfBirth:
          type: string
        birthCountry:
          description: Format ISO 3166-1 alpha-2
          type: string
        occupation:
          deprecated: true
          description: deprecated
          type: string
        incomeRange:
          deprecated: true
          type: string
        legalName:
          type: string
        legalNameEmbossed:
          type: string
        legalRegistrationNumber:
          type: string
        legalTvaNumber:
          type: string
        legalRegistrationDate:
          description: Date YYYY-MM-DD
          type: string
        legalForm:
          type: string
        legalShareCapital:
          type: integer
        legalSector:
          type: string
        legalAnnualTurnOver:
          type: string
        legalNetIncomeRange:
          type: string
        legalNumberOfEmployeeRange:
          type: string
        effectiveBeneficiary:
          type: integer
        kycLevel:
          description: |
            * `0` – NONE
            * `1` – LIGHT
            * `2` – REGULAR
            * `3` – STRONG
            * `4` – REFUSED
            * `5` – PREVALIDATED
            * `6` – ENHANCED
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          type: integer
        kycReview:
          description: |
            * `0` – NONE
            * `1` – PENDING
            * `2` – VALIDATED
            * `3` – REFUSED
            * `4` – INVESTIGATING (deprecated)
            * `5` – CLOSED (deprecated)
            * `6` – REVIEW_OPEN
            * `7` – REVIEW_PENDING
          enum:
          - 0
          - 1
          - 2
          - 3
          - 6
          - 7
          type: integer
        kycReviewComment:
          description: |
            A comment set by Treezor upon [KYC review](/guide/user-verification/introduction.html). It concatenates information for each KYC Review update, with the date, the `kycReview` and `kycLevel` values, and the comment from Treezor.
          type: string
        isFreezed:
          deprecated: true
          description: deprecated
          type: integer
        isFrozen:
          type: integer
        language:
          type: string
        optInMailing:
          type: integer
        sepaCreditorIdentifier:
          description: |
            The 13-character long [SEPA Creditor Identifier](/guide/overview/glossary.html#sepa-creditor-identifier-sci) of the User.
          readOnly: true
          type: string
        taxNumber:
          deprecated: true
          type: string
        taxResidence:
          deprecated: true
          type: string
        position:
          type: string
        personalAssets:
          deprecated: true
          type: string
        activityOutsideEu:
          description: "Whether the entity and its business units, subsidiaries, and\
            \ joint ventures have a commercial activity outside of the European Union."
          type: integer
        economicSanctions:
          description: "Whether the entity, its subsidiaries, entities, employees,\
            \ directors, beneficial owners, or joint ventures are subject to Economic\
            \ Sanctions."
          type: integer
        residentCountriesSanctions:
          description: "Whether the entity, its subsidiaries, or joint ventures, located\
            \ within or operating from any countries or territories are subject to\
            \ Comprehensive Sanctions."
          type: integer
        involvedSanctions:
          description: |
            Whether the entity, its subsidiaries, or joint ventures, are engaged in transactions, investments, business, or other dealings that directly or indirectly involve or benefit:
            * Any countries or territories subject to Comprehensive Sanctions, or
            * Any person or entity which is the target of any Sanctions (“Sanctioned Targets”).
          type: integer
        entitySanctionsQuestionnaire:
          description: |
            Defines the scope to which the `activityOutsideEu` field applies.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        sanctionsQuestionnaireDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        timezone:
          type: string
        occupationType:
          deprecated: true
          description: Deprecated. Use `occupationCategory` instead.
          enum:
          - self_employed
          - public_sector_employees
          - private_sector_employees
          - retired_people_and_students
          - without_any_professional_activity
          type: string
        sourceOfFunds:
          description: The source of funds for opening an account for a company or
            self-employed person
          enum:
          - donation
          - inheritance
          - loan
          - lottery
          - pension
          - proceeds_from_investment
          - proceeds_from_sale
          - salary
          - savings
          type: string
        legalSectorType:
          description: "Qualify the type of data in the `legalSector` field \n  *\
            \ If it is set to NACE the legalSector needs to be in a NACE format (4\
            \ digits). \n  * If it is set to NAF (or not set at all) the legalSector\
            \ needs to be in a NAF format (4 digits followed by a capital letter).\n"
          enum:
          - NAF
          - NACE
          type: string
        isOnStockExchange:
          description: |
            The user is a corporation and is quoted on an organized stock exchange.
              * `0` – No
              * `1` – Yes
          type: integer
        codeStatus:
          type: string
        informationStatus:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        walletCount:
          type: integer
        payinCount:
          type: integer
        totalRows:
          type: integer
        occupationCategory:
          description: |
            Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          nullable: true
          type: integer
        personalAssetsRange:
          description: |
            The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values.
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
        monthlyIncomeRange:
          description: |
            Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          nullable: true
          type: integer
      type: object
    VirtualIbanObject_virtualibans_inner:
      example:
        walletId: 6
        validFrom: validFrom
        updatedDate: updatedDate
        numberOfTransactions: 5
        reference: reference
        createdDate: createdDate
        cumulatedAmount: cumulatedAmount
        virtualibanId: 0
        iban: iban
        maxUsage: 5
        typeId: 1
        tag: tag
        maxAmount: maxAmount
        validTo: validTo
      properties:
        virtualibanId:
          type: integer
        walletId:
          type: integer
        typeId:
          type: integer
        tag:
          type: string
        reference:
          type: string
        validFrom:
          type: string
        validTo:
          type: string
        maxUsage:
          type: integer
        maxAmount:
          format: float
          type: string
        iban:
          type: string
        createdDate:
          format: YYYY-MM-DD HH:MM:SS
          type: string
        numberOfTransactions:
          type: integer
        cumulatedAmount:
          format: float
          type: string
        updatedDate:
          format: YYYY-MM-DD HH:MM:SS
          type: string
      type: object
    CardPayment_mcc:
      example:
        code: 1
      properties:
        code:
          format: int64
          type: integer
      type: object
    CardPayment_mid:
      example:
        country: country
        address: address
        city: city
        name: name
        value: value
      properties:
        value:
          type: string
        name:
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
      type: object
    CardPayment_localAmount:
      example:
        amount: 12000
        currency: "978"
      properties:
        amount:
          description: Amount in cent
          example: 12000
          format: int64
          type: integer
        currency:
          description: Currency in ISO-4217
          example: "978"
          type: string
      type: object
    CardPayment_authorisationResponseCode:
      example:
        action: action
        description: description
        value: 5
      properties:
        action:
          type: string
        description:
          type: string
        value:
          nullable: true
          type: integer
      type: object
    PayinObject_payins_inner:
      example:
        creditorIban: creditorIban
        paymentExceptionUrl: paymentExceptionUrl
        creditorName: creditorName
        createdIp: createdIp
        creditorBIC: creditorBIC
        informationStatus: informationStatus
        paymentPostDataUrl: paymentPostDataUrl
        virtualIbanId: 7
        paymentPostUrl: paymentPostUrl
        ibanFullname: ibanFullname
        walletId: 6
        ibanBic: ibanBic
        cartId: 1
        payinStatus: PENDING
        totalRows: 5
        codeStatus: 0
        virtualIbanReference: virtualIbanReference
        payinTag: payinTag
        userFirstname: userFirstname
        userLastname: userLastname
        subtotalItems: subtotalItems
        ibanTxEndToEndId: ibanTxEndToEndId
        creditorCountry: creditorCountry
        subtotalTax: subtotalTax
        payinId: payinId
        paymentCanceledUrl: paymentCanceledUrl
        paymentMethodId: 5
        paymentWaitingUrl: paymentWaitingUrl
        mandateId: 2
        walletAlias: walletAlias
        currency: currency
        distributorFee: distributorFee
        walletEventName: walletEventName
        forwardUrl: forwardUrl
        creditorAddressLine: creditorAddressLine
        messageToUser: messageToUser
        ibanTxId: ibanTxId
        refundAmount: refundAmount
        amount: amount
        paymentAcceptedUrl: paymentAcceptedUrl
        userId: userId
        paymentLanguage: paymentLanguage
        DbtrIBAN: DbtrIBAN
        paymentRefusedUrl: paymentRefusedUrl
        createdDate: createdDate
        payinDate: payinDate
        paymentHtml: paymentHtml
        subtotalServices: subtotalServices
        ibanId: ibanId
      properties:
        payinId:
          description: |
            The unique identifier of the payin. In the specific case of the SCTR Inst payin, this value is a uuid.
          type: string
        payinTag:
          type: string
        payinStatus:
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        codeStatus:
          type: integer
        informationStatus:
          type: string
        walletId:
          type: integer
        userId:
          type: string
        cartId:
          type: integer
        walletEventName:
          type: string
        walletAlias:
          type: string
        userFirstname:
          type: string
        userLastname:
          type: string
        messageToUser:
          type: string
        paymentMethodId:
          type: integer
        subtotalItems:
          type: string
        subtotalServices:
          type: string
        subtotalTax:
          type: string
        amount:
          type: string
        currency:
          type: string
        distributorFee:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        createdIp:
          type: string
        paymentHtml:
          type: string
        paymentLanguage:
          type: string
        paymentPostUrl:
          type: string
        paymentPostDataUrl:
          type: string
        paymentAcceptedUrl:
          type: string
        paymentWaitingUrl:
          type: string
        paymentRefusedUrl:
          type: string
        paymentCanceledUrl:
          type: string
        paymentExceptionUrl:
          type: string
        ibanFullname:
          type: string
        DbtrIBAN:
          type: string
        ibanId:
          type: string
        ibanBic:
          type: string
        ibanTxEndToEndId:
          type: string
        ibanTxId:
          type: string
        refundAmount:
          type: string
        totalRows:
          type: integer
        forwardUrl:
          type: string
        payinDate:
          description: Date YYYY-MM-DD
          type: string
        mandateId:
          type: integer
        creditorName:
          type: string
        creditorAddressLine:
          type: string
        creditorCountry:
          type: string
        creditorIban:
          type: string
        creditorBIC:
          type: string
        virtualIbanId:
          type: integer
        virtualIbanReference:
          type: string
      type: object
    WalletObject_wallets_inner:
      example:
        eventMessage: eventMessage
        eventPayinEndDate: eventPayinEndDate
        eventPayinStartDate: eventPayinStartDate
        userLastname: userLastname
        payinCount: 9
        transferCount: 2
        jointUserId: 5
        informationStatus: informationStatus
        eventAlias: eventAlias
        eventName: eventName
        solde: 4
        currency: currency
        tariffId: 2
        urlImage: urlImage
        contractSigned: 7
        walletId: 0
        payoutCount: 3
        totalRows: 1
        userId: 5
        codeStatus: 1
        walletTag: walletTag
        createdDate: createdDate
        iban: iban
        modifiedDate: modifiedDate
        walletStatus: PENDING
        userFirstname: userFirstname
        walletTypeId: 6
        bic: bic
        authorizedBalance: 7
        eventDate: eventDate
      properties:
        walletId:
          description: The unique identifier of the Wallet.
          type: integer
        walletTypeId:
          description: |
            The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation.
          enum:
          - 9
          - 10
          - 14
          - 15
          type: integer
        walletStatus:
          description: The status of the Wallet.
          enum:
          - PENDING
          - CANCELED
          - VALIDATED
          type: string
        codeStatus:
          description: |
            See [Wallet status](/guide/wallets/introduction.html#wallet-status).
          type: integer
        informationStatus:
          type: string
        walletTag:
          description: Custom attribute to use as you see fit.
          type: string
        userId:
          description: The unique identifier of the User owning the Wallet.
          type: integer
        userLastname:
          type: string
        userFirstname:
          type: string
        jointUserId:
          type: integer
        tariffId:
          type: integer
        eventName:
          type: string
        eventAlias:
          deprecated: true
          type: string
        eventDate:
          deprecated: true
          description: Date YYYY-MM-DD
          type: string
        eventMessage:
          type: string
        eventPayinStartDate:
          deprecated: true
          description: Date YYYY-MM-DD
          type: string
        eventPayinEndDate:
          deprecated: true
          description: Date YYYY-MM-DD
          type: string
        contractSigned:
          deprecated: true
          type: integer
        bic:
          type: string
        iban:
          type: string
        urlImage:
          deprecated: true
          type: string
        currency:
          type: string
        createdDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        modifiedDate:
          description: Date YYYY-MM-DD HH:MM:SS
          type: string
        payinCount:
          type: integer
        payoutCount:
          type: integer
        transferCount:
          type: integer
        solde:
          format: decimal
          type: integer
        authorizedBalance:
          format: decimal
          type: integer
        totalRows:
          type: integer
      type: object
  securitySchemes:
    jwt:
      description: This API is secured by a JWT provided by Treezor with OAuth2 client
        credentials flow.
      flows:
        clientCredentials:
          refreshUrl: https://connect.sandbox.treezor.co/oauth/token
          scopes:
            read_only: "Gives access to all endpoints (expect keys, legal, admin)\
              \ in GET (End user oriented)"
            read_write: "Gives access to all endpoints (expect keys, legal, admin)\
              \ in PUT|POST|DELETE (End user oriented)"
            read_all: Gives access to all endpoints in GET (Use carefully)
            admin: Gives access to API configuration related endpoints
            legal: "Gives access to KYC, users and users documents related endpoints"
            keys: Gives access to encryption keys management related endpoints
            support_user_management: Gives access to support users related endpoints
          tokenUrl: https://connect.sandbox.treezor.co/oauth/token
      type: oauth2

