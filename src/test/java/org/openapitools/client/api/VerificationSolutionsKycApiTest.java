/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetCardsDefaultResponse;
import org.openapitools.client.model.PostKycliveness201Response;
import org.openapitools.client.model.PostKyclivenessRequest;
import org.openapitools.client.model.PostKycqes201Response;
import org.openapitools.client.model.PostKycqesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerificationSolutionsKycApi
 */
@Disabled
public class VerificationSolutionsKycApiTest {

    private final VerificationSolutionsKycApi api = new VerificationSolutionsKycApi();

    /**
     * Initiate Video Conference Verification
     *
     * Start the [Video conference verification](/guide/user-verification/videoconf.html) process. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postKycVconfTest() throws ApiException {
        Integer userId = null;
        PostKycqesRequest postKycqesRequest = null;
        PostKycqes201Response response = api.postKycVconf(userId, postKycqesRequest);
        // TODO: test validations
    }

    /**
     * Initiate Live Verification
     *
     * Start the Live Verficiation process, whether it is KYC Liveness or Certified Video. You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postKyclivenessTest() throws ApiException {
        Integer userId = null;
        PostKyclivenessRequest postKyclivenessRequest = null;
        PostKycliveness201Response response = api.postKycliveness(userId, postKyclivenessRequest);
        // TODO: test validations
    }

    /**
     * Initiate QES Verification
     *
     * Start the qualified electronic signature (QES) verification.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postKycqesTest() throws ApiException {
        Integer userId = null;
        PostKycqesRequest postKycqesRequest = null;
        PostKycqes201Response response = api.postKycqes(userId, postKycqesRequest);
        // TODO: test validations
    }

    /**
     * Retrieve and Upload Live Verification Result
     *
     * Retrieve the live verification results, and make them available to Treezor. You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putKycLivenessTest() throws ApiException {
        Integer userId = null;
        Object response = api.putKycLiveness(userId);
        // TODO: test validations
    }

}
