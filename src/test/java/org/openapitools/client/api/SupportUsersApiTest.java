/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateSupportUserRequest;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.SupportUserObject;
import org.openapitools.client.model.UpdateSupportUserRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SupportUsersApi
 */
@Disabled
public class SupportUsersApiTest {

    private final SupportUsersApi api = new SupportUsersApi();

    /**
     * Create Support User
     *
     * Create a new Support User.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSupportUserTest() throws ApiException {
        CreateSupportUserRequest createSupportUserRequest = null;
        SupportUserObject response = api.createSupportUser(createSupportUserRequest);
        // TODO: test validations
    }

    /**
     * Delete Support User
     *
     * Delete a Support User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSupportUserTest() throws ApiException {
        String supportUserId = null;
        api.deleteSupportUser(supportUserId);
        // TODO: test validations
    }

    /**
     * Get Support User
     *
     * Retrieve a Support User based on its &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findOneSupportUserByIdTest() throws ApiException {
        String supportUserId = null;
        SupportUserObject response = api.findOneSupportUserById(supportUserId);
        // TODO: test validations
    }

    /**
     * Get all Support Users
     *
     * Retrieve all the Support Users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllSupportUserTest() throws ApiException {
        List<SupportUserObject> response = api.getAllSupportUser();
        // TODO: test validations
    }

    /**
     * Unblock Support User
     *
     * Unblock a Support User. Support Users may be blocked if they failed to login 3 times in a row.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unblockSupportUserTest() throws ApiException {
        String supportUserId = null;
        api.unblockSupportUser(supportUserId);
        // TODO: test validations
    }

    /**
     * Update Support User
     *
     * Modify a Support User information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSupportUserTest() throws ApiException {
        String supportUserId = null;
        UpdateSupportUserRequest updateSupportUserRequest = null;
        SupportUserObject response = api.updateSupportUser(supportUserId, updateSupportUserRequest);
        // TODO: test validations
    }

}
