/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.DeleteMandate200Response;
import org.openapitools.client.model.MandateObject;
import org.openapitools.client.model.PostMandatesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MandatesApi
 */
@Disabled
public class MandatesApiTest {

    private final MandatesApi api = new MandatesApi();

    /**
     * Revoke Mandate
     *
     * Change the Mandate status to &#x60;CANCELED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMandateTest() throws ApiException {
        Integer mandateId = null;
        String origin = null;
        DeleteMandate200Response response = api.deleteMandate(mandateId, origin);
        // TODO: test validations
    }

    /**
     * Get Mandate
     *
     * Retrieve a Mandate based on its &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMandateTest() throws ApiException {
        Long mandateId = null;
        MandateObject response = api.getMandate(mandateId);
        // TODO: test validations
    }

    /**
     * Search Mandates
     *
     * Retrieve Mandates that match search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMandatesTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        Integer mandateId = null;
        Integer userId = null;
        String uniqueMandateReference = null;
        String mandateStatus = null;
        String filter = null;
        MandateObject response = api.getMandates(accessSignature, accessTag, accessUserId, accessUserIp, mandateId, userId, uniqueMandateReference, mandateStatus, filter);
        // TODO: test validations
    }

    /**
     * Create Mandate
     *
     * Create a new mandate. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMandatesTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PostMandatesRequest postMandatesRequest = null;
        MandateObject response = api.postMandates(accessSignature, accessTag, accessUserId, accessUserIp, postMandatesRequest);
        // TODO: test validations
    }

}
