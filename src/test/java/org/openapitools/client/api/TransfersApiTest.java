/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PostTransfersRequest;
import org.openapitools.client.model.TransferObject;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransfersApi
 */
@Disabled
public class TransfersApiTest {

    private final TransfersApi api = new TransfersApi();

    /**
     * Cancel Transfer
     *
     * Change status of the Transfer to &#x60;CANCELED&#x60;. A validated transfer can&#39;t be canceled. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTransferTest() throws ApiException {
        Long transferId = null;
        TransferObject response = api.deleteTransfer(transferId);
        // TODO: test validations
    }

    /**
     * Get Transfer
     *
     * Retrieve a transfer using its &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransferTest() throws ApiException {
        Long transferId = null;
        TransferObject response = api.getTransfer(transferId);
        // TODO: test validations
    }

    /**
     * Search Transfers
     *
     * Retrieve the list of transfers for at least one of those inputs: &#x60;walletId&#x60;, &#x60;beneficiaryWalletId&#x60;, &#x60;userId&#x60;, &#x60;beneficiaryUserId&#x60;, &#x60;transferId&#x60;, &#x60;transferTag&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransfersTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        Integer transferId = null;
        String transferTag = null;
        String transferStatus = null;
        Integer walletId = null;
        Integer beneficiaryWalletId = null;
        Integer userId = null;
        Integer beneficiaryUserId = null;
        OffsetDateTime transferDate = null;
        String amount = null;
        String currency = null;
        Integer transferTypeId = null;
        Integer pageNumber = null;
        Integer pageCount = null;
        String sortBy = null;
        String sortOrder = null;
        OffsetDateTime createdDateFrom = null;
        OffsetDateTime createdDateTo = null;
        OffsetDateTime updatedDateFrom = null;
        OffsetDateTime updatedDateTo = null;
        TransferObject response = api.getTransfers(accessSignature, accessTag, accessUserId, accessUserIp, transferId, transferTag, transferStatus, walletId, beneficiaryWalletId, userId, beneficiaryUserId, transferDate, amount, currency, transferTypeId, pageNumber, pageCount, sortBy, sortOrder, createdDateFrom, createdDateTo, updatedDateFrom, updatedDateTo);
        // TODO: test validations
    }

    /**
     * Create Transfer
     *
     * Create a new Wallet-to-Wallet transfer.  This endpoint requires per-session or per-operation [SCA](/guide/strong-customer-authentication/introduction.html) on if the &#x60;beneficiaryWalletId&#x60; belongs to the current User or not. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postTransfersTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PostTransfersRequest postTransfersRequest = null;
        TransferObject response = api.postTransfers(accessSignature, accessTag, accessUserId, accessUserIp, postTransfersRequest);
        // TODO: test validations
    }

}
