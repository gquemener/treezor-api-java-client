/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BeneficiaryObject;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.PostBeneficiaryRequest;
import org.openapitools.client.model.PutBeneficiaryRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BeneficiariesApi
 */
@Disabled
public class BeneficiariesApiTest {

    private final BeneficiariesApi api = new BeneficiariesApi();

    /**
     * Search Beneficiaries
     *
     * Retrieve Beneficiary bank accounts that match search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBeneficiariesTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        List<String> fields = null;
        String filter = null;
        Integer id = null;
        Integer userId = null;
        String iban = null;
        String bic = null;
        String nickName = null;
        String name = null;
        Integer pageNumber = null;
        Integer pageCount = null;
        String sortBy = null;
        String sortOrder = null;
        BeneficiaryObject response = api.getBeneficiaries(accessSignature, accessTag, accessUserId, accessUserIp, fields, filter, id, userId, iban, bic, nickName, name, pageNumber, pageCount, sortBy, sortOrder);
        // TODO: test validations
    }

    /**
     * Get Beneficiary
     *
     * Retrieve a Beneficiary bank account based on its &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBeneficiaryTest() throws ApiException {
        Long beneficiaryId = null;
        List<String> fields = null;
        BeneficiaryObject response = api.getBeneficiary(beneficiaryId, fields);
        // TODO: test validations
    }

    /**
     * Create Beneficiary
     *
     * Create a new benefeciary bank account.  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBeneficiaryTest() throws ApiException {
        PostBeneficiaryRequest postBeneficiaryRequest = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        BeneficiaryObject response = api.postBeneficiary(postBeneficiaryRequest, accessSignature, accessTag, accessUserId, accessUserIp);
        // TODO: test validations
    }

    /**
     * Update Beneficiary
     *
     * Modify a benefeciary bank account information.  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putBeneficiaryTest() throws ApiException {
        Integer beneficiaryId = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PutBeneficiaryRequest putBeneficiaryRequest = null;
        BeneficiaryObject response = api.putBeneficiary(beneficiaryId, accessSignature, accessTag, accessUserId, accessUserIp, putBeneficiaryRequest);
        // TODO: test validations
    }

}
