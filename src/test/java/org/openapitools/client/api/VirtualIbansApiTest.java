/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PostVirtualIbanRequest;
import org.openapitools.client.model.PutVirtualIbanRequest;
import org.openapitools.client.model.VirtualIbanObject;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualIbansApi
 */
@Disabled
public class VirtualIbansApiTest {

    private final VirtualIbansApi api = new VirtualIbansApi();

    /**
     * Get Virtual IBAN
     *
     * Retrieve a Virtual IBAN based on its &#x60;id&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getvirtualibanTest() throws ApiException {
        Integer virtualIbanId = null;
        VirtualIbanObject response = api.getvirtualiban(virtualIbanId);
        // TODO: test validations
    }

    /**
     * Search Virtual IBANs
     *
     * Retrieve virtual IBANs that match search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getvirtualibansTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        Integer accessUserIp = null;
        Integer virtualIbanId = null;
        Integer walletId = null;
        Integer typeId = null;
        Integer tag = null;
        String reference = null;
        LocalDate validFrom = null;
        LocalDate validTo = null;
        Integer maxUsage = null;
        Float maxAmount = null;
        Integer numberOfTransactions = null;
        Float cumulatedAmount = null;
        OffsetDateTime createdDateFrom = null;
        OffsetDateTime createdDateTo = null;
        OffsetDateTime updatedDateFrom = null;
        OffsetDateTime updatedDateTo = null;
        Integer pageNumber = null;
        Integer pageCount = null;
        String sortBy = null;
        String sortOrder = null;
        VirtualIbanObject response = api.getvirtualibans(accessSignature, accessTag, accessUserId, accessUserIp, virtualIbanId, walletId, typeId, tag, reference, validFrom, validTo, maxUsage, maxAmount, numberOfTransactions, cumulatedAmount, createdDateFrom, createdDateTo, updatedDateFrom, updatedDateTo, pageNumber, pageCount, sortBy, sortOrder);
        // TODO: test validations
    }

    /**
     * Create Virtual IBAN
     *
     * Create a new virtual IBAN associated with a given Wallet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postVirtualIbanTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PostVirtualIbanRequest postVirtualIbanRequest = null;
        VirtualIbanObject response = api.postVirtualIban(accessSignature, accessTag, accessUserId, accessUserIp, postVirtualIbanRequest);
        // TODO: test validations
    }

    /**
     * Update Virtual IBAN
     *
     * Update a Virtual IBAN&#39;s information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putVirtualIbanTest() throws ApiException {
        Integer virtualIbanId = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PutVirtualIbanRequest putVirtualIbanRequest = null;
        VirtualIbanObject response = api.putVirtualIban(virtualIbanId, accessSignature, accessTag, accessUserId, accessUserIp, putVirtualIbanRequest);
        // TODO: test validations
    }

}
