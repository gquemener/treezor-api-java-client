/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.MerchantIdGroupObject;
import org.openapitools.client.model.PostMerchantIdRestrictionGroupRequest;
import org.openapitools.client.model.PutMerchandidrestrictiongroupsDeltaupdateRequest;
import org.openapitools.client.model.PutMerchantIdRestrictionGroupsRequest;
import org.openapitools.client.model.PutMidrestrictiongroupsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantIdRestrictionGroupsApi
 */
@Disabled
public class MerchantIdRestrictionGroupsApiTest {

    private final MerchantIdRestrictionGroupsApi api = new MerchantIdRestrictionGroupsApi();

    /**
     * Cancel MID Restriction Group
     *
     * Cancel a merchant id restriction group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMerchantIdRestrictionGroupsTest() throws ApiException {
        Long id = null;
        List<String> fields = null;
        MerchantIdGroupObject response = api.deleteMerchantIdRestrictionGroups(id, fields);
        // TODO: test validations
    }

    /**
     * Search MID Restriction Groups
     *
     * Retrieve Merchant ID Restriction Groups that match search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMerchantIdRestrictionGroupTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        List<String> fields = null;
        String filter = null;
        Integer pageNumber = null;
        Integer pageCount = null;
        String sortBy = null;
        String sortOrder = null;
        MerchantIdGroupObject response = api.getMerchantIdRestrictionGroup(accessSignature, accessTag, accessUserId, accessUserIp, fields, filter, pageNumber, pageCount, sortBy, sortOrder);
        // TODO: test validations
    }

    /**
     * Create MID Restriction Group
     *
     * Create a new Merchant ID restriction group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMerchantIdRestrictionGroupTest() throws ApiException {
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PostMerchantIdRestrictionGroupRequest postMerchantIdRestrictionGroupRequest = null;
        MerchantIdGroupObject response = api.postMerchantIdRestrictionGroup(accessSignature, accessTag, accessUserId, accessUserIp, postMerchantIdRestrictionGroupRequest);
        // TODO: test validations
    }

    /**
     * Update MID Restriction Group
     *
     * Update the list of Merchant Ids for a MID Restriction Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putMerchandidrestrictiongroupsDeltaupdateTest() throws ApiException {
        Integer id = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PutMerchandidrestrictiongroupsDeltaupdateRequest putMerchandidrestrictiongroupsDeltaupdateRequest = null;
        MerchantIdGroupObject response = api.putMerchandidrestrictiongroupsDeltaupdate(id, accessSignature, accessTag, accessUserId, accessUserIp, putMerchandidrestrictiongroupsDeltaupdateRequest);
        // TODO: test validations
    }

    /**
     * (DEPRECATED) Update MID Restriction Group
     *
     * Deprecated
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putMerchantIdRestrictionGroupsTest() throws ApiException {
        Integer id = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PutMerchantIdRestrictionGroupsRequest putMerchantIdRestrictionGroupsRequest = null;
        MerchantIdGroupObject response = api.putMerchantIdRestrictionGroups(id, accessSignature, accessTag, accessUserId, accessUserIp, putMerchantIdRestrictionGroupsRequest);
        // TODO: test validations
    }

    /**
     * Check the presence of merchants IDs list for a restriction group
     *
     * Check if Merchant IDs list for a restriction group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putMidrestrictiongroupsTest() throws ApiException {
        Integer id = null;
        String accessSignature = null;
        String accessTag = null;
        Integer accessUserId = null;
        String accessUserIp = null;
        PutMidrestrictiongroupsRequest putMidrestrictiongroupsRequest = null;
        MerchantIdGroupObject response = api.putMidrestrictiongroups(id, accessSignature, accessTag, accessUserId, accessUserIp, putMidrestrictiongroupsRequest);
        // TODO: test validations
    }

}
