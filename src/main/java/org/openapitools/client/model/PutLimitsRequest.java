/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PutLimitsRequestRestrictionGroupLimits;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutLimitsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PutLimitsRequest {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_ACCESS_TAG = "accessTag";
  @SerializedName(SERIALIZED_NAME_ACCESS_TAG)
  @javax.annotation.Nullable
  private String accessTag;

  public static final String SERIALIZED_NAME_LIMIT_ATM_YEAR = "limitAtmYear";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_YEAR)
  @javax.annotation.Nullable
  private Integer limitAtmYear;

  public static final String SERIALIZED_NAME_LIMIT_ATM_MONTH = "limitAtmMonth";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_MONTH)
  @javax.annotation.Nullable
  private Integer limitAtmMonth;

  public static final String SERIALIZED_NAME_LIMIT_ATM_WEEK = "limitAtmWeek";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_WEEK)
  @javax.annotation.Nullable
  private Integer limitAtmWeek;

  public static final String SERIALIZED_NAME_LIMIT_ATM_DAY = "limitAtmDay";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_DAY)
  @javax.annotation.Nullable
  private Integer limitAtmDay;

  public static final String SERIALIZED_NAME_LIMIT_ATM_ALL = "limitAtmAll";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_ALL)
  @javax.annotation.Nullable
  private Integer limitAtmAll;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_YEAR = "limitPaymentYear";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_YEAR)
  @javax.annotation.Nullable
  private Integer limitPaymentYear;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_MONTH = "limitPaymentMonth";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_MONTH)
  @javax.annotation.Nullable
  private Integer limitPaymentMonth;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_WEEK = "limitPaymentWeek";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_WEEK)
  @javax.annotation.Nullable
  private Integer limitPaymentWeek;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_DAY = "limitPaymentDay";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_DAY)
  @javax.annotation.Nullable
  private Integer limitPaymentDay;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_ALL = "limitPaymentAll";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_ALL)
  @javax.annotation.Nullable
  private Integer limitPaymentAll;

  public static final String SERIALIZED_NAME_PAYMENT_DAILY_LIMIT = "paymentDailyLimit";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DAILY_LIMIT)
  @javax.annotation.Nullable
  private Float paymentDailyLimit;

  public static final String SERIALIZED_NAME_RESTRICTION_GROUP_LIMITS = "restrictionGroupLimits";
  @SerializedName(SERIALIZED_NAME_RESTRICTION_GROUP_LIMITS)
  @javax.annotation.Nullable
  private PutLimitsRequestRestrictionGroupLimits restrictionGroupLimits;

  public PutLimitsRequest() {
  }

  public PutLimitsRequest userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the cardholder.
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public PutLimitsRequest accessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters. 
   * @return accessTag
   */
  @javax.annotation.Nullable
  public String getAccessTag() {
    return accessTag;
  }

  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }


  public PutLimitsRequest limitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    this.limitAtmYear = limitAtmYear;
    return this;
  }

  /**
   * ATM operations limit for a sliding year. No default value.
   * @return limitAtmYear
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmYear() {
    return limitAtmYear;
  }

  public void setLimitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    this.limitAtmYear = limitAtmYear;
  }


  public PutLimitsRequest limitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    this.limitAtmMonth = limitAtmMonth;
    return this;
  }

  /**
   * ATM operations limit for a sliding month. No default value.
   * @return limitAtmMonth
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmMonth() {
    return limitAtmMonth;
  }

  public void setLimitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    this.limitAtmMonth = limitAtmMonth;
  }


  public PutLimitsRequest limitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    this.limitAtmWeek = limitAtmWeek;
    return this;
  }

  /**
   * ATM operations limit for a sliding week. Default value €2000.
   * @return limitAtmWeek
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmWeek() {
    return limitAtmWeek;
  }

  public void setLimitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    this.limitAtmWeek = limitAtmWeek;
  }


  public PutLimitsRequest limitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    this.limitAtmDay = limitAtmDay;
    return this;
  }

  /**
   * ATM operations limit for a single day. Default value €1000.
   * @return limitAtmDay
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmDay() {
    return limitAtmDay;
  }

  public void setLimitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    this.limitAtmDay = limitAtmDay;
  }


  public PutLimitsRequest limitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    this.limitAtmAll = limitAtmAll;
    return this;
  }

  /**
   * ATM operations limit from beginning. No default value.
   * @return limitAtmAll
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmAll() {
    return limitAtmAll;
  }

  public void setLimitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    this.limitAtmAll = limitAtmAll;
  }


  public PutLimitsRequest limitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    this.limitPaymentYear = limitPaymentYear;
    return this;
  }

  /**
   * POS operations limit for a sliding year. No default value.
   * @return limitPaymentYear
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentYear() {
    return limitPaymentYear;
  }

  public void setLimitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    this.limitPaymentYear = limitPaymentYear;
  }


  public PutLimitsRequest limitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    this.limitPaymentMonth = limitPaymentMonth;
    return this;
  }

  /**
   * POS operations limit for a sliding month. No default value.
   * @return limitPaymentMonth
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentMonth() {
    return limitPaymentMonth;
  }

  public void setLimitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    this.limitPaymentMonth = limitPaymentMonth;
  }


  public PutLimitsRequest limitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    this.limitPaymentWeek = limitPaymentWeek;
    return this;
  }

  /**
   * POS operations limit for a sliding week. Default value €3000.
   * @return limitPaymentWeek
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentWeek() {
    return limitPaymentWeek;
  }

  public void setLimitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    this.limitPaymentWeek = limitPaymentWeek;
  }


  public PutLimitsRequest limitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    this.limitPaymentDay = limitPaymentDay;
    return this;
  }

  /**
   * POS operations limit for a single day. Default value €2000.
   * @return limitPaymentDay
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentDay() {
    return limitPaymentDay;
  }

  public void setLimitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    this.limitPaymentDay = limitPaymentDay;
  }


  public PutLimitsRequest limitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    this.limitPaymentAll = limitPaymentAll;
    return this;
  }

  /**
   * POS operations limit from beginning. No default value.
   * @return limitPaymentAll
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentAll() {
    return limitPaymentAll;
  }

  public void setLimitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    this.limitPaymentAll = limitPaymentAll;
  }


  public PutLimitsRequest paymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    this.paymentDailyLimit = paymentDailyLimit;
    return this;
  }

  /**
   * POS operations limit for a single day including cents. The decimal delimiter must be \&quot;.\&quot;. No default value.
   * @return paymentDailyLimit
   */
  @javax.annotation.Nullable
  public Float getPaymentDailyLimit() {
    return paymentDailyLimit;
  }

  public void setPaymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    this.paymentDailyLimit = paymentDailyLimit;
  }


  public PutLimitsRequest restrictionGroupLimits(@javax.annotation.Nullable PutLimitsRequestRestrictionGroupLimits restrictionGroupLimits) {
    this.restrictionGroupLimits = restrictionGroupLimits;
    return this;
  }

  /**
   * Get restrictionGroupLimits
   * @return restrictionGroupLimits
   */
  @javax.annotation.Nullable
  public PutLimitsRequestRestrictionGroupLimits getRestrictionGroupLimits() {
    return restrictionGroupLimits;
  }

  public void setRestrictionGroupLimits(@javax.annotation.Nullable PutLimitsRequestRestrictionGroupLimits restrictionGroupLimits) {
    this.restrictionGroupLimits = restrictionGroupLimits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutLimitsRequest putLimitsRequest = (PutLimitsRequest) o;
    return Objects.equals(this.userId, putLimitsRequest.userId) &&
        Objects.equals(this.accessTag, putLimitsRequest.accessTag) &&
        Objects.equals(this.limitAtmYear, putLimitsRequest.limitAtmYear) &&
        Objects.equals(this.limitAtmMonth, putLimitsRequest.limitAtmMonth) &&
        Objects.equals(this.limitAtmWeek, putLimitsRequest.limitAtmWeek) &&
        Objects.equals(this.limitAtmDay, putLimitsRequest.limitAtmDay) &&
        Objects.equals(this.limitAtmAll, putLimitsRequest.limitAtmAll) &&
        Objects.equals(this.limitPaymentYear, putLimitsRequest.limitPaymentYear) &&
        Objects.equals(this.limitPaymentMonth, putLimitsRequest.limitPaymentMonth) &&
        Objects.equals(this.limitPaymentWeek, putLimitsRequest.limitPaymentWeek) &&
        Objects.equals(this.limitPaymentDay, putLimitsRequest.limitPaymentDay) &&
        Objects.equals(this.limitPaymentAll, putLimitsRequest.limitPaymentAll) &&
        Objects.equals(this.paymentDailyLimit, putLimitsRequest.paymentDailyLimit) &&
        Objects.equals(this.restrictionGroupLimits, putLimitsRequest.restrictionGroupLimits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, accessTag, limitAtmYear, limitAtmMonth, limitAtmWeek, limitAtmDay, limitAtmAll, limitPaymentYear, limitPaymentMonth, limitPaymentWeek, limitPaymentDay, limitPaymentAll, paymentDailyLimit, restrictionGroupLimits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutLimitsRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    limitAtmYear: ").append(toIndentedString(limitAtmYear)).append("\n");
    sb.append("    limitAtmMonth: ").append(toIndentedString(limitAtmMonth)).append("\n");
    sb.append("    limitAtmWeek: ").append(toIndentedString(limitAtmWeek)).append("\n");
    sb.append("    limitAtmDay: ").append(toIndentedString(limitAtmDay)).append("\n");
    sb.append("    limitAtmAll: ").append(toIndentedString(limitAtmAll)).append("\n");
    sb.append("    limitPaymentYear: ").append(toIndentedString(limitPaymentYear)).append("\n");
    sb.append("    limitPaymentMonth: ").append(toIndentedString(limitPaymentMonth)).append("\n");
    sb.append("    limitPaymentWeek: ").append(toIndentedString(limitPaymentWeek)).append("\n");
    sb.append("    limitPaymentDay: ").append(toIndentedString(limitPaymentDay)).append("\n");
    sb.append("    limitPaymentAll: ").append(toIndentedString(limitPaymentAll)).append("\n");
    sb.append("    paymentDailyLimit: ").append(toIndentedString(paymentDailyLimit)).append("\n");
    sb.append("    restrictionGroupLimits: ").append(toIndentedString(restrictionGroupLimits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("accessTag");
    openapiFields.add("limitAtmYear");
    openapiFields.add("limitAtmMonth");
    openapiFields.add("limitAtmWeek");
    openapiFields.add("limitAtmDay");
    openapiFields.add("limitAtmAll");
    openapiFields.add("limitPaymentYear");
    openapiFields.add("limitPaymentMonth");
    openapiFields.add("limitPaymentWeek");
    openapiFields.add("limitPaymentDay");
    openapiFields.add("limitPaymentAll");
    openapiFields.add("paymentDailyLimit");
    openapiFields.add("restrictionGroupLimits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutLimitsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutLimitsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutLimitsRequest is not found in the empty JSON string", PutLimitsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutLimitsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutLimitsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessTag") != null && !jsonObj.get("accessTag").isJsonNull()) && !jsonObj.get("accessTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessTag").toString()));
      }
      // validate the optional field `restrictionGroupLimits`
      if (jsonObj.get("restrictionGroupLimits") != null && !jsonObj.get("restrictionGroupLimits").isJsonNull()) {
        PutLimitsRequestRestrictionGroupLimits.validateJsonElement(jsonObj.get("restrictionGroupLimits"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutLimitsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutLimitsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutLimitsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutLimitsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutLimitsRequest>() {
           @Override
           public void write(JsonWriter out, PutLimitsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutLimitsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutLimitsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutLimitsRequest
   * @throws IOException if the JSON string is invalid with respect to PutLimitsRequest
   */
  public static PutLimitsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutLimitsRequest.class);
  }

  /**
   * Convert an instance of PutLimitsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

