/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CaptureResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class CaptureResponse {
  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  @javax.annotation.Nullable
  private String operation;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  @javax.annotation.Nullable
  private String profile;

  public static final String SERIALIZED_NAME_AUTHORIZATION_CODE = "authorizationCode";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_CODE)
  @javax.annotation.Nullable
  private String authorizationCode;

  public static final String SERIALIZED_NAME_TRANSACTION_REFERENCE = "transactionReference";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REFERENCE)
  @javax.annotation.Nullable
  private String transactionReference;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  @javax.annotation.Nullable
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "dateUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  @javax.annotation.Nullable
  private String dateUpdated;

  public static final String SERIALIZED_NAME_DATE_AUTHORIZED = "dateAuthorized";
  @SerializedName(SERIALIZED_NAME_DATE_AUTHORIZED)
  @javax.annotation.Nullable
  private String dateAuthorized;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  @javax.annotation.Nullable
  private String message;

  public static final String SERIALIZED_NAME_AUTHORIZED_AMOUNT = "authorizedAmount";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_AMOUNT)
  @javax.annotation.Nullable
  private String authorizedAmount;

  public static final String SERIALIZED_NAME_CAPTURED_AMOUNT = "capturedAmount";
  @SerializedName(SERIALIZED_NAME_CAPTURED_AMOUNT)
  @javax.annotation.Nullable
  private String capturedAmount;

  public static final String SERIALIZED_NAME_REFUNDED_AMOUNT = "refundedAmount";
  @SerializedName(SERIALIZED_NAME_REFUNDED_AMOUNT)
  @javax.annotation.Nullable
  private String refundedAmount;

  public static final String SERIALIZED_NAME_DECIMALS = "decimals";
  @SerializedName(SERIALIZED_NAME_DECIMALS)
  @javax.annotation.Nullable
  private String decimals;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public CaptureResponse() {
  }

  public CaptureResponse operation(@javax.annotation.Nullable String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * This value will always be &#39;capture&#39;.
   * @return operation
   */
  @javax.annotation.Nullable
  public String getOperation() {
    return operation;
  }

  public void setOperation(@javax.annotation.Nullable String operation) {
    this.operation = operation;
  }


  public CaptureResponse profile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
    return this;
  }

  /**
   * HiPay merchant identifier (mid), also known as profile
   * @return profile
   */
  @javax.annotation.Nullable
  public String getProfile() {
    return profile;
  }

  public void setProfile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
  }


  public CaptureResponse authorizationCode(@javax.annotation.Nullable String authorizationCode) {
    this.authorizationCode = authorizationCode;
    return this;
  }

  /**
   * HiPay authorization code linked to the payin
   * @return authorizationCode
   */
  @javax.annotation.Nullable
  public String getAuthorizationCode() {
    return authorizationCode;
  }

  public void setAuthorizationCode(@javax.annotation.Nullable String authorizationCode) {
    this.authorizationCode = authorizationCode;
  }


  public CaptureResponse transactionReference(@javax.annotation.Nullable String transactionReference) {
    this.transactionReference = transactionReference;
    return this;
  }

  /**
   * The reference of the transaction
   * @return transactionReference
   */
  @javax.annotation.Nullable
  public String getTransactionReference() {
    return transactionReference;
  }

  public void setTransactionReference(@javax.annotation.Nullable String transactionReference) {
    this.transactionReference = transactionReference;
  }


  public CaptureResponse dateCreated(@javax.annotation.Nullable String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The creation date of the payin
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(@javax.annotation.Nullable String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public CaptureResponse dateUpdated(@javax.annotation.Nullable String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The last update date of the payin
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(@javax.annotation.Nullable String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public CaptureResponse dateAuthorized(@javax.annotation.Nullable String dateAuthorized) {
    this.dateAuthorized = dateAuthorized;
    return this;
  }

  /**
   * The authorized date of the payin
   * @return dateAuthorized
   */
  @javax.annotation.Nullable
  public String getDateAuthorized() {
    return dateAuthorized;
  }

  public void setDateAuthorized(@javax.annotation.Nullable String dateAuthorized) {
    this.dateAuthorized = dateAuthorized;
  }


  public CaptureResponse status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Transaction status returned by HiPay
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public CaptureResponse message(@javax.annotation.Nullable String message) {
    this.message = message;
    return this;
  }

  /**
   * Message returned by HiPay
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  public CaptureResponse authorizedAmount(@javax.annotation.Nullable String authorizedAmount) {
    this.authorizedAmount = authorizedAmount;
    return this;
  }

  /**
   * Authorized amount
   * @return authorizedAmount
   */
  @javax.annotation.Nullable
  public String getAuthorizedAmount() {
    return authorizedAmount;
  }

  public void setAuthorizedAmount(@javax.annotation.Nullable String authorizedAmount) {
    this.authorizedAmount = authorizedAmount;
  }


  public CaptureResponse capturedAmount(@javax.annotation.Nullable String capturedAmount) {
    this.capturedAmount = capturedAmount;
    return this;
  }

  /**
   * Captured amount
   * @return capturedAmount
   */
  @javax.annotation.Nullable
  public String getCapturedAmount() {
    return capturedAmount;
  }

  public void setCapturedAmount(@javax.annotation.Nullable String capturedAmount) {
    this.capturedAmount = capturedAmount;
  }


  public CaptureResponse refundedAmount(@javax.annotation.Nullable String refundedAmount) {
    this.refundedAmount = refundedAmount;
    return this;
  }

  /**
   * Refunded amount
   * @return refundedAmount
   */
  @javax.annotation.Nullable
  public String getRefundedAmount() {
    return refundedAmount;
  }

  public void setRefundedAmount(@javax.annotation.Nullable String refundedAmount) {
    this.refundedAmount = refundedAmount;
  }


  public CaptureResponse decimals(@javax.annotation.Nullable String decimals) {
    this.decimals = decimals;
    return this;
  }

  /**
   * The number of digits after the decimal point of the transaction amount 
   * @return decimals
   */
  @javax.annotation.Nullable
  public String getDecimals() {
    return decimals;
  }

  public void setDecimals(@javax.annotation.Nullable String decimals) {
    this.decimals = decimals;
  }


  public CaptureResponse currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Base currency for this payin  This three-character currency code must comply with ISO-4217
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaptureResponse captureResponse = (CaptureResponse) o;
    return Objects.equals(this.operation, captureResponse.operation) &&
        Objects.equals(this.profile, captureResponse.profile) &&
        Objects.equals(this.authorizationCode, captureResponse.authorizationCode) &&
        Objects.equals(this.transactionReference, captureResponse.transactionReference) &&
        Objects.equals(this.dateCreated, captureResponse.dateCreated) &&
        Objects.equals(this.dateUpdated, captureResponse.dateUpdated) &&
        Objects.equals(this.dateAuthorized, captureResponse.dateAuthorized) &&
        Objects.equals(this.status, captureResponse.status) &&
        Objects.equals(this.message, captureResponse.message) &&
        Objects.equals(this.authorizedAmount, captureResponse.authorizedAmount) &&
        Objects.equals(this.capturedAmount, captureResponse.capturedAmount) &&
        Objects.equals(this.refundedAmount, captureResponse.refundedAmount) &&
        Objects.equals(this.decimals, captureResponse.decimals) &&
        Objects.equals(this.currency, captureResponse.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, profile, authorizationCode, transactionReference, dateCreated, dateUpdated, dateAuthorized, status, message, authorizedAmount, capturedAmount, refundedAmount, decimals, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaptureResponse {\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    authorizationCode: ").append(toIndentedString(authorizationCode)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    dateAuthorized: ").append(toIndentedString(dateAuthorized)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    authorizedAmount: ").append(toIndentedString(authorizedAmount)).append("\n");
    sb.append("    capturedAmount: ").append(toIndentedString(capturedAmount)).append("\n");
    sb.append("    refundedAmount: ").append(toIndentedString(refundedAmount)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("operation");
    openapiFields.add("profile");
    openapiFields.add("authorizationCode");
    openapiFields.add("transactionReference");
    openapiFields.add("dateCreated");
    openapiFields.add("dateUpdated");
    openapiFields.add("dateAuthorized");
    openapiFields.add("status");
    openapiFields.add("message");
    openapiFields.add("authorizedAmount");
    openapiFields.add("capturedAmount");
    openapiFields.add("refundedAmount");
    openapiFields.add("decimals");
    openapiFields.add("currency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CaptureResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CaptureResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaptureResponse is not found in the empty JSON string", CaptureResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CaptureResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaptureResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) && !jsonObj.get("operation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operation").toString()));
      }
      if ((jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) && !jsonObj.get("profile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile").toString()));
      }
      if ((jsonObj.get("authorizationCode") != null && !jsonObj.get("authorizationCode").isJsonNull()) && !jsonObj.get("authorizationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizationCode").toString()));
      }
      if ((jsonObj.get("transactionReference") != null && !jsonObj.get("transactionReference").isJsonNull()) && !jsonObj.get("transactionReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionReference").toString()));
      }
      if ((jsonObj.get("dateCreated") != null && !jsonObj.get("dateCreated").isJsonNull()) && !jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      if ((jsonObj.get("dateUpdated") != null && !jsonObj.get("dateUpdated").isJsonNull()) && !jsonObj.get("dateUpdated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateUpdated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateUpdated").toString()));
      }
      if ((jsonObj.get("dateAuthorized") != null && !jsonObj.get("dateAuthorized").isJsonNull()) && !jsonObj.get("dateAuthorized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateAuthorized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateAuthorized").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("authorizedAmount") != null && !jsonObj.get("authorizedAmount").isJsonNull()) && !jsonObj.get("authorizedAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedAmount").toString()));
      }
      if ((jsonObj.get("capturedAmount") != null && !jsonObj.get("capturedAmount").isJsonNull()) && !jsonObj.get("capturedAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `capturedAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("capturedAmount").toString()));
      }
      if ((jsonObj.get("refundedAmount") != null && !jsonObj.get("refundedAmount").isJsonNull()) && !jsonObj.get("refundedAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundedAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundedAmount").toString()));
      }
      if ((jsonObj.get("decimals") != null && !jsonObj.get("decimals").isJsonNull()) && !jsonObj.get("decimals").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `decimals` to be a primitive type in the JSON string but got `%s`", jsonObj.get("decimals").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaptureResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaptureResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaptureResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaptureResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CaptureResponse>() {
           @Override
           public void write(JsonWriter out, CaptureResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaptureResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CaptureResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CaptureResponse
   * @throws IOException if the JSON string is invalid with respect to CaptureResponse
   */
  public static CaptureResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaptureResponse.class);
  }

  /**
   * Convert an instance of CaptureResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

