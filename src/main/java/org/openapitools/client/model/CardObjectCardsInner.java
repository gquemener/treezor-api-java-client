/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CardObjectCardsInnerRestrictionGroupLimitsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CardObjectCardsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class CardObjectCardsInner {
  public static final String SERIALIZED_NAME_CARD_ID = "cardId";
  @SerializedName(SERIALIZED_NAME_CARD_ID)
  @javax.annotation.Nullable
  private Integer cardId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String SERIALIZED_NAME_WALLET_CARDTRANSACTION_ID = "walletCardtransactionId";
  @SerializedName(SERIALIZED_NAME_WALLET_CARDTRANSACTION_ID)
  @javax.annotation.Nullable
  private Integer walletCardtransactionId;

  public static final String SERIALIZED_NAME_MCC_RESTRICTION_GROUP_ID = "mccRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_MCC_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer mccRestrictionGroupId;

  public static final String SERIALIZED_NAME_MERCHANT_RESTRICTION_GROUP_ID = "merchantRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer merchantRestrictionGroupId;

  public static final String SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUP_ID = "countryRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer countryRestrictionGroupId;

  public static final String SERIALIZED_NAME_PUBLIC_TOKEN = "publicToken";
  @SerializedName(SERIALIZED_NAME_PUBLIC_TOKEN)
  @javax.annotation.Nullable
  private String publicToken;

  public static final String SERIALIZED_NAME_CARD_TAG = "cardTag";
  @SerializedName(SERIALIZED_NAME_CARD_TAG)
  @javax.annotation.Nullable
  private String cardTag;

  /**
   * Gets or Sets statusCode
   */
  @JsonAdapter(StatusCodeEnum.Adapter.class)
  public enum StatusCodeEnum {
    UNLOCK("UNLOCK"),
    
    LOCK("LOCK"),
    
    LOST("LOST"),
    
    STOLEN("STOLEN"),
    
    DESTROYED("DESTROYED"),
    
    LOCK_INTERNAL("LOCK_INTERNAL"),
    
    EXPIRED("EXPIRED");

    private String value;

    StatusCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusCodeEnum fromValue(String value) {
      for (StatusCodeEnum b : StatusCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusCodeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusCodeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  @javax.annotation.Nullable
  private StatusCodeEnum statusCode;

  public static final String SERIALIZED_NAME_IS_LIVE = "isLive";
  @SerializedName(SERIALIZED_NAME_IS_LIVE)
  @javax.annotation.Nullable
  private Integer isLive;

  public static final String SERIALIZED_NAME_PIN_TRY_EXCEEDS = "pinTryExceeds";
  @SerializedName(SERIALIZED_NAME_PIN_TRY_EXCEEDS)
  @javax.annotation.Nullable
  private Integer pinTryExceeds;

  public static final String SERIALIZED_NAME_MASKED_PAN = "maskedPan";
  @SerializedName(SERIALIZED_NAME_MASKED_PAN)
  @javax.annotation.Nullable
  private String maskedPan;

  public static final String SERIALIZED_NAME_EMBOSSED_NAME = "embossedName";
  @SerializedName(SERIALIZED_NAME_EMBOSSED_NAME)
  @javax.annotation.Nullable
  private String embossedName;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  @javax.annotation.Nullable
  private String expiryDate;

  public static final String SERIALIZED_NAME_C_V_V = "CVV";
  @SerializedName(SERIALIZED_NAME_C_V_V)
  @javax.annotation.Nullable
  private String CVV;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nullable
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  @javax.annotation.Nullable
  private String endDate;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  @javax.annotation.Nullable
  private String countryCode;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  @javax.annotation.Nullable
  private String currencyCode;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  @javax.annotation.Nullable
  private String lang;

  public static final String SERIALIZED_NAME_DELIVERY_TITLE = "deliveryTitle";
  @SerializedName(SERIALIZED_NAME_DELIVERY_TITLE)
  @javax.annotation.Nullable
  private String deliveryTitle;

  public static final String SERIALIZED_NAME_DELIVERY_LASTNAME = "deliveryLastname";
  @SerializedName(SERIALIZED_NAME_DELIVERY_LASTNAME)
  @javax.annotation.Nullable
  private String deliveryLastname;

  public static final String SERIALIZED_NAME_DELIVERY_FIRSTNAME = "deliveryFirstname";
  @SerializedName(SERIALIZED_NAME_DELIVERY_FIRSTNAME)
  @javax.annotation.Nullable
  private String deliveryFirstname;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS1 = "deliveryAddress1";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS1)
  @javax.annotation.Nullable
  private String deliveryAddress1;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS2 = "deliveryAddress2";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS2)
  @javax.annotation.Nullable
  private String deliveryAddress2;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS3 = "deliveryAddress3";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS3)
  @javax.annotation.Nullable
  private String deliveryAddress3;

  public static final String SERIALIZED_NAME_DELIVERY_CITY = "deliveryCity";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CITY)
  @javax.annotation.Nullable
  private String deliveryCity;

  public static final String SERIALIZED_NAME_DELIVERY_POSTCODE = "deliveryPostcode";
  @SerializedName(SERIALIZED_NAME_DELIVERY_POSTCODE)
  @javax.annotation.Nullable
  private String deliveryPostcode;

  public static final String SERIALIZED_NAME_DELIVERY_COUNTRY = "deliveryCountry";
  @SerializedName(SERIALIZED_NAME_DELIVERY_COUNTRY)
  @javax.annotation.Nullable
  private String deliveryCountry;

  public static final String SERIALIZED_NAME_MOBILE_SENT = "mobileSent";
  @SerializedName(SERIALIZED_NAME_MOBILE_SENT)
  @javax.annotation.Nullable
  private String mobileSent;

  public static final String SERIALIZED_NAME_LIMITS_GROUP = "limitsGroup";
  @SerializedName(SERIALIZED_NAME_LIMITS_GROUP)
  @javax.annotation.Nullable
  private String limitsGroup;

  public static final String SERIALIZED_NAME_PERMS_GROUP = "permsGroup";
  @SerializedName(SERIALIZED_NAME_PERMS_GROUP)
  @javax.annotation.Nullable
  private String permsGroup;

  public static final String SERIALIZED_NAME_CARD_DESIGN = "cardDesign";
  @SerializedName(SERIALIZED_NAME_CARD_DESIGN)
  @javax.annotation.Nullable
  private String cardDesign;

  /**
   * Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be: * &#x60;1&#x60; – Physical card converted from a virtual card * &#x60;0&#x60; – Not converted, virtual card only 
   */
  @JsonAdapter(VirtualConvertedEnum.Adapter.class)
  public enum VirtualConvertedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    VirtualConvertedEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VirtualConvertedEnum fromValue(Integer value) {
      for (VirtualConvertedEnum b : VirtualConvertedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VirtualConvertedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VirtualConvertedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VirtualConvertedEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return VirtualConvertedEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      VirtualConvertedEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VIRTUAL_CONVERTED = "virtualConverted";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_CONVERTED)
  @javax.annotation.Nullable
  private VirtualConvertedEnum virtualConverted;

  public static final String SERIALIZED_NAME_PHYSICAL = "physical";
  @SerializedName(SERIALIZED_NAME_PHYSICAL)
  @javax.annotation.Nullable
  private Integer physical;

  public static final String SERIALIZED_NAME_OPTION_ATM = "optionAtm";
  @SerializedName(SERIALIZED_NAME_OPTION_ATM)
  @javax.annotation.Nullable
  private Integer optionAtm;

  public static final String SERIALIZED_NAME_OPTION_FOREIGN = "optionForeign";
  @SerializedName(SERIALIZED_NAME_OPTION_FOREIGN)
  @javax.annotation.Nullable
  private Integer optionForeign;

  public static final String SERIALIZED_NAME_OPTION_ONLINE = "optionOnline";
  @SerializedName(SERIALIZED_NAME_OPTION_ONLINE)
  @javax.annotation.Nullable
  private Integer optionOnline;

  public static final String SERIALIZED_NAME_OPTION_NFC = "optionNfc";
  @SerializedName(SERIALIZED_NAME_OPTION_NFC)
  @javax.annotation.Nullable
  private Integer optionNfc;

  public static final String SERIALIZED_NAME_LIMIT_ATM_YEAR = "limitAtmYear";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_YEAR)
  @javax.annotation.Nullable
  private Integer limitAtmYear;

  public static final String SERIALIZED_NAME_LIMIT_ATM_MONTH = "limitAtmMonth";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_MONTH)
  @javax.annotation.Nullable
  private Integer limitAtmMonth;

  public static final String SERIALIZED_NAME_LIMIT_ATM_WEEK = "limitAtmWeek";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_WEEK)
  @javax.annotation.Nullable
  private Integer limitAtmWeek;

  public static final String SERIALIZED_NAME_LIMIT_ATM_DAY = "limitAtmDay";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_DAY)
  @javax.annotation.Nullable
  private Integer limitAtmDay;

  public static final String SERIALIZED_NAME_LIMIT_ATM_ALL = "limitAtmAll";
  @SerializedName(SERIALIZED_NAME_LIMIT_ATM_ALL)
  @javax.annotation.Nullable
  private Integer limitAtmAll;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_YEAR = "limitPaymentYear";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_YEAR)
  @javax.annotation.Nullable
  private Integer limitPaymentYear;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_MONTH = "limitPaymentMonth";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_MONTH)
  @javax.annotation.Nullable
  private Integer limitPaymentMonth;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_WEEK = "limitPaymentWeek";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_WEEK)
  @javax.annotation.Nullable
  private Integer limitPaymentWeek;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_DAY = "limitPaymentDay";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_DAY)
  @javax.annotation.Nullable
  private Integer limitPaymentDay;

  public static final String SERIALIZED_NAME_LIMIT_PAYMENT_ALL = "limitPaymentAll";
  @SerializedName(SERIALIZED_NAME_LIMIT_PAYMENT_ALL)
  @javax.annotation.Nullable
  private Integer limitPaymentAll;

  public static final String SERIALIZED_NAME_PAYMENT_DAILY_LIMIT = "paymentDailyLimit";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DAILY_LIMIT)
  @javax.annotation.Nullable
  private Float paymentDailyLimit;

  public static final String SERIALIZED_NAME_TOTAL_ATM_YEAR = "totalAtmYear";
  @SerializedName(SERIALIZED_NAME_TOTAL_ATM_YEAR)
  @javax.annotation.Nullable
  private Integer totalAtmYear;

  public static final String SERIALIZED_NAME_TOTAL_ATM_MONTH = "totalAtmMonth";
  @SerializedName(SERIALIZED_NAME_TOTAL_ATM_MONTH)
  @javax.annotation.Nullable
  private Integer totalAtmMonth;

  public static final String SERIALIZED_NAME_TOTAL_ATM_WEEK = "totalAtmWeek";
  @SerializedName(SERIALIZED_NAME_TOTAL_ATM_WEEK)
  @javax.annotation.Nullable
  private Integer totalAtmWeek;

  public static final String SERIALIZED_NAME_TOTAL_ATM_DAY = "totalAtmDay";
  @SerializedName(SERIALIZED_NAME_TOTAL_ATM_DAY)
  @javax.annotation.Nullable
  private Integer totalAtmDay;

  public static final String SERIALIZED_NAME_TOTAL_ATM_ALL = "totalAtmAll";
  @SerializedName(SERIALIZED_NAME_TOTAL_ATM_ALL)
  @javax.annotation.Nullable
  private Integer totalAtmAll;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_YEAR = "totalPaymentYear";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_YEAR)
  @javax.annotation.Nullable
  private Integer totalPaymentYear;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_MONTH = "totalPaymentMonth";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_MONTH)
  @javax.annotation.Nullable
  private Integer totalPaymentMonth;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_WEEK = "totalPaymentWeek";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_WEEK)
  @javax.annotation.Nullable
  private Integer totalPaymentWeek;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_DAY = "totalPaymentDay";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_DAY)
  @javax.annotation.Nullable
  private Integer totalPaymentDay;

  public static final String SERIALIZED_NAME_TOTAL_PAYMENT_ALL = "totalPaymentAll";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYMENT_ALL)
  @javax.annotation.Nullable
  private Integer totalPaymentAll;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  @javax.annotation.Nullable
  private Integer createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  @javax.annotation.Nullable
  private Integer modifiedBy;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  @javax.annotation.Nullable
  private String modifiedDate;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  public static final String SERIALIZED_NAME_DESIGN_CODE = "designCode";
  @SerializedName(SERIALIZED_NAME_DESIGN_CODE)
  @javax.annotation.Nullable
  private String designCode;

  public static final String SERIALIZED_NAME_CARD_LANGUAGES = "cardLanguages";
  @SerializedName(SERIALIZED_NAME_CARD_LANGUAGES)
  @javax.annotation.Nullable
  private String cardLanguages;

  public static final String SERIALIZED_NAME_EVENT_NAME = "eventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  @javax.annotation.Nullable
  private String eventName;

  public static final String SERIALIZED_NAME_EVENT_ALIAS = "eventAlias";
  @SerializedName(SERIALIZED_NAME_EVENT_ALIAS)
  @javax.annotation.Nullable
  private String eventAlias;

  public static final String SERIALIZED_NAME_RESTRICTION_GROUP_LIMITS = "restrictionGroupLimits";
  @SerializedName(SERIALIZED_NAME_RESTRICTION_GROUP_LIMITS)
  @javax.annotation.Nullable
  private List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits = new ArrayList<>();

  public static final String SERIALIZED_NAME_CANCELLATION_NUMBER = "cancellationNumber";
  @SerializedName(SERIALIZED_NAME_CANCELLATION_NUMBER)
  @javax.annotation.Nullable
  private String cancellationNumber;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private String metadata;

  public static final String SERIALIZED_NAME_RENEWAL_DATE = "renewalDate";
  @SerializedName(SERIALIZED_NAME_RENEWAL_DATE)
  @javax.annotation.Nullable
  private String renewalDate;

  /**
   * Indicates how the Card is to be renewed. &#x60;A&#x60; for automatic renewal, &#x60;N&#x60; for non-automatic renewal. 
   */
  @JsonAdapter(RenewalTypeEnum.Adapter.class)
  public enum RenewalTypeEnum {
    A("A"),
    
    N("N");

    private String value;

    RenewalTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RenewalTypeEnum fromValue(String value) {
      for (RenewalTypeEnum b : RenewalTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RenewalTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RenewalTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RenewalTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RenewalTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RenewalTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RENEWAL_TYPE = "renewalType";
  @SerializedName(SERIALIZED_NAME_RENEWAL_TYPE)
  @javax.annotation.Nullable
  private RenewalTypeEnum renewalType;

  public static final String SERIALIZED_NAME_ORIGINAL_CARD_ID = "originalCardId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_CARD_ID)
  @javax.annotation.Nullable
  private Integer originalCardId;

  public static final String SERIALIZED_NAME_LOGO_ID = "logoId";
  @SerializedName(SERIALIZED_NAME_LOGO_ID)
  @javax.annotation.Nullable
  private String logoId;

  public static final String SERIALIZED_NAME_LOGO_BACK_ID = "logoBackId";
  @SerializedName(SERIALIZED_NAME_LOGO_BACK_ID)
  @javax.annotation.Nullable
  private String logoBackId;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  @javax.annotation.Nullable
  private String packageId;

  public static final String SERIALIZED_NAME_CUSTOMIZE_INFO = "customizeInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZE_INFO)
  @javax.annotation.Nullable
  private String customizeInfo;

  public static final String SERIALIZED_NAME_LETTER_CUSTOMIZED_INFO = "letterCustomizedInfo";
  @SerializedName(SERIALIZED_NAME_LETTER_CUSTOMIZED_INFO)
  @javax.annotation.Nullable
  private String letterCustomizedInfo;

  public static final String SERIALIZED_NAME_FREE_CUSTOMIZED_INFO = "freeCustomizedInfo";
  @SerializedName(SERIALIZED_NAME_FREE_CUSTOMIZED_INFO)
  @javax.annotation.Nullable
  private String freeCustomizedInfo;

  public CardObjectCardsInner() {
  }

  public CardObjectCardsInner cardId(@javax.annotation.Nullable Integer cardId) {
    this.cardId = cardId;
    return this;
  }

  /**
   * The unique identifier of the card.
   * @return cardId
   */
  @javax.annotation.Nullable
  public Integer getCardId() {
    return cardId;
  }

  public void setCardId(@javax.annotation.Nullable Integer cardId) {
    this.cardId = cardId;
  }


  public CardObjectCardsInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the cardholder.
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public CardObjectCardsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet the card is attached to.
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public CardObjectCardsInner walletCardtransactionId(@javax.annotation.Nullable Integer walletCardtransactionId) {
    this.walletCardtransactionId = walletCardtransactionId;
    return this;
  }

  /**
   * Get walletCardtransactionId
   * @return walletCardtransactionId
   */
  @javax.annotation.Nullable
  public Integer getWalletCardtransactionId() {
    return walletCardtransactionId;
  }

  public void setWalletCardtransactionId(@javax.annotation.Nullable Integer walletCardtransactionId) {
    this.walletCardtransactionId = walletCardtransactionId;
  }


  public CardObjectCardsInner mccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = mccRestrictionGroupId;
    return this;
  }

  /**
   * The merchant category restriction group (&#x60;mccRestrictionGroup&#x60;) applied to the card. 
   * @return mccRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getMccRestrictionGroupId() {
    return mccRestrictionGroupId;
  }

  public void setMccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = mccRestrictionGroupId;
  }


  public CardObjectCardsInner merchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = merchantRestrictionGroupId;
    return this;
  }

  /**
   * The merchant Id restriction group (&#x60;merchantRestrictionGroupId&#x60;) applied to the card. 
   * @return merchantRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getMerchantRestrictionGroupId() {
    return merchantRestrictionGroupId;
  }

  public void setMerchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = merchantRestrictionGroupId;
  }


  public CardObjectCardsInner countryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = countryRestrictionGroupId;
    return this;
  }

  /**
   * The country restriction group (&#x60;countryRestrictionGroupId&#x60;) applied to the card. 
   * @return countryRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getCountryRestrictionGroupId() {
    return countryRestrictionGroupId;
  }

  public void setCountryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = countryRestrictionGroupId;
  }


  public CardObjectCardsInner publicToken(@javax.annotation.Nullable String publicToken) {
    this.publicToken = publicToken;
    return this;
  }

  /**
   * Get publicToken
   * @return publicToken
   */
  @javax.annotation.Nullable
  public String getPublicToken() {
    return publicToken;
  }

  public void setPublicToken(@javax.annotation.Nullable String publicToken) {
    this.publicToken = publicToken;
  }


  public CardObjectCardsInner cardTag(@javax.annotation.Nullable String cardTag) {
    this.cardTag = cardTag;
    return this;
  }

  /**
   * Get cardTag
   * @return cardTag
   */
  @javax.annotation.Nullable
  public String getCardTag() {
    return cardTag;
  }

  public void setCardTag(@javax.annotation.Nullable String cardTag) {
    this.cardTag = cardTag;
  }


  public CardObjectCardsInner statusCode(@javax.annotation.Nullable StatusCodeEnum statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   */
  @javax.annotation.Nullable
  public StatusCodeEnum getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(@javax.annotation.Nullable StatusCodeEnum statusCode) {
    this.statusCode = statusCode;
  }


  public CardObjectCardsInner isLive(@javax.annotation.Nullable Integer isLive) {
    this.isLive = isLive;
    return this;
  }

  /**
   * Get isLive
   * @return isLive
   */
  @javax.annotation.Nullable
  public Integer getIsLive() {
    return isLive;
  }

  public void setIsLive(@javax.annotation.Nullable Integer isLive) {
    this.isLive = isLive;
  }


  public CardObjectCardsInner pinTryExceeds(@javax.annotation.Nullable Integer pinTryExceeds) {
    this.pinTryExceeds = pinTryExceeds;
    return this;
  }

  /**
   * Get pinTryExceeds
   * @return pinTryExceeds
   */
  @javax.annotation.Nullable
  public Integer getPinTryExceeds() {
    return pinTryExceeds;
  }

  public void setPinTryExceeds(@javax.annotation.Nullable Integer pinTryExceeds) {
    this.pinTryExceeds = pinTryExceeds;
  }


  public CardObjectCardsInner maskedPan(@javax.annotation.Nullable String maskedPan) {
    this.maskedPan = maskedPan;
    return this;
  }

  /**
   * Get maskedPan
   * @return maskedPan
   */
  @javax.annotation.Nullable
  public String getMaskedPan() {
    return maskedPan;
  }

  public void setMaskedPan(@javax.annotation.Nullable String maskedPan) {
    this.maskedPan = maskedPan;
  }


  public CardObjectCardsInner embossedName(@javax.annotation.Nullable String embossedName) {
    this.embossedName = embossedName;
    return this;
  }

  /**
   * Get embossedName
   * @return embossedName
   */
  @javax.annotation.Nullable
  public String getEmbossedName() {
    return embossedName;
  }

  public void setEmbossedName(@javax.annotation.Nullable String embossedName) {
    this.embossedName = embossedName;
  }


  public CardObjectCardsInner expiryDate(@javax.annotation.Nullable String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * The date on which the card expires.  The [&#x60;card.expiryAlert&#x60;](/guide/cards/events.md#structure-of-a-card-expiryalert) webhook is sent a month before the &#x60;expiryDate&#x60; for you to anticipate [Renewal](/guide/cards/renewal.html). Format: YYYY-MM-DD  
   * @return expiryDate
   */
  @javax.annotation.Nullable
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(@javax.annotation.Nullable String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public CardObjectCardsInner CVV(@javax.annotation.Nullable String CVV) {
    this.CVV = CVV;
    return this;
  }

  /**
   * The verification code of the card. This field is to be deprecated and hence may return a value of &#x60;000&#x60;.   You may retrieve the card CVV by using the [&#x60;/v1/cardimages&#x60;](/guide/swagger/introduction.html#/Cards/getCardImage) request or by migrating to the [PCI DSS-compliant services](/guide/cards/pci-dss.html). 
   * @return CVV
   */
  @javax.annotation.Nullable
  public String getCVV() {
    return CVV;
  }

  public void setCVV(@javax.annotation.Nullable String CVV) {
    this.CVV = CVV;
  }


  public CardObjectCardsInner startDate(@javax.annotation.Nullable String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nullable String startDate) {
    this.startDate = startDate;
  }


  public CardObjectCardsInner endDate(@javax.annotation.Nullable String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(@javax.annotation.Nullable String endDate) {
    this.endDate = endDate;
  }


  public CardObjectCardsInner countryCode(@javax.annotation.Nullable String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Inherited from the cardholder&#39;s country.
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(@javax.annotation.Nullable String countryCode) {
    this.countryCode = countryCode;
  }


  public CardObjectCardsInner currencyCode(@javax.annotation.Nullable String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(@javax.annotation.Nullable String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CardObjectCardsInner lang(@javax.annotation.Nullable String lang) {
    this.lang = lang;
    return this;
  }

  /**
   * Inherited from the cardholder&#39;s language.
   * @return lang
   */
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(@javax.annotation.Nullable String lang) {
    this.lang = lang;
  }


  public CardObjectCardsInner deliveryTitle(@javax.annotation.Nullable String deliveryTitle) {
    this.deliveryTitle = deliveryTitle;
    return this;
  }

  /**
   * Get deliveryTitle
   * @return deliveryTitle
   */
  @javax.annotation.Nullable
  public String getDeliveryTitle() {
    return deliveryTitle;
  }

  public void setDeliveryTitle(@javax.annotation.Nullable String deliveryTitle) {
    this.deliveryTitle = deliveryTitle;
  }


  public CardObjectCardsInner deliveryLastname(@javax.annotation.Nullable String deliveryLastname) {
    this.deliveryLastname = deliveryLastname;
    return this;
  }

  /**
   * Get deliveryLastname
   * @return deliveryLastname
   */
  @javax.annotation.Nullable
  public String getDeliveryLastname() {
    return deliveryLastname;
  }

  public void setDeliveryLastname(@javax.annotation.Nullable String deliveryLastname) {
    this.deliveryLastname = deliveryLastname;
  }


  public CardObjectCardsInner deliveryFirstname(@javax.annotation.Nullable String deliveryFirstname) {
    this.deliveryFirstname = deliveryFirstname;
    return this;
  }

  /**
   * Get deliveryFirstname
   * @return deliveryFirstname
   */
  @javax.annotation.Nullable
  public String getDeliveryFirstname() {
    return deliveryFirstname;
  }

  public void setDeliveryFirstname(@javax.annotation.Nullable String deliveryFirstname) {
    this.deliveryFirstname = deliveryFirstname;
  }


  public CardObjectCardsInner deliveryAddress1(@javax.annotation.Nullable String deliveryAddress1) {
    this.deliveryAddress1 = deliveryAddress1;
    return this;
  }

  /**
   * Get deliveryAddress1
   * @return deliveryAddress1
   */
  @javax.annotation.Nullable
  public String getDeliveryAddress1() {
    return deliveryAddress1;
  }

  public void setDeliveryAddress1(@javax.annotation.Nullable String deliveryAddress1) {
    this.deliveryAddress1 = deliveryAddress1;
  }


  public CardObjectCardsInner deliveryAddress2(@javax.annotation.Nullable String deliveryAddress2) {
    this.deliveryAddress2 = deliveryAddress2;
    return this;
  }

  /**
   * Get deliveryAddress2
   * @return deliveryAddress2
   */
  @javax.annotation.Nullable
  public String getDeliveryAddress2() {
    return deliveryAddress2;
  }

  public void setDeliveryAddress2(@javax.annotation.Nullable String deliveryAddress2) {
    this.deliveryAddress2 = deliveryAddress2;
  }


  public CardObjectCardsInner deliveryAddress3(@javax.annotation.Nullable String deliveryAddress3) {
    this.deliveryAddress3 = deliveryAddress3;
    return this;
  }

  /**
   * Get deliveryAddress3
   * @return deliveryAddress3
   */
  @javax.annotation.Nullable
  public String getDeliveryAddress3() {
    return deliveryAddress3;
  }

  public void setDeliveryAddress3(@javax.annotation.Nullable String deliveryAddress3) {
    this.deliveryAddress3 = deliveryAddress3;
  }


  public CardObjectCardsInner deliveryCity(@javax.annotation.Nullable String deliveryCity) {
    this.deliveryCity = deliveryCity;
    return this;
  }

  /**
   * Get deliveryCity
   * @return deliveryCity
   */
  @javax.annotation.Nullable
  public String getDeliveryCity() {
    return deliveryCity;
  }

  public void setDeliveryCity(@javax.annotation.Nullable String deliveryCity) {
    this.deliveryCity = deliveryCity;
  }


  public CardObjectCardsInner deliveryPostcode(@javax.annotation.Nullable String deliveryPostcode) {
    this.deliveryPostcode = deliveryPostcode;
    return this;
  }

  /**
   * Get deliveryPostcode
   * @return deliveryPostcode
   */
  @javax.annotation.Nullable
  public String getDeliveryPostcode() {
    return deliveryPostcode;
  }

  public void setDeliveryPostcode(@javax.annotation.Nullable String deliveryPostcode) {
    this.deliveryPostcode = deliveryPostcode;
  }


  public CardObjectCardsInner deliveryCountry(@javax.annotation.Nullable String deliveryCountry) {
    this.deliveryCountry = deliveryCountry;
    return this;
  }

  /**
   * Get deliveryCountry
   * @return deliveryCountry
   */
  @javax.annotation.Nullable
  public String getDeliveryCountry() {
    return deliveryCountry;
  }

  public void setDeliveryCountry(@javax.annotation.Nullable String deliveryCountry) {
    this.deliveryCountry = deliveryCountry;
  }


  public CardObjectCardsInner mobileSent(@javax.annotation.Nullable String mobileSent) {
    this.mobileSent = mobileSent;
    return this;
  }

  /**
   * Inherited from the cardholder&#39; phone.
   * @return mobileSent
   */
  @javax.annotation.Nullable
  public String getMobileSent() {
    return mobileSent;
  }

  public void setMobileSent(@javax.annotation.Nullable String mobileSent) {
    this.mobileSent = mobileSent;
  }


  public CardObjectCardsInner limitsGroup(@javax.annotation.Nullable String limitsGroup) {
    this.limitsGroup = limitsGroup;
    return this;
  }

  /**
   * Get limitsGroup
   * @return limitsGroup
   */
  @javax.annotation.Nullable
  public String getLimitsGroup() {
    return limitsGroup;
  }

  public void setLimitsGroup(@javax.annotation.Nullable String limitsGroup) {
    this.limitsGroup = limitsGroup;
  }


  public CardObjectCardsInner permsGroup(@javax.annotation.Nullable String permsGroup) {
    this.permsGroup = permsGroup;
    return this;
  }

  /**
   * Get permsGroup
   * @return permsGroup
   */
  @javax.annotation.Nullable
  public String getPermsGroup() {
    return permsGroup;
  }

  public void setPermsGroup(@javax.annotation.Nullable String permsGroup) {
    this.permsGroup = permsGroup;
  }


  public CardObjectCardsInner cardDesign(@javax.annotation.Nullable String cardDesign) {
    this.cardDesign = cardDesign;
    return this;
  }

  /**
   * Get cardDesign
   * @return cardDesign
   */
  @javax.annotation.Nullable
  public String getCardDesign() {
    return cardDesign;
  }

  public void setCardDesign(@javax.annotation.Nullable String cardDesign) {
    this.cardDesign = cardDesign;
  }


  public CardObjectCardsInner virtualConverted(@javax.annotation.Nullable VirtualConvertedEnum virtualConverted) {
    this.virtualConverted = virtualConverted;
    return this;
  }

  /**
   * Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be: * &#x60;1&#x60; – Physical card converted from a virtual card * &#x60;0&#x60; – Not converted, virtual card only 
   * @return virtualConverted
   */
  @javax.annotation.Nullable
  public VirtualConvertedEnum getVirtualConverted() {
    return virtualConverted;
  }

  public void setVirtualConverted(@javax.annotation.Nullable VirtualConvertedEnum virtualConverted) {
    this.virtualConverted = virtualConverted;
  }


  public CardObjectCardsInner physical(@javax.annotation.Nullable Integer physical) {
    this.physical = physical;
    return this;
  }

  /**
   * Get physical
   * @return physical
   */
  @javax.annotation.Nullable
  public Integer getPhysical() {
    return physical;
  }

  public void setPhysical(@javax.annotation.Nullable Integer physical) {
    this.physical = physical;
  }


  public CardObjectCardsInner optionAtm(@javax.annotation.Nullable Integer optionAtm) {
    this.optionAtm = optionAtm;
    return this;
  }

  /**
   * Get optionAtm
   * @return optionAtm
   */
  @javax.annotation.Nullable
  public Integer getOptionAtm() {
    return optionAtm;
  }

  public void setOptionAtm(@javax.annotation.Nullable Integer optionAtm) {
    this.optionAtm = optionAtm;
  }


  public CardObjectCardsInner optionForeign(@javax.annotation.Nullable Integer optionForeign) {
    this.optionForeign = optionForeign;
    return this;
  }

  /**
   * Get optionForeign
   * @return optionForeign
   */
  @javax.annotation.Nullable
  public Integer getOptionForeign() {
    return optionForeign;
  }

  public void setOptionForeign(@javax.annotation.Nullable Integer optionForeign) {
    this.optionForeign = optionForeign;
  }


  public CardObjectCardsInner optionOnline(@javax.annotation.Nullable Integer optionOnline) {
    this.optionOnline = optionOnline;
    return this;
  }

  /**
   * Get optionOnline
   * @return optionOnline
   */
  @javax.annotation.Nullable
  public Integer getOptionOnline() {
    return optionOnline;
  }

  public void setOptionOnline(@javax.annotation.Nullable Integer optionOnline) {
    this.optionOnline = optionOnline;
  }


  public CardObjectCardsInner optionNfc(@javax.annotation.Nullable Integer optionNfc) {
    this.optionNfc = optionNfc;
    return this;
  }

  /**
   * Get optionNfc
   * @return optionNfc
   */
  @javax.annotation.Nullable
  public Integer getOptionNfc() {
    return optionNfc;
  }

  public void setOptionNfc(@javax.annotation.Nullable Integer optionNfc) {
    this.optionNfc = optionNfc;
  }


  public CardObjectCardsInner limitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    this.limitAtmYear = limitAtmYear;
    return this;
  }

  /**
   * Get limitAtmYear
   * @return limitAtmYear
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmYear() {
    return limitAtmYear;
  }

  public void setLimitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    this.limitAtmYear = limitAtmYear;
  }


  public CardObjectCardsInner limitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    this.limitAtmMonth = limitAtmMonth;
    return this;
  }

  /**
   * Get limitAtmMonth
   * @return limitAtmMonth
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmMonth() {
    return limitAtmMonth;
  }

  public void setLimitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    this.limitAtmMonth = limitAtmMonth;
  }


  public CardObjectCardsInner limitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    this.limitAtmWeek = limitAtmWeek;
    return this;
  }

  /**
   * Get limitAtmWeek
   * @return limitAtmWeek
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmWeek() {
    return limitAtmWeek;
  }

  public void setLimitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    this.limitAtmWeek = limitAtmWeek;
  }


  public CardObjectCardsInner limitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    this.limitAtmDay = limitAtmDay;
    return this;
  }

  /**
   * Get limitAtmDay
   * @return limitAtmDay
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmDay() {
    return limitAtmDay;
  }

  public void setLimitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    this.limitAtmDay = limitAtmDay;
  }


  public CardObjectCardsInner limitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    this.limitAtmAll = limitAtmAll;
    return this;
  }

  /**
   * Get limitAtmAll
   * @return limitAtmAll
   */
  @javax.annotation.Nullable
  public Integer getLimitAtmAll() {
    return limitAtmAll;
  }

  public void setLimitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    this.limitAtmAll = limitAtmAll;
  }


  public CardObjectCardsInner limitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    this.limitPaymentYear = limitPaymentYear;
    return this;
  }

  /**
   * Get limitPaymentYear
   * @return limitPaymentYear
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentYear() {
    return limitPaymentYear;
  }

  public void setLimitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    this.limitPaymentYear = limitPaymentYear;
  }


  public CardObjectCardsInner limitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    this.limitPaymentMonth = limitPaymentMonth;
    return this;
  }

  /**
   * Get limitPaymentMonth
   * @return limitPaymentMonth
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentMonth() {
    return limitPaymentMonth;
  }

  public void setLimitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    this.limitPaymentMonth = limitPaymentMonth;
  }


  public CardObjectCardsInner limitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    this.limitPaymentWeek = limitPaymentWeek;
    return this;
  }

  /**
   * Get limitPaymentWeek
   * @return limitPaymentWeek
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentWeek() {
    return limitPaymentWeek;
  }

  public void setLimitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    this.limitPaymentWeek = limitPaymentWeek;
  }


  public CardObjectCardsInner limitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    this.limitPaymentDay = limitPaymentDay;
    return this;
  }

  /**
   * Get limitPaymentDay
   * @return limitPaymentDay
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentDay() {
    return limitPaymentDay;
  }

  public void setLimitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    this.limitPaymentDay = limitPaymentDay;
  }


  public CardObjectCardsInner limitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    this.limitPaymentAll = limitPaymentAll;
    return this;
  }

  /**
   * Get limitPaymentAll
   * @return limitPaymentAll
   */
  @javax.annotation.Nullable
  public Integer getLimitPaymentAll() {
    return limitPaymentAll;
  }

  public void setLimitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    this.limitPaymentAll = limitPaymentAll;
  }


  public CardObjectCardsInner paymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    this.paymentDailyLimit = paymentDailyLimit;
    return this;
  }

  /**
   * Get paymentDailyLimit
   * @return paymentDailyLimit
   */
  @javax.annotation.Nullable
  public Float getPaymentDailyLimit() {
    return paymentDailyLimit;
  }

  public void setPaymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    this.paymentDailyLimit = paymentDailyLimit;
  }


  public CardObjectCardsInner totalAtmYear(@javax.annotation.Nullable Integer totalAtmYear) {
    this.totalAtmYear = totalAtmYear;
    return this;
  }

  /**
   * Get totalAtmYear
   * @return totalAtmYear
   */
  @javax.annotation.Nullable
  public Integer getTotalAtmYear() {
    return totalAtmYear;
  }

  public void setTotalAtmYear(@javax.annotation.Nullable Integer totalAtmYear) {
    this.totalAtmYear = totalAtmYear;
  }


  public CardObjectCardsInner totalAtmMonth(@javax.annotation.Nullable Integer totalAtmMonth) {
    this.totalAtmMonth = totalAtmMonth;
    return this;
  }

  /**
   * Get totalAtmMonth
   * @return totalAtmMonth
   */
  @javax.annotation.Nullable
  public Integer getTotalAtmMonth() {
    return totalAtmMonth;
  }

  public void setTotalAtmMonth(@javax.annotation.Nullable Integer totalAtmMonth) {
    this.totalAtmMonth = totalAtmMonth;
  }


  public CardObjectCardsInner totalAtmWeek(@javax.annotation.Nullable Integer totalAtmWeek) {
    this.totalAtmWeek = totalAtmWeek;
    return this;
  }

  /**
   * Get totalAtmWeek
   * @return totalAtmWeek
   */
  @javax.annotation.Nullable
  public Integer getTotalAtmWeek() {
    return totalAtmWeek;
  }

  public void setTotalAtmWeek(@javax.annotation.Nullable Integer totalAtmWeek) {
    this.totalAtmWeek = totalAtmWeek;
  }


  public CardObjectCardsInner totalAtmDay(@javax.annotation.Nullable Integer totalAtmDay) {
    this.totalAtmDay = totalAtmDay;
    return this;
  }

  /**
   * Get totalAtmDay
   * @return totalAtmDay
   */
  @javax.annotation.Nullable
  public Integer getTotalAtmDay() {
    return totalAtmDay;
  }

  public void setTotalAtmDay(@javax.annotation.Nullable Integer totalAtmDay) {
    this.totalAtmDay = totalAtmDay;
  }


  public CardObjectCardsInner totalAtmAll(@javax.annotation.Nullable Integer totalAtmAll) {
    this.totalAtmAll = totalAtmAll;
    return this;
  }

  /**
   * Get totalAtmAll
   * @return totalAtmAll
   */
  @javax.annotation.Nullable
  public Integer getTotalAtmAll() {
    return totalAtmAll;
  }

  public void setTotalAtmAll(@javax.annotation.Nullable Integer totalAtmAll) {
    this.totalAtmAll = totalAtmAll;
  }


  public CardObjectCardsInner totalPaymentYear(@javax.annotation.Nullable Integer totalPaymentYear) {
    this.totalPaymentYear = totalPaymentYear;
    return this;
  }

  /**
   * Get totalPaymentYear
   * @return totalPaymentYear
   */
  @javax.annotation.Nullable
  public Integer getTotalPaymentYear() {
    return totalPaymentYear;
  }

  public void setTotalPaymentYear(@javax.annotation.Nullable Integer totalPaymentYear) {
    this.totalPaymentYear = totalPaymentYear;
  }


  public CardObjectCardsInner totalPaymentMonth(@javax.annotation.Nullable Integer totalPaymentMonth) {
    this.totalPaymentMonth = totalPaymentMonth;
    return this;
  }

  /**
   * Get totalPaymentMonth
   * @return totalPaymentMonth
   */
  @javax.annotation.Nullable
  public Integer getTotalPaymentMonth() {
    return totalPaymentMonth;
  }

  public void setTotalPaymentMonth(@javax.annotation.Nullable Integer totalPaymentMonth) {
    this.totalPaymentMonth = totalPaymentMonth;
  }


  public CardObjectCardsInner totalPaymentWeek(@javax.annotation.Nullable Integer totalPaymentWeek) {
    this.totalPaymentWeek = totalPaymentWeek;
    return this;
  }

  /**
   * Get totalPaymentWeek
   * @return totalPaymentWeek
   */
  @javax.annotation.Nullable
  public Integer getTotalPaymentWeek() {
    return totalPaymentWeek;
  }

  public void setTotalPaymentWeek(@javax.annotation.Nullable Integer totalPaymentWeek) {
    this.totalPaymentWeek = totalPaymentWeek;
  }


  public CardObjectCardsInner totalPaymentDay(@javax.annotation.Nullable Integer totalPaymentDay) {
    this.totalPaymentDay = totalPaymentDay;
    return this;
  }

  /**
   * Get totalPaymentDay
   * @return totalPaymentDay
   */
  @javax.annotation.Nullable
  public Integer getTotalPaymentDay() {
    return totalPaymentDay;
  }

  public void setTotalPaymentDay(@javax.annotation.Nullable Integer totalPaymentDay) {
    this.totalPaymentDay = totalPaymentDay;
  }


  public CardObjectCardsInner totalPaymentAll(@javax.annotation.Nullable Integer totalPaymentAll) {
    this.totalPaymentAll = totalPaymentAll;
    return this;
  }

  /**
   * Get totalPaymentAll
   * @return totalPaymentAll
   */
  @javax.annotation.Nullable
  public Integer getTotalPaymentAll() {
    return totalPaymentAll;
  }

  public void setTotalPaymentAll(@javax.annotation.Nullable Integer totalPaymentAll) {
    this.totalPaymentAll = totalPaymentAll;
  }


  public CardObjectCardsInner createdBy(@javax.annotation.Nullable Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(@javax.annotation.Nullable Integer createdBy) {
    this.createdBy = createdBy;
  }


  public CardObjectCardsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public CardObjectCardsInner modifiedBy(@javax.annotation.Nullable Integer modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

  /**
   * Get modifiedBy
   * @return modifiedBy
   */
  @javax.annotation.Nullable
  public Integer getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(@javax.annotation.Nullable Integer modifiedBy) {
    this.modifiedBy = modifiedBy;
  }


  public CardObjectCardsInner modifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public CardObjectCardsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }


  public CardObjectCardsInner designCode(@javax.annotation.Nullable String designCode) {
    this.designCode = designCode;
    return this;
  }

  /**
   * Get designCode
   * @return designCode
   */
  @javax.annotation.Nullable
  public String getDesignCode() {
    return designCode;
  }

  public void setDesignCode(@javax.annotation.Nullable String designCode) {
    this.designCode = designCode;
  }


  public CardObjectCardsInner cardLanguages(@javax.annotation.Nullable String cardLanguages) {
    this.cardLanguages = cardLanguages;
    return this;
  }

  /**
   * Get cardLanguages
   * @return cardLanguages
   */
  @javax.annotation.Nullable
  public String getCardLanguages() {
    return cardLanguages;
  }

  public void setCardLanguages(@javax.annotation.Nullable String cardLanguages) {
    this.cardLanguages = cardLanguages;
  }


  public CardObjectCardsInner eventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
    return this;
  }

  /**
   * Name of the Wallet, inherited from the wallet the card is attached to.
   * @return eventName
   */
  @javax.annotation.Nullable
  public String getEventName() {
    return eventName;
  }

  public void setEventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
  }


  public CardObjectCardsInner eventAlias(@javax.annotation.Nullable String eventAlias) {
    this.eventAlias = eventAlias;
    return this;
  }

  /**
   * Description of the Wallet, inherited from the wallet the card is attached to.
   * @return eventAlias
   */
  @javax.annotation.Nullable
  public String getEventAlias() {
    return eventAlias;
  }

  public void setEventAlias(@javax.annotation.Nullable String eventAlias) {
    this.eventAlias = eventAlias;
  }


  public CardObjectCardsInner restrictionGroupLimits(@javax.annotation.Nullable List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits) {
    this.restrictionGroupLimits = restrictionGroupLimits;
    return this;
  }

  public CardObjectCardsInner addRestrictionGroupLimitsItem(CardObjectCardsInnerRestrictionGroupLimitsInner restrictionGroupLimitsItem) {
    if (this.restrictionGroupLimits == null) {
      this.restrictionGroupLimits = new ArrayList<>();
    }
    this.restrictionGroupLimits.add(restrictionGroupLimitsItem);
    return this;
  }

  /**
   * Get restrictionGroupLimits
   * @return restrictionGroupLimits
   */
  @javax.annotation.Nullable
  public List<CardObjectCardsInnerRestrictionGroupLimitsInner> getRestrictionGroupLimits() {
    return restrictionGroupLimits;
  }

  public void setRestrictionGroupLimits(@javax.annotation.Nullable List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits) {
    this.restrictionGroupLimits = restrictionGroupLimits;
  }


  public CardObjectCardsInner cancellationNumber(@javax.annotation.Nullable String cancellationNumber) {
    this.cancellationNumber = cancellationNumber;
    return this;
  }

  /**
   * Number generated when the card &#x60;statusCode&#x60; is set to &#x60;STOLEN&#x60; or &#x60;LOST&#x60;. 
   * @return cancellationNumber
   */
  @javax.annotation.Nullable
  public String getCancellationNumber() {
    return cancellationNumber;
  }

  public void setCancellationNumber(@javax.annotation.Nullable String cancellationNumber) {
    this.cancellationNumber = cancellationNumber;
  }


  public CardObjectCardsInner metadata(@javax.annotation.Nullable String metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable String metadata) {
    this.metadata = metadata;
  }


  public CardObjectCardsInner renewalDate(@javax.annotation.Nullable String renewalDate) {
    this.renewalDate = renewalDate;
    return this;
  }

  /**
   * Date on which the card was renewed (field populated for the original card only). YYYY-MM-DD.
   * @return renewalDate
   */
  @javax.annotation.Nullable
  public String getRenewalDate() {
    return renewalDate;
  }

  public void setRenewalDate(@javax.annotation.Nullable String renewalDate) {
    this.renewalDate = renewalDate;
  }


  public CardObjectCardsInner renewalType(@javax.annotation.Nullable RenewalTypeEnum renewalType) {
    this.renewalType = renewalType;
    return this;
  }

  /**
   * Indicates how the Card is to be renewed. &#x60;A&#x60; for automatic renewal, &#x60;N&#x60; for non-automatic renewal. 
   * @return renewalType
   */
  @javax.annotation.Nullable
  public RenewalTypeEnum getRenewalType() {
    return renewalType;
  }

  public void setRenewalType(@javax.annotation.Nullable RenewalTypeEnum renewalType) {
    this.renewalType = renewalType;
  }


  public CardObjectCardsInner originalCardId(@javax.annotation.Nullable Integer originalCardId) {
    this.originalCardId = originalCardId;
    return this;
  }

  /**
   * The unique identifier of the original Card (field populated for renewed cards only).
   * @return originalCardId
   */
  @javax.annotation.Nullable
  public Integer getOriginalCardId() {
    return originalCardId;
  }

  public void setOriginalCardId(@javax.annotation.Nullable Integer originalCardId) {
    this.originalCardId = originalCardId;
  }


  public CardObjectCardsInner logoId(@javax.annotation.Nullable String logoId) {
    this.logoId = logoId;
    return this;
  }

  /**
   * The file name of the logo for the card. Learn more in the [Logo](/guide/cards/creation.html#logo-logoid) article. 
   * @return logoId
   */
  @javax.annotation.Nullable
  public String getLogoId() {
    return logoId;
  }

  public void setLogoId(@javax.annotation.Nullable String logoId) {
    this.logoId = logoId;
  }


  public CardObjectCardsInner logoBackId(@javax.annotation.Nullable String logoBackId) {
    this.logoBackId = logoBackId;
    return this;
  }

  /**
   * The file name of the logo for the back of the card. Learn more in the [Back Logo](/guide/cards/creation.html#back-logo-logobackid) article. 
   * @return logoBackId
   */
  @javax.annotation.Nullable
  public String getLogoBackId() {
    return logoBackId;
  }

  public void setLogoBackId(@javax.annotation.Nullable String logoBackId) {
    this.logoBackId = logoBackId;
  }


  public CardObjectCardsInner packageId(@javax.annotation.Nullable String packageId) {
    this.packageId = packageId;
    return this;
  }

  /**
   * Packaging reference for card shipping. Max. 8 characters.
   * @return packageId
   */
  @javax.annotation.Nullable
  public String getPackageId() {
    return packageId;
  }

  public void setPackageId(@javax.annotation.Nullable String packageId) {
    this.packageId = packageId;
  }


  public CardObjectCardsInner customizeInfo(@javax.annotation.Nullable String customizeInfo) {
    this.customizeInfo = customizeInfo;
    return this;
  }

  /**
   * Customized text to be displayed on the card.
   * @return customizeInfo
   */
  @javax.annotation.Nullable
  public String getCustomizeInfo() {
    return customizeInfo;
  }

  public void setCustomizeInfo(@javax.annotation.Nullable String customizeInfo) {
    this.customizeInfo = customizeInfo;
  }


  public CardObjectCardsInner letterCustomizedInfo(@javax.annotation.Nullable String letterCustomizedInfo) {
    this.letterCustomizedInfo = letterCustomizedInfo;
    return this;
  }

  /**
   * Customized text for the letter that is joined to the card.
   * @return letterCustomizedInfo
   */
  @javax.annotation.Nullable
  public String getLetterCustomizedInfo() {
    return letterCustomizedInfo;
  }

  public void setLetterCustomizedInfo(@javax.annotation.Nullable String letterCustomizedInfo) {
    this.letterCustomizedInfo = letterCustomizedInfo;
  }


  public CardObjectCardsInner freeCustomizedInfo(@javax.annotation.Nullable String freeCustomizedInfo) {
    this.freeCustomizedInfo = freeCustomizedInfo;
    return this;
  }

  /**
   * More customized text to be displayed on the card.
   * @return freeCustomizedInfo
   */
  @javax.annotation.Nullable
  public String getFreeCustomizedInfo() {
    return freeCustomizedInfo;
  }

  public void setFreeCustomizedInfo(@javax.annotation.Nullable String freeCustomizedInfo) {
    this.freeCustomizedInfo = freeCustomizedInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardObjectCardsInner cardObjectCardsInner = (CardObjectCardsInner) o;
    return Objects.equals(this.cardId, cardObjectCardsInner.cardId) &&
        Objects.equals(this.userId, cardObjectCardsInner.userId) &&
        Objects.equals(this.walletId, cardObjectCardsInner.walletId) &&
        Objects.equals(this.walletCardtransactionId, cardObjectCardsInner.walletCardtransactionId) &&
        Objects.equals(this.mccRestrictionGroupId, cardObjectCardsInner.mccRestrictionGroupId) &&
        Objects.equals(this.merchantRestrictionGroupId, cardObjectCardsInner.merchantRestrictionGroupId) &&
        Objects.equals(this.countryRestrictionGroupId, cardObjectCardsInner.countryRestrictionGroupId) &&
        Objects.equals(this.publicToken, cardObjectCardsInner.publicToken) &&
        Objects.equals(this.cardTag, cardObjectCardsInner.cardTag) &&
        Objects.equals(this.statusCode, cardObjectCardsInner.statusCode) &&
        Objects.equals(this.isLive, cardObjectCardsInner.isLive) &&
        Objects.equals(this.pinTryExceeds, cardObjectCardsInner.pinTryExceeds) &&
        Objects.equals(this.maskedPan, cardObjectCardsInner.maskedPan) &&
        Objects.equals(this.embossedName, cardObjectCardsInner.embossedName) &&
        Objects.equals(this.expiryDate, cardObjectCardsInner.expiryDate) &&
        Objects.equals(this.CVV, cardObjectCardsInner.CVV) &&
        Objects.equals(this.startDate, cardObjectCardsInner.startDate) &&
        Objects.equals(this.endDate, cardObjectCardsInner.endDate) &&
        Objects.equals(this.countryCode, cardObjectCardsInner.countryCode) &&
        Objects.equals(this.currencyCode, cardObjectCardsInner.currencyCode) &&
        Objects.equals(this.lang, cardObjectCardsInner.lang) &&
        Objects.equals(this.deliveryTitle, cardObjectCardsInner.deliveryTitle) &&
        Objects.equals(this.deliveryLastname, cardObjectCardsInner.deliveryLastname) &&
        Objects.equals(this.deliveryFirstname, cardObjectCardsInner.deliveryFirstname) &&
        Objects.equals(this.deliveryAddress1, cardObjectCardsInner.deliveryAddress1) &&
        Objects.equals(this.deliveryAddress2, cardObjectCardsInner.deliveryAddress2) &&
        Objects.equals(this.deliveryAddress3, cardObjectCardsInner.deliveryAddress3) &&
        Objects.equals(this.deliveryCity, cardObjectCardsInner.deliveryCity) &&
        Objects.equals(this.deliveryPostcode, cardObjectCardsInner.deliveryPostcode) &&
        Objects.equals(this.deliveryCountry, cardObjectCardsInner.deliveryCountry) &&
        Objects.equals(this.mobileSent, cardObjectCardsInner.mobileSent) &&
        Objects.equals(this.limitsGroup, cardObjectCardsInner.limitsGroup) &&
        Objects.equals(this.permsGroup, cardObjectCardsInner.permsGroup) &&
        Objects.equals(this.cardDesign, cardObjectCardsInner.cardDesign) &&
        Objects.equals(this.virtualConverted, cardObjectCardsInner.virtualConverted) &&
        Objects.equals(this.physical, cardObjectCardsInner.physical) &&
        Objects.equals(this.optionAtm, cardObjectCardsInner.optionAtm) &&
        Objects.equals(this.optionForeign, cardObjectCardsInner.optionForeign) &&
        Objects.equals(this.optionOnline, cardObjectCardsInner.optionOnline) &&
        Objects.equals(this.optionNfc, cardObjectCardsInner.optionNfc) &&
        Objects.equals(this.limitAtmYear, cardObjectCardsInner.limitAtmYear) &&
        Objects.equals(this.limitAtmMonth, cardObjectCardsInner.limitAtmMonth) &&
        Objects.equals(this.limitAtmWeek, cardObjectCardsInner.limitAtmWeek) &&
        Objects.equals(this.limitAtmDay, cardObjectCardsInner.limitAtmDay) &&
        Objects.equals(this.limitAtmAll, cardObjectCardsInner.limitAtmAll) &&
        Objects.equals(this.limitPaymentYear, cardObjectCardsInner.limitPaymentYear) &&
        Objects.equals(this.limitPaymentMonth, cardObjectCardsInner.limitPaymentMonth) &&
        Objects.equals(this.limitPaymentWeek, cardObjectCardsInner.limitPaymentWeek) &&
        Objects.equals(this.limitPaymentDay, cardObjectCardsInner.limitPaymentDay) &&
        Objects.equals(this.limitPaymentAll, cardObjectCardsInner.limitPaymentAll) &&
        Objects.equals(this.paymentDailyLimit, cardObjectCardsInner.paymentDailyLimit) &&
        Objects.equals(this.totalAtmYear, cardObjectCardsInner.totalAtmYear) &&
        Objects.equals(this.totalAtmMonth, cardObjectCardsInner.totalAtmMonth) &&
        Objects.equals(this.totalAtmWeek, cardObjectCardsInner.totalAtmWeek) &&
        Objects.equals(this.totalAtmDay, cardObjectCardsInner.totalAtmDay) &&
        Objects.equals(this.totalAtmAll, cardObjectCardsInner.totalAtmAll) &&
        Objects.equals(this.totalPaymentYear, cardObjectCardsInner.totalPaymentYear) &&
        Objects.equals(this.totalPaymentMonth, cardObjectCardsInner.totalPaymentMonth) &&
        Objects.equals(this.totalPaymentWeek, cardObjectCardsInner.totalPaymentWeek) &&
        Objects.equals(this.totalPaymentDay, cardObjectCardsInner.totalPaymentDay) &&
        Objects.equals(this.totalPaymentAll, cardObjectCardsInner.totalPaymentAll) &&
        Objects.equals(this.createdBy, cardObjectCardsInner.createdBy) &&
        Objects.equals(this.createdDate, cardObjectCardsInner.createdDate) &&
        Objects.equals(this.modifiedBy, cardObjectCardsInner.modifiedBy) &&
        Objects.equals(this.modifiedDate, cardObjectCardsInner.modifiedDate) &&
        Objects.equals(this.totalRows, cardObjectCardsInner.totalRows) &&
        Objects.equals(this.designCode, cardObjectCardsInner.designCode) &&
        Objects.equals(this.cardLanguages, cardObjectCardsInner.cardLanguages) &&
        Objects.equals(this.eventName, cardObjectCardsInner.eventName) &&
        Objects.equals(this.eventAlias, cardObjectCardsInner.eventAlias) &&
        Objects.equals(this.restrictionGroupLimits, cardObjectCardsInner.restrictionGroupLimits) &&
        Objects.equals(this.cancellationNumber, cardObjectCardsInner.cancellationNumber) &&
        Objects.equals(this.metadata, cardObjectCardsInner.metadata) &&
        Objects.equals(this.renewalDate, cardObjectCardsInner.renewalDate) &&
        Objects.equals(this.renewalType, cardObjectCardsInner.renewalType) &&
        Objects.equals(this.originalCardId, cardObjectCardsInner.originalCardId) &&
        Objects.equals(this.logoId, cardObjectCardsInner.logoId) &&
        Objects.equals(this.logoBackId, cardObjectCardsInner.logoBackId) &&
        Objects.equals(this.packageId, cardObjectCardsInner.packageId) &&
        Objects.equals(this.customizeInfo, cardObjectCardsInner.customizeInfo) &&
        Objects.equals(this.letterCustomizedInfo, cardObjectCardsInner.letterCustomizedInfo) &&
        Objects.equals(this.freeCustomizedInfo, cardObjectCardsInner.freeCustomizedInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardId, userId, walletId, walletCardtransactionId, mccRestrictionGroupId, merchantRestrictionGroupId, countryRestrictionGroupId, publicToken, cardTag, statusCode, isLive, pinTryExceeds, maskedPan, embossedName, expiryDate, CVV, startDate, endDate, countryCode, currencyCode, lang, deliveryTitle, deliveryLastname, deliveryFirstname, deliveryAddress1, deliveryAddress2, deliveryAddress3, deliveryCity, deliveryPostcode, deliveryCountry, mobileSent, limitsGroup, permsGroup, cardDesign, virtualConverted, physical, optionAtm, optionForeign, optionOnline, optionNfc, limitAtmYear, limitAtmMonth, limitAtmWeek, limitAtmDay, limitAtmAll, limitPaymentYear, limitPaymentMonth, limitPaymentWeek, limitPaymentDay, limitPaymentAll, paymentDailyLimit, totalAtmYear, totalAtmMonth, totalAtmWeek, totalAtmDay, totalAtmAll, totalPaymentYear, totalPaymentMonth, totalPaymentWeek, totalPaymentDay, totalPaymentAll, createdBy, createdDate, modifiedBy, modifiedDate, totalRows, designCode, cardLanguages, eventName, eventAlias, restrictionGroupLimits, cancellationNumber, metadata, renewalDate, renewalType, originalCardId, logoId, logoBackId, packageId, customizeInfo, letterCustomizedInfo, freeCustomizedInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardObjectCardsInner {\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    walletCardtransactionId: ").append(toIndentedString(walletCardtransactionId)).append("\n");
    sb.append("    mccRestrictionGroupId: ").append(toIndentedString(mccRestrictionGroupId)).append("\n");
    sb.append("    merchantRestrictionGroupId: ").append(toIndentedString(merchantRestrictionGroupId)).append("\n");
    sb.append("    countryRestrictionGroupId: ").append(toIndentedString(countryRestrictionGroupId)).append("\n");
    sb.append("    publicToken: ").append(toIndentedString(publicToken)).append("\n");
    sb.append("    cardTag: ").append(toIndentedString(cardTag)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    isLive: ").append(toIndentedString(isLive)).append("\n");
    sb.append("    pinTryExceeds: ").append(toIndentedString(pinTryExceeds)).append("\n");
    sb.append("    maskedPan: ").append(toIndentedString(maskedPan)).append("\n");
    sb.append("    embossedName: ").append(toIndentedString(embossedName)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    CVV: ").append(toIndentedString(CVV)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    deliveryTitle: ").append(toIndentedString(deliveryTitle)).append("\n");
    sb.append("    deliveryLastname: ").append(toIndentedString(deliveryLastname)).append("\n");
    sb.append("    deliveryFirstname: ").append(toIndentedString(deliveryFirstname)).append("\n");
    sb.append("    deliveryAddress1: ").append(toIndentedString(deliveryAddress1)).append("\n");
    sb.append("    deliveryAddress2: ").append(toIndentedString(deliveryAddress2)).append("\n");
    sb.append("    deliveryAddress3: ").append(toIndentedString(deliveryAddress3)).append("\n");
    sb.append("    deliveryCity: ").append(toIndentedString(deliveryCity)).append("\n");
    sb.append("    deliveryPostcode: ").append(toIndentedString(deliveryPostcode)).append("\n");
    sb.append("    deliveryCountry: ").append(toIndentedString(deliveryCountry)).append("\n");
    sb.append("    mobileSent: ").append(toIndentedString(mobileSent)).append("\n");
    sb.append("    limitsGroup: ").append(toIndentedString(limitsGroup)).append("\n");
    sb.append("    permsGroup: ").append(toIndentedString(permsGroup)).append("\n");
    sb.append("    cardDesign: ").append(toIndentedString(cardDesign)).append("\n");
    sb.append("    virtualConverted: ").append(toIndentedString(virtualConverted)).append("\n");
    sb.append("    physical: ").append(toIndentedString(physical)).append("\n");
    sb.append("    optionAtm: ").append(toIndentedString(optionAtm)).append("\n");
    sb.append("    optionForeign: ").append(toIndentedString(optionForeign)).append("\n");
    sb.append("    optionOnline: ").append(toIndentedString(optionOnline)).append("\n");
    sb.append("    optionNfc: ").append(toIndentedString(optionNfc)).append("\n");
    sb.append("    limitAtmYear: ").append(toIndentedString(limitAtmYear)).append("\n");
    sb.append("    limitAtmMonth: ").append(toIndentedString(limitAtmMonth)).append("\n");
    sb.append("    limitAtmWeek: ").append(toIndentedString(limitAtmWeek)).append("\n");
    sb.append("    limitAtmDay: ").append(toIndentedString(limitAtmDay)).append("\n");
    sb.append("    limitAtmAll: ").append(toIndentedString(limitAtmAll)).append("\n");
    sb.append("    limitPaymentYear: ").append(toIndentedString(limitPaymentYear)).append("\n");
    sb.append("    limitPaymentMonth: ").append(toIndentedString(limitPaymentMonth)).append("\n");
    sb.append("    limitPaymentWeek: ").append(toIndentedString(limitPaymentWeek)).append("\n");
    sb.append("    limitPaymentDay: ").append(toIndentedString(limitPaymentDay)).append("\n");
    sb.append("    limitPaymentAll: ").append(toIndentedString(limitPaymentAll)).append("\n");
    sb.append("    paymentDailyLimit: ").append(toIndentedString(paymentDailyLimit)).append("\n");
    sb.append("    totalAtmYear: ").append(toIndentedString(totalAtmYear)).append("\n");
    sb.append("    totalAtmMonth: ").append(toIndentedString(totalAtmMonth)).append("\n");
    sb.append("    totalAtmWeek: ").append(toIndentedString(totalAtmWeek)).append("\n");
    sb.append("    totalAtmDay: ").append(toIndentedString(totalAtmDay)).append("\n");
    sb.append("    totalAtmAll: ").append(toIndentedString(totalAtmAll)).append("\n");
    sb.append("    totalPaymentYear: ").append(toIndentedString(totalPaymentYear)).append("\n");
    sb.append("    totalPaymentMonth: ").append(toIndentedString(totalPaymentMonth)).append("\n");
    sb.append("    totalPaymentWeek: ").append(toIndentedString(totalPaymentWeek)).append("\n");
    sb.append("    totalPaymentDay: ").append(toIndentedString(totalPaymentDay)).append("\n");
    sb.append("    totalPaymentAll: ").append(toIndentedString(totalPaymentAll)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    designCode: ").append(toIndentedString(designCode)).append("\n");
    sb.append("    cardLanguages: ").append(toIndentedString(cardLanguages)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventAlias: ").append(toIndentedString(eventAlias)).append("\n");
    sb.append("    restrictionGroupLimits: ").append(toIndentedString(restrictionGroupLimits)).append("\n");
    sb.append("    cancellationNumber: ").append(toIndentedString(cancellationNumber)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    renewalDate: ").append(toIndentedString(renewalDate)).append("\n");
    sb.append("    renewalType: ").append(toIndentedString(renewalType)).append("\n");
    sb.append("    originalCardId: ").append(toIndentedString(originalCardId)).append("\n");
    sb.append("    logoId: ").append(toIndentedString(logoId)).append("\n");
    sb.append("    logoBackId: ").append(toIndentedString(logoBackId)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    customizeInfo: ").append(toIndentedString(customizeInfo)).append("\n");
    sb.append("    letterCustomizedInfo: ").append(toIndentedString(letterCustomizedInfo)).append("\n");
    sb.append("    freeCustomizedInfo: ").append(toIndentedString(freeCustomizedInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cardId");
    openapiFields.add("userId");
    openapiFields.add("walletId");
    openapiFields.add("walletCardtransactionId");
    openapiFields.add("mccRestrictionGroupId");
    openapiFields.add("merchantRestrictionGroupId");
    openapiFields.add("countryRestrictionGroupId");
    openapiFields.add("publicToken");
    openapiFields.add("cardTag");
    openapiFields.add("statusCode");
    openapiFields.add("isLive");
    openapiFields.add("pinTryExceeds");
    openapiFields.add("maskedPan");
    openapiFields.add("embossedName");
    openapiFields.add("expiryDate");
    openapiFields.add("CVV");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("countryCode");
    openapiFields.add("currencyCode");
    openapiFields.add("lang");
    openapiFields.add("deliveryTitle");
    openapiFields.add("deliveryLastname");
    openapiFields.add("deliveryFirstname");
    openapiFields.add("deliveryAddress1");
    openapiFields.add("deliveryAddress2");
    openapiFields.add("deliveryAddress3");
    openapiFields.add("deliveryCity");
    openapiFields.add("deliveryPostcode");
    openapiFields.add("deliveryCountry");
    openapiFields.add("mobileSent");
    openapiFields.add("limitsGroup");
    openapiFields.add("permsGroup");
    openapiFields.add("cardDesign");
    openapiFields.add("virtualConverted");
    openapiFields.add("physical");
    openapiFields.add("optionAtm");
    openapiFields.add("optionForeign");
    openapiFields.add("optionOnline");
    openapiFields.add("optionNfc");
    openapiFields.add("limitAtmYear");
    openapiFields.add("limitAtmMonth");
    openapiFields.add("limitAtmWeek");
    openapiFields.add("limitAtmDay");
    openapiFields.add("limitAtmAll");
    openapiFields.add("limitPaymentYear");
    openapiFields.add("limitPaymentMonth");
    openapiFields.add("limitPaymentWeek");
    openapiFields.add("limitPaymentDay");
    openapiFields.add("limitPaymentAll");
    openapiFields.add("paymentDailyLimit");
    openapiFields.add("totalAtmYear");
    openapiFields.add("totalAtmMonth");
    openapiFields.add("totalAtmWeek");
    openapiFields.add("totalAtmDay");
    openapiFields.add("totalAtmAll");
    openapiFields.add("totalPaymentYear");
    openapiFields.add("totalPaymentMonth");
    openapiFields.add("totalPaymentWeek");
    openapiFields.add("totalPaymentDay");
    openapiFields.add("totalPaymentAll");
    openapiFields.add("createdBy");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedBy");
    openapiFields.add("modifiedDate");
    openapiFields.add("totalRows");
    openapiFields.add("designCode");
    openapiFields.add("cardLanguages");
    openapiFields.add("eventName");
    openapiFields.add("eventAlias");
    openapiFields.add("restrictionGroupLimits");
    openapiFields.add("cancellationNumber");
    openapiFields.add("metadata");
    openapiFields.add("renewalDate");
    openapiFields.add("renewalType");
    openapiFields.add("originalCardId");
    openapiFields.add("logoId");
    openapiFields.add("logoBackId");
    openapiFields.add("packageId");
    openapiFields.add("customizeInfo");
    openapiFields.add("letterCustomizedInfo");
    openapiFields.add("freeCustomizedInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CardObjectCardsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CardObjectCardsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CardObjectCardsInner is not found in the empty JSON string", CardObjectCardsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CardObjectCardsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CardObjectCardsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("publicToken") != null && !jsonObj.get("publicToken").isJsonNull()) && !jsonObj.get("publicToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicToken").toString()));
      }
      if ((jsonObj.get("cardTag") != null && !jsonObj.get("cardTag").isJsonNull()) && !jsonObj.get("cardTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardTag").toString()));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      // validate the optional field `statusCode`
      if (jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) {
        StatusCodeEnum.validateJsonElement(jsonObj.get("statusCode"));
      }
      if ((jsonObj.get("maskedPan") != null && !jsonObj.get("maskedPan").isJsonNull()) && !jsonObj.get("maskedPan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maskedPan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maskedPan").toString()));
      }
      if ((jsonObj.get("embossedName") != null && !jsonObj.get("embossedName").isJsonNull()) && !jsonObj.get("embossedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embossedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embossedName").toString()));
      }
      if ((jsonObj.get("expiryDate") != null && !jsonObj.get("expiryDate").isJsonNull()) && !jsonObj.get("expiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryDate").toString()));
      }
      if ((jsonObj.get("CVV") != null && !jsonObj.get("CVV").isJsonNull()) && !jsonObj.get("CVV").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CVV` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CVV").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("deliveryTitle") != null && !jsonObj.get("deliveryTitle").isJsonNull()) && !jsonObj.get("deliveryTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryTitle").toString()));
      }
      if ((jsonObj.get("deliveryLastname") != null && !jsonObj.get("deliveryLastname").isJsonNull()) && !jsonObj.get("deliveryLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryLastname").toString()));
      }
      if ((jsonObj.get("deliveryFirstname") != null && !jsonObj.get("deliveryFirstname").isJsonNull()) && !jsonObj.get("deliveryFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryFirstname").toString()));
      }
      if ((jsonObj.get("deliveryAddress1") != null && !jsonObj.get("deliveryAddress1").isJsonNull()) && !jsonObj.get("deliveryAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryAddress1").toString()));
      }
      if ((jsonObj.get("deliveryAddress2") != null && !jsonObj.get("deliveryAddress2").isJsonNull()) && !jsonObj.get("deliveryAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryAddress2").toString()));
      }
      if ((jsonObj.get("deliveryAddress3") != null && !jsonObj.get("deliveryAddress3").isJsonNull()) && !jsonObj.get("deliveryAddress3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryAddress3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryAddress3").toString()));
      }
      if ((jsonObj.get("deliveryCity") != null && !jsonObj.get("deliveryCity").isJsonNull()) && !jsonObj.get("deliveryCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryCity").toString()));
      }
      if ((jsonObj.get("deliveryPostcode") != null && !jsonObj.get("deliveryPostcode").isJsonNull()) && !jsonObj.get("deliveryPostcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryPostcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryPostcode").toString()));
      }
      if ((jsonObj.get("deliveryCountry") != null && !jsonObj.get("deliveryCountry").isJsonNull()) && !jsonObj.get("deliveryCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryCountry").toString()));
      }
      if ((jsonObj.get("mobileSent") != null && !jsonObj.get("mobileSent").isJsonNull()) && !jsonObj.get("mobileSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileSent").toString()));
      }
      if ((jsonObj.get("limitsGroup") != null && !jsonObj.get("limitsGroup").isJsonNull()) && !jsonObj.get("limitsGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limitsGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limitsGroup").toString()));
      }
      if ((jsonObj.get("permsGroup") != null && !jsonObj.get("permsGroup").isJsonNull()) && !jsonObj.get("permsGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permsGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permsGroup").toString()));
      }
      if ((jsonObj.get("cardDesign") != null && !jsonObj.get("cardDesign").isJsonNull()) && !jsonObj.get("cardDesign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardDesign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardDesign").toString()));
      }
      // validate the optional field `virtualConverted`
      if (jsonObj.get("virtualConverted") != null && !jsonObj.get("virtualConverted").isJsonNull()) {
        VirtualConvertedEnum.validateJsonElement(jsonObj.get("virtualConverted"));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
      if ((jsonObj.get("designCode") != null && !jsonObj.get("designCode").isJsonNull()) && !jsonObj.get("designCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `designCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("designCode").toString()));
      }
      if ((jsonObj.get("cardLanguages") != null && !jsonObj.get("cardLanguages").isJsonNull()) && !jsonObj.get("cardLanguages").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardLanguages` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardLanguages").toString()));
      }
      if ((jsonObj.get("eventName") != null && !jsonObj.get("eventName").isJsonNull()) && !jsonObj.get("eventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventName").toString()));
      }
      if ((jsonObj.get("eventAlias") != null && !jsonObj.get("eventAlias").isJsonNull()) && !jsonObj.get("eventAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventAlias").toString()));
      }
      if (jsonObj.get("restrictionGroupLimits") != null && !jsonObj.get("restrictionGroupLimits").isJsonNull()) {
        JsonArray jsonArrayrestrictionGroupLimits = jsonObj.getAsJsonArray("restrictionGroupLimits");
        if (jsonArrayrestrictionGroupLimits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("restrictionGroupLimits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `restrictionGroupLimits` to be an array in the JSON string but got `%s`", jsonObj.get("restrictionGroupLimits").toString()));
          }

          // validate the optional field `restrictionGroupLimits` (array)
          for (int i = 0; i < jsonArrayrestrictionGroupLimits.size(); i++) {
            CardObjectCardsInnerRestrictionGroupLimitsInner.validateJsonElement(jsonArrayrestrictionGroupLimits.get(i));
          };
        }
      }
      if ((jsonObj.get("cancellationNumber") != null && !jsonObj.get("cancellationNumber").isJsonNull()) && !jsonObj.get("cancellationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancellationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancellationNumber").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("renewalDate") != null && !jsonObj.get("renewalDate").isJsonNull()) && !jsonObj.get("renewalDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `renewalDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("renewalDate").toString()));
      }
      if ((jsonObj.get("renewalType") != null && !jsonObj.get("renewalType").isJsonNull()) && !jsonObj.get("renewalType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `renewalType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("renewalType").toString()));
      }
      // validate the optional field `renewalType`
      if (jsonObj.get("renewalType") != null && !jsonObj.get("renewalType").isJsonNull()) {
        RenewalTypeEnum.validateJsonElement(jsonObj.get("renewalType"));
      }
      if ((jsonObj.get("logoId") != null && !jsonObj.get("logoId").isJsonNull()) && !jsonObj.get("logoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoId").toString()));
      }
      if ((jsonObj.get("logoBackId") != null && !jsonObj.get("logoBackId").isJsonNull()) && !jsonObj.get("logoBackId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoBackId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoBackId").toString()));
      }
      if ((jsonObj.get("packageId") != null && !jsonObj.get("packageId").isJsonNull()) && !jsonObj.get("packageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageId").toString()));
      }
      if ((jsonObj.get("customizeInfo") != null && !jsonObj.get("customizeInfo").isJsonNull()) && !jsonObj.get("customizeInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customizeInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customizeInfo").toString()));
      }
      if ((jsonObj.get("letterCustomizedInfo") != null && !jsonObj.get("letterCustomizedInfo").isJsonNull()) && !jsonObj.get("letterCustomizedInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `letterCustomizedInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("letterCustomizedInfo").toString()));
      }
      if ((jsonObj.get("freeCustomizedInfo") != null && !jsonObj.get("freeCustomizedInfo").isJsonNull()) && !jsonObj.get("freeCustomizedInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freeCustomizedInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freeCustomizedInfo").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CardObjectCardsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CardObjectCardsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CardObjectCardsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CardObjectCardsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CardObjectCardsInner>() {
           @Override
           public void write(JsonWriter out, CardObjectCardsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CardObjectCardsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CardObjectCardsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CardObjectCardsInner
   * @throws IOException if the JSON string is invalid with respect to CardObjectCardsInner
   */
  public static CardObjectCardsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CardObjectCardsInner.class);
  }

  /**
   * Convert an instance of CardObjectCardsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

