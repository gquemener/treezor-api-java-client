/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetPayinrefunds200ResponsePayinrefundsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class GetPayinrefunds200ResponsePayinrefundsInner {
  public static final String SERIALIZED_NAME_PAYINREFUND_ID = "payinrefundId";
  @SerializedName(SERIALIZED_NAME_PAYINREFUND_ID)
  @javax.annotation.Nullable
  private Integer payinrefundId;

  public static final String SERIALIZED_NAME_PAYINREFUND_TAG = "payinrefundTag";
  @SerializedName(SERIALIZED_NAME_PAYINREFUND_TAG)
  @javax.annotation.Nullable
  private String payinrefundTag;

  /**
   * Gets or Sets payinrefundStatus
   */
  @JsonAdapter(PayinrefundStatusEnum.Adapter.class)
  public enum PayinrefundStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    PayinrefundStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayinrefundStatusEnum fromValue(String value) {
      for (PayinrefundStatusEnum b : PayinrefundStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PayinrefundStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayinrefundStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayinrefundStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PayinrefundStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PayinrefundStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYINREFUND_STATUS = "payinrefundStatus";
  @SerializedName(SERIALIZED_NAME_PAYINREFUND_STATUS)
  @javax.annotation.Nullable
  private PayinrefundStatusEnum payinrefundStatus;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String SERIALIZED_NAME_PAYIN_ID = "payinId";
  @SerializedName(SERIALIZED_NAME_PAYIN_ID)
  @javax.annotation.Nullable
  private Integer payinId;

  public static final String SERIALIZED_NAME_PAYINREFUND_DATE = "payinrefundDate";
  @SerializedName(SERIALIZED_NAME_PAYINREFUND_DATE)
  @javax.annotation.Nullable
  private Integer payinrefundDate;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  @javax.annotation.Nullable
  private String amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  @javax.annotation.Nullable
  private String modifiedDate;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  public GetPayinrefunds200ResponsePayinrefundsInner() {
  }

  public GetPayinrefunds200ResponsePayinrefundsInner payinrefundId(@javax.annotation.Nullable Integer payinrefundId) {
    this.payinrefundId = payinrefundId;
    return this;
  }

  /**
   * Get payinrefundId
   * @return payinrefundId
   */
  @javax.annotation.Nullable
  public Integer getPayinrefundId() {
    return payinrefundId;
  }

  public void setPayinrefundId(@javax.annotation.Nullable Integer payinrefundId) {
    this.payinrefundId = payinrefundId;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner payinrefundTag(@javax.annotation.Nullable String payinrefundTag) {
    this.payinrefundTag = payinrefundTag;
    return this;
  }

  /**
   * Get payinrefundTag
   * @return payinrefundTag
   */
  @javax.annotation.Nullable
  public String getPayinrefundTag() {
    return payinrefundTag;
  }

  public void setPayinrefundTag(@javax.annotation.Nullable String payinrefundTag) {
    this.payinrefundTag = payinrefundTag;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner payinrefundStatus(@javax.annotation.Nullable PayinrefundStatusEnum payinrefundStatus) {
    this.payinrefundStatus = payinrefundStatus;
    return this;
  }

  /**
   * Get payinrefundStatus
   * @return payinrefundStatus
   */
  @javax.annotation.Nullable
  public PayinrefundStatusEnum getPayinrefundStatus() {
    return payinrefundStatus;
  }

  public void setPayinrefundStatus(@javax.annotation.Nullable PayinrefundStatusEnum payinrefundStatus) {
    this.payinrefundStatus = payinrefundStatus;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner payinId(@javax.annotation.Nullable Integer payinId) {
    this.payinId = payinId;
    return this;
  }

  /**
   * Get payinId
   * @return payinId
   */
  @javax.annotation.Nullable
  public Integer getPayinId() {
    return payinId;
  }

  public void setPayinId(@javax.annotation.Nullable Integer payinId) {
    this.payinId = payinId;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner payinrefundDate(@javax.annotation.Nullable Integer payinrefundDate) {
    this.payinrefundDate = payinrefundDate;
    return this;
  }

  /**
   * Get payinrefundDate
   * @return payinrefundDate
   */
  @javax.annotation.Nullable
  public Integer getPayinrefundDate() {
    return payinrefundDate;
  }

  public void setPayinrefundDate(@javax.annotation.Nullable Integer payinrefundDate) {
    this.payinrefundDate = payinrefundDate;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner amount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner modifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public GetPayinrefunds200ResponsePayinrefundsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPayinrefunds200ResponsePayinrefundsInner getPayinrefunds200ResponsePayinrefundsInner = (GetPayinrefunds200ResponsePayinrefundsInner) o;
    return Objects.equals(this.payinrefundId, getPayinrefunds200ResponsePayinrefundsInner.payinrefundId) &&
        Objects.equals(this.payinrefundTag, getPayinrefunds200ResponsePayinrefundsInner.payinrefundTag) &&
        Objects.equals(this.payinrefundStatus, getPayinrefunds200ResponsePayinrefundsInner.payinrefundStatus) &&
        Objects.equals(this.walletId, getPayinrefunds200ResponsePayinrefundsInner.walletId) &&
        Objects.equals(this.payinId, getPayinrefunds200ResponsePayinrefundsInner.payinId) &&
        Objects.equals(this.payinrefundDate, getPayinrefunds200ResponsePayinrefundsInner.payinrefundDate) &&
        Objects.equals(this.amount, getPayinrefunds200ResponsePayinrefundsInner.amount) &&
        Objects.equals(this.currency, getPayinrefunds200ResponsePayinrefundsInner.currency) &&
        Objects.equals(this.createdDate, getPayinrefunds200ResponsePayinrefundsInner.createdDate) &&
        Objects.equals(this.modifiedDate, getPayinrefunds200ResponsePayinrefundsInner.modifiedDate) &&
        Objects.equals(this.totalRows, getPayinrefunds200ResponsePayinrefundsInner.totalRows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payinrefundId, payinrefundTag, payinrefundStatus, walletId, payinId, payinrefundDate, amount, currency, createdDate, modifiedDate, totalRows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPayinrefunds200ResponsePayinrefundsInner {\n");
    sb.append("    payinrefundId: ").append(toIndentedString(payinrefundId)).append("\n");
    sb.append("    payinrefundTag: ").append(toIndentedString(payinrefundTag)).append("\n");
    sb.append("    payinrefundStatus: ").append(toIndentedString(payinrefundStatus)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    payinId: ").append(toIndentedString(payinId)).append("\n");
    sb.append("    payinrefundDate: ").append(toIndentedString(payinrefundDate)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payinrefundId");
    openapiFields.add("payinrefundTag");
    openapiFields.add("payinrefundStatus");
    openapiFields.add("walletId");
    openapiFields.add("payinId");
    openapiFields.add("payinrefundDate");
    openapiFields.add("amount");
    openapiFields.add("currency");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("totalRows");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetPayinrefunds200ResponsePayinrefundsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetPayinrefunds200ResponsePayinrefundsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetPayinrefunds200ResponsePayinrefundsInner is not found in the empty JSON string", GetPayinrefunds200ResponsePayinrefundsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetPayinrefunds200ResponsePayinrefundsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetPayinrefunds200ResponsePayinrefundsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("payinrefundTag") != null && !jsonObj.get("payinrefundTag").isJsonNull()) && !jsonObj.get("payinrefundTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinrefundTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinrefundTag").toString()));
      }
      if ((jsonObj.get("payinrefundStatus") != null && !jsonObj.get("payinrefundStatus").isJsonNull()) && !jsonObj.get("payinrefundStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinrefundStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinrefundStatus").toString()));
      }
      // validate the optional field `payinrefundStatus`
      if (jsonObj.get("payinrefundStatus") != null && !jsonObj.get("payinrefundStatus").isJsonNull()) {
        PayinrefundStatusEnum.validateJsonElement(jsonObj.get("payinrefundStatus"));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetPayinrefunds200ResponsePayinrefundsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetPayinrefunds200ResponsePayinrefundsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetPayinrefunds200ResponsePayinrefundsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetPayinrefunds200ResponsePayinrefundsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetPayinrefunds200ResponsePayinrefundsInner>() {
           @Override
           public void write(JsonWriter out, GetPayinrefunds200ResponsePayinrefundsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetPayinrefunds200ResponsePayinrefundsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetPayinrefunds200ResponsePayinrefundsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetPayinrefunds200ResponsePayinrefundsInner
   * @throws IOException if the JSON string is invalid with respect to GetPayinrefunds200ResponsePayinrefundsInner
   */
  public static GetPayinrefunds200ResponsePayinrefundsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetPayinrefunds200ResponsePayinrefundsInner.class);
  }

  /**
   * Convert an instance of GetPayinrefunds200ResponsePayinrefundsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

