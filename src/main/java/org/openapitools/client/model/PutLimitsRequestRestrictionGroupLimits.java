/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Group of limits based on Restriction Groups. For now, only Restaurant Payment Vouchers with &#x60;paymentDailyLimit&#x60; can use this field. Furthermore, one of &#x60;mccRestrictionGroups&#x60;, &#x60;countryRestrictionGroups&#x60; or &#x60;merchantIdRestrictionGroups&#x60; must bepresent (i.e., &#x60;paymentDailyLimit&#x60; can&#39;t be alone). 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PutLimitsRequestRestrictionGroupLimits {
  public static final String SERIALIZED_NAME_MCC_RESTRICTION_GROUPS = "mccRestrictionGroups";
  @SerializedName(SERIALIZED_NAME_MCC_RESTRICTION_GROUPS)
  @javax.annotation.Nonnull
  private Set<Long> mccRestrictionGroups = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUPS = "countryRestrictionGroups";
  @SerializedName(SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUPS)
  @javax.annotation.Nonnull
  private Set<Long> countryRestrictionGroups = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_MERCHANT_ID_RESTRICTION_GROUPS = "merchantIdRestrictionGroups";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID_RESTRICTION_GROUPS)
  @javax.annotation.Nonnull
  private Set<Long> merchantIdRestrictionGroups = new LinkedHashSet<>();

  public PutLimitsRequestRestrictionGroupLimits() {
  }

  public PutLimitsRequestRestrictionGroupLimits mccRestrictionGroups(@javax.annotation.Nonnull Set<Long> mccRestrictionGroups) {
    this.mccRestrictionGroups = mccRestrictionGroups;
    return this;
  }

  public PutLimitsRequestRestrictionGroupLimits addMccRestrictionGroupsItem(Long mccRestrictionGroupsItem) {
    if (this.mccRestrictionGroups == null) {
      this.mccRestrictionGroups = new LinkedHashSet<>();
    }
    this.mccRestrictionGroups.add(mccRestrictionGroupsItem);
    return this;
  }

  /**
   * List of MCC (Merchant Category Code) Restriction Groups.
   * @return mccRestrictionGroups
   */
  @javax.annotation.Nonnull
  public Set<Long> getMccRestrictionGroups() {
    return mccRestrictionGroups;
  }

  public void setMccRestrictionGroups(@javax.annotation.Nonnull Set<Long> mccRestrictionGroups) {
    this.mccRestrictionGroups = mccRestrictionGroups;
  }


  public PutLimitsRequestRestrictionGroupLimits countryRestrictionGroups(@javax.annotation.Nonnull Set<Long> countryRestrictionGroups) {
    this.countryRestrictionGroups = countryRestrictionGroups;
    return this;
  }

  public PutLimitsRequestRestrictionGroupLimits addCountryRestrictionGroupsItem(Long countryRestrictionGroupsItem) {
    if (this.countryRestrictionGroups == null) {
      this.countryRestrictionGroups = new LinkedHashSet<>();
    }
    this.countryRestrictionGroups.add(countryRestrictionGroupsItem);
    return this;
  }

  /**
   * List of Country Restriction Groups.
   * @return countryRestrictionGroups
   */
  @javax.annotation.Nonnull
  public Set<Long> getCountryRestrictionGroups() {
    return countryRestrictionGroups;
  }

  public void setCountryRestrictionGroups(@javax.annotation.Nonnull Set<Long> countryRestrictionGroups) {
    this.countryRestrictionGroups = countryRestrictionGroups;
  }


  public PutLimitsRequestRestrictionGroupLimits merchantIdRestrictionGroups(@javax.annotation.Nonnull Set<Long> merchantIdRestrictionGroups) {
    this.merchantIdRestrictionGroups = merchantIdRestrictionGroups;
    return this;
  }

  public PutLimitsRequestRestrictionGroupLimits addMerchantIdRestrictionGroupsItem(Long merchantIdRestrictionGroupsItem) {
    if (this.merchantIdRestrictionGroups == null) {
      this.merchantIdRestrictionGroups = new LinkedHashSet<>();
    }
    this.merchantIdRestrictionGroups.add(merchantIdRestrictionGroupsItem);
    return this;
  }

  /**
   * List of Merchant ID Restriction Groups.
   * @return merchantIdRestrictionGroups
   */
  @javax.annotation.Nonnull
  public Set<Long> getMerchantIdRestrictionGroups() {
    return merchantIdRestrictionGroups;
  }

  public void setMerchantIdRestrictionGroups(@javax.annotation.Nonnull Set<Long> merchantIdRestrictionGroups) {
    this.merchantIdRestrictionGroups = merchantIdRestrictionGroups;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutLimitsRequestRestrictionGroupLimits putLimitsRequestRestrictionGroupLimits = (PutLimitsRequestRestrictionGroupLimits) o;
    return Objects.equals(this.mccRestrictionGroups, putLimitsRequestRestrictionGroupLimits.mccRestrictionGroups) &&
        Objects.equals(this.countryRestrictionGroups, putLimitsRequestRestrictionGroupLimits.countryRestrictionGroups) &&
        Objects.equals(this.merchantIdRestrictionGroups, putLimitsRequestRestrictionGroupLimits.merchantIdRestrictionGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mccRestrictionGroups, countryRestrictionGroups, merchantIdRestrictionGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutLimitsRequestRestrictionGroupLimits {\n");
    sb.append("    mccRestrictionGroups: ").append(toIndentedString(mccRestrictionGroups)).append("\n");
    sb.append("    countryRestrictionGroups: ").append(toIndentedString(countryRestrictionGroups)).append("\n");
    sb.append("    merchantIdRestrictionGroups: ").append(toIndentedString(merchantIdRestrictionGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mccRestrictionGroups");
    openapiFields.add("countryRestrictionGroups");
    openapiFields.add("merchantIdRestrictionGroups");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("mccRestrictionGroups");
    openapiRequiredFields.add("countryRestrictionGroups");
    openapiRequiredFields.add("merchantIdRestrictionGroups");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutLimitsRequestRestrictionGroupLimits
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutLimitsRequestRestrictionGroupLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutLimitsRequestRestrictionGroupLimits is not found in the empty JSON string", PutLimitsRequestRestrictionGroupLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutLimitsRequestRestrictionGroupLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutLimitsRequestRestrictionGroupLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutLimitsRequestRestrictionGroupLimits.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("mccRestrictionGroups") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("mccRestrictionGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mccRestrictionGroups` to be an array in the JSON string but got `%s`", jsonObj.get("mccRestrictionGroups").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("countryRestrictionGroups") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("countryRestrictionGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryRestrictionGroups` to be an array in the JSON string but got `%s`", jsonObj.get("countryRestrictionGroups").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("merchantIdRestrictionGroups") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("merchantIdRestrictionGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantIdRestrictionGroups` to be an array in the JSON string but got `%s`", jsonObj.get("merchantIdRestrictionGroups").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutLimitsRequestRestrictionGroupLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutLimitsRequestRestrictionGroupLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutLimitsRequestRestrictionGroupLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutLimitsRequestRestrictionGroupLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<PutLimitsRequestRestrictionGroupLimits>() {
           @Override
           public void write(JsonWriter out, PutLimitsRequestRestrictionGroupLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutLimitsRequestRestrictionGroupLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutLimitsRequestRestrictionGroupLimits given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutLimitsRequestRestrictionGroupLimits
   * @throws IOException if the JSON string is invalid with respect to PutLimitsRequestRestrictionGroupLimits
   */
  public static PutLimitsRequestRestrictionGroupLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutLimitsRequestRestrictionGroupLimits.class);
  }

  /**
   * Convert an instance of PutLimitsRequestRestrictionGroupLimits to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

