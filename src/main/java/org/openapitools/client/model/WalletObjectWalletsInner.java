/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WalletObjectWalletsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class WalletObjectWalletsInner {
  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  /**
   * The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation. 
   */
  @JsonAdapter(WalletTypeIdEnum.Adapter.class)
  public enum WalletTypeIdEnum {
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_14(14),
    
    NUMBER_15(15);

    private Integer value;

    WalletTypeIdEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WalletTypeIdEnum fromValue(Integer value) {
      for (WalletTypeIdEnum b : WalletTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WalletTypeIdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WalletTypeIdEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WalletTypeIdEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return WalletTypeIdEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      WalletTypeIdEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WALLET_TYPE_ID = "walletTypeId";
  @SerializedName(SERIALIZED_NAME_WALLET_TYPE_ID)
  @javax.annotation.Nullable
  private WalletTypeIdEnum walletTypeId;

  /**
   * The status of the Wallet.
   */
  @JsonAdapter(WalletStatusEnum.Adapter.class)
  public enum WalletStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    WalletStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WalletStatusEnum fromValue(String value) {
      for (WalletStatusEnum b : WalletStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WalletStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WalletStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WalletStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WalletStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      WalletStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WALLET_STATUS = "walletStatus";
  @SerializedName(SERIALIZED_NAME_WALLET_STATUS)
  @javax.annotation.Nullable
  private WalletStatusEnum walletStatus;

  public static final String SERIALIZED_NAME_CODE_STATUS = "codeStatus";
  @SerializedName(SERIALIZED_NAME_CODE_STATUS)
  @javax.annotation.Nullable
  private Integer codeStatus;

  public static final String SERIALIZED_NAME_INFORMATION_STATUS = "informationStatus";
  @SerializedName(SERIALIZED_NAME_INFORMATION_STATUS)
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String SERIALIZED_NAME_WALLET_TAG = "walletTag";
  @SerializedName(SERIALIZED_NAME_WALLET_TAG)
  @javax.annotation.Nullable
  private String walletTag;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_LASTNAME = "userLastname";
  @SerializedName(SERIALIZED_NAME_USER_LASTNAME)
  @javax.annotation.Nullable
  private String userLastname;

  public static final String SERIALIZED_NAME_USER_FIRSTNAME = "userFirstname";
  @SerializedName(SERIALIZED_NAME_USER_FIRSTNAME)
  @javax.annotation.Nullable
  private String userFirstname;

  public static final String SERIALIZED_NAME_JOINT_USER_ID = "jointUserId";
  @SerializedName(SERIALIZED_NAME_JOINT_USER_ID)
  @javax.annotation.Nullable
  private Integer jointUserId;

  public static final String SERIALIZED_NAME_TARIFF_ID = "tariffId";
  @SerializedName(SERIALIZED_NAME_TARIFF_ID)
  @javax.annotation.Nullable
  private Integer tariffId;

  public static final String SERIALIZED_NAME_EVENT_NAME = "eventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  @javax.annotation.Nullable
  private String eventName;

  public static final String SERIALIZED_NAME_EVENT_ALIAS = "eventAlias";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_EVENT_ALIAS)
  @javax.annotation.Nullable
  private String eventAlias;

  public static final String SERIALIZED_NAME_EVENT_DATE = "eventDate";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_EVENT_DATE)
  @javax.annotation.Nullable
  private String eventDate;

  public static final String SERIALIZED_NAME_EVENT_MESSAGE = "eventMessage";
  @SerializedName(SERIALIZED_NAME_EVENT_MESSAGE)
  @javax.annotation.Nullable
  private String eventMessage;

  public static final String SERIALIZED_NAME_EVENT_PAYIN_START_DATE = "eventPayinStartDate";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_EVENT_PAYIN_START_DATE)
  @javax.annotation.Nullable
  private String eventPayinStartDate;

  public static final String SERIALIZED_NAME_EVENT_PAYIN_END_DATE = "eventPayinEndDate";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_EVENT_PAYIN_END_DATE)
  @javax.annotation.Nullable
  private String eventPayinEndDate;

  public static final String SERIALIZED_NAME_CONTRACT_SIGNED = "contractSigned";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CONTRACT_SIGNED)
  @javax.annotation.Nullable
  private Integer contractSigned;

  public static final String SERIALIZED_NAME_BIC = "bic";
  @SerializedName(SERIALIZED_NAME_BIC)
  @javax.annotation.Nullable
  private String bic;

  public static final String SERIALIZED_NAME_IBAN = "iban";
  @SerializedName(SERIALIZED_NAME_IBAN)
  @javax.annotation.Nullable
  private String iban;

  public static final String SERIALIZED_NAME_URL_IMAGE = "urlImage";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_URL_IMAGE)
  @javax.annotation.Nullable
  private String urlImage;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  @javax.annotation.Nullable
  private String modifiedDate;

  public static final String SERIALIZED_NAME_PAYIN_COUNT = "payinCount";
  @SerializedName(SERIALIZED_NAME_PAYIN_COUNT)
  @javax.annotation.Nullable
  private Integer payinCount;

  public static final String SERIALIZED_NAME_PAYOUT_COUNT = "payoutCount";
  @SerializedName(SERIALIZED_NAME_PAYOUT_COUNT)
  @javax.annotation.Nullable
  private Integer payoutCount;

  public static final String SERIALIZED_NAME_TRANSFER_COUNT = "transferCount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_COUNT)
  @javax.annotation.Nullable
  private Integer transferCount;

  public static final String SERIALIZED_NAME_SOLDE = "solde";
  @SerializedName(SERIALIZED_NAME_SOLDE)
  @javax.annotation.Nullable
  private Integer solde;

  public static final String SERIALIZED_NAME_AUTHORIZED_BALANCE = "authorizedBalance";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_BALANCE)
  @javax.annotation.Nullable
  private Integer authorizedBalance;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  public WalletObjectWalletsInner() {
  }

  public WalletObjectWalletsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet.
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public WalletObjectWalletsInner walletTypeId(@javax.annotation.Nullable WalletTypeIdEnum walletTypeId) {
    this.walletTypeId = walletTypeId;
    return this;
  }

  /**
   * The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation. 
   * @return walletTypeId
   */
  @javax.annotation.Nullable
  public WalletTypeIdEnum getWalletTypeId() {
    return walletTypeId;
  }

  public void setWalletTypeId(@javax.annotation.Nullable WalletTypeIdEnum walletTypeId) {
    this.walletTypeId = walletTypeId;
  }


  public WalletObjectWalletsInner walletStatus(@javax.annotation.Nullable WalletStatusEnum walletStatus) {
    this.walletStatus = walletStatus;
    return this;
  }

  /**
   * The status of the Wallet.
   * @return walletStatus
   */
  @javax.annotation.Nullable
  public WalletStatusEnum getWalletStatus() {
    return walletStatus;
  }

  public void setWalletStatus(@javax.annotation.Nullable WalletStatusEnum walletStatus) {
    this.walletStatus = walletStatus;
  }


  public WalletObjectWalletsInner codeStatus(@javax.annotation.Nullable Integer codeStatus) {
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * See [Wallet status](/guide/wallets/introduction.html#wallet-status). 
   * @return codeStatus
   */
  @javax.annotation.Nullable
  public Integer getCodeStatus() {
    return codeStatus;
  }

  public void setCodeStatus(@javax.annotation.Nullable Integer codeStatus) {
    this.codeStatus = codeStatus;
  }


  public WalletObjectWalletsInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  public String getInformationStatus() {
    return informationStatus;
  }

  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }


  public WalletObjectWalletsInner walletTag(@javax.annotation.Nullable String walletTag) {
    this.walletTag = walletTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit.
   * @return walletTag
   */
  @javax.annotation.Nullable
  public String getWalletTag() {
    return walletTag;
  }

  public void setWalletTag(@javax.annotation.Nullable String walletTag) {
    this.walletTag = walletTag;
  }


  public WalletObjectWalletsInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the User owning the Wallet.
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public WalletObjectWalletsInner userLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
    return this;
  }

  /**
   * Get userLastname
   * @return userLastname
   */
  @javax.annotation.Nullable
  public String getUserLastname() {
    return userLastname;
  }

  public void setUserLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
  }


  public WalletObjectWalletsInner userFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
    return this;
  }

  /**
   * Get userFirstname
   * @return userFirstname
   */
  @javax.annotation.Nullable
  public String getUserFirstname() {
    return userFirstname;
  }

  public void setUserFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
  }


  public WalletObjectWalletsInner jointUserId(@javax.annotation.Nullable Integer jointUserId) {
    this.jointUserId = jointUserId;
    return this;
  }

  /**
   * Get jointUserId
   * @return jointUserId
   */
  @javax.annotation.Nullable
  public Integer getJointUserId() {
    return jointUserId;
  }

  public void setJointUserId(@javax.annotation.Nullable Integer jointUserId) {
    this.jointUserId = jointUserId;
  }


  public WalletObjectWalletsInner tariffId(@javax.annotation.Nullable Integer tariffId) {
    this.tariffId = tariffId;
    return this;
  }

  /**
   * Get tariffId
   * @return tariffId
   */
  @javax.annotation.Nullable
  public Integer getTariffId() {
    return tariffId;
  }

  public void setTariffId(@javax.annotation.Nullable Integer tariffId) {
    this.tariffId = tariffId;
  }


  public WalletObjectWalletsInner eventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
    return this;
  }

  /**
   * Get eventName
   * @return eventName
   */
  @javax.annotation.Nullable
  public String getEventName() {
    return eventName;
  }

  public void setEventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
  }


  @Deprecated
  public WalletObjectWalletsInner eventAlias(@javax.annotation.Nullable String eventAlias) {
    this.eventAlias = eventAlias;
    return this;
  }

  /**
   * Get eventAlias
   * @return eventAlias
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getEventAlias() {
    return eventAlias;
  }

  @Deprecated
  public void setEventAlias(@javax.annotation.Nullable String eventAlias) {
    this.eventAlias = eventAlias;
  }


  @Deprecated
  public WalletObjectWalletsInner eventDate(@javax.annotation.Nullable String eventDate) {
    this.eventDate = eventDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return eventDate
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getEventDate() {
    return eventDate;
  }

  @Deprecated
  public void setEventDate(@javax.annotation.Nullable String eventDate) {
    this.eventDate = eventDate;
  }


  public WalletObjectWalletsInner eventMessage(@javax.annotation.Nullable String eventMessage) {
    this.eventMessage = eventMessage;
    return this;
  }

  /**
   * Get eventMessage
   * @return eventMessage
   */
  @javax.annotation.Nullable
  public String getEventMessage() {
    return eventMessage;
  }

  public void setEventMessage(@javax.annotation.Nullable String eventMessage) {
    this.eventMessage = eventMessage;
  }


  @Deprecated
  public WalletObjectWalletsInner eventPayinStartDate(@javax.annotation.Nullable String eventPayinStartDate) {
    this.eventPayinStartDate = eventPayinStartDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return eventPayinStartDate
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getEventPayinStartDate() {
    return eventPayinStartDate;
  }

  @Deprecated
  public void setEventPayinStartDate(@javax.annotation.Nullable String eventPayinStartDate) {
    this.eventPayinStartDate = eventPayinStartDate;
  }


  @Deprecated
  public WalletObjectWalletsInner eventPayinEndDate(@javax.annotation.Nullable String eventPayinEndDate) {
    this.eventPayinEndDate = eventPayinEndDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return eventPayinEndDate
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getEventPayinEndDate() {
    return eventPayinEndDate;
  }

  @Deprecated
  public void setEventPayinEndDate(@javax.annotation.Nullable String eventPayinEndDate) {
    this.eventPayinEndDate = eventPayinEndDate;
  }


  @Deprecated
  public WalletObjectWalletsInner contractSigned(@javax.annotation.Nullable Integer contractSigned) {
    this.contractSigned = contractSigned;
    return this;
  }

  /**
   * Get contractSigned
   * @return contractSigned
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getContractSigned() {
    return contractSigned;
  }

  @Deprecated
  public void setContractSigned(@javax.annotation.Nullable Integer contractSigned) {
    this.contractSigned = contractSigned;
  }


  public WalletObjectWalletsInner bic(@javax.annotation.Nullable String bic) {
    this.bic = bic;
    return this;
  }

  /**
   * Get bic
   * @return bic
   */
  @javax.annotation.Nullable
  public String getBic() {
    return bic;
  }

  public void setBic(@javax.annotation.Nullable String bic) {
    this.bic = bic;
  }


  public WalletObjectWalletsInner iban(@javax.annotation.Nullable String iban) {
    this.iban = iban;
    return this;
  }

  /**
   * Get iban
   * @return iban
   */
  @javax.annotation.Nullable
  public String getIban() {
    return iban;
  }

  public void setIban(@javax.annotation.Nullable String iban) {
    this.iban = iban;
  }


  @Deprecated
  public WalletObjectWalletsInner urlImage(@javax.annotation.Nullable String urlImage) {
    this.urlImage = urlImage;
    return this;
  }

  /**
   * Get urlImage
   * @return urlImage
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getUrlImage() {
    return urlImage;
  }

  @Deprecated
  public void setUrlImage(@javax.annotation.Nullable String urlImage) {
    this.urlImage = urlImage;
  }


  public WalletObjectWalletsInner currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }


  public WalletObjectWalletsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public WalletObjectWalletsInner modifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public WalletObjectWalletsInner payinCount(@javax.annotation.Nullable Integer payinCount) {
    this.payinCount = payinCount;
    return this;
  }

  /**
   * Get payinCount
   * @return payinCount
   */
  @javax.annotation.Nullable
  public Integer getPayinCount() {
    return payinCount;
  }

  public void setPayinCount(@javax.annotation.Nullable Integer payinCount) {
    this.payinCount = payinCount;
  }


  public WalletObjectWalletsInner payoutCount(@javax.annotation.Nullable Integer payoutCount) {
    this.payoutCount = payoutCount;
    return this;
  }

  /**
   * Get payoutCount
   * @return payoutCount
   */
  @javax.annotation.Nullable
  public Integer getPayoutCount() {
    return payoutCount;
  }

  public void setPayoutCount(@javax.annotation.Nullable Integer payoutCount) {
    this.payoutCount = payoutCount;
  }


  public WalletObjectWalletsInner transferCount(@javax.annotation.Nullable Integer transferCount) {
    this.transferCount = transferCount;
    return this;
  }

  /**
   * Get transferCount
   * @return transferCount
   */
  @javax.annotation.Nullable
  public Integer getTransferCount() {
    return transferCount;
  }

  public void setTransferCount(@javax.annotation.Nullable Integer transferCount) {
    this.transferCount = transferCount;
  }


  public WalletObjectWalletsInner solde(@javax.annotation.Nullable Integer solde) {
    this.solde = solde;
    return this;
  }

  /**
   * Get solde
   * @return solde
   */
  @javax.annotation.Nullable
  public Integer getSolde() {
    return solde;
  }

  public void setSolde(@javax.annotation.Nullable Integer solde) {
    this.solde = solde;
  }


  public WalletObjectWalletsInner authorizedBalance(@javax.annotation.Nullable Integer authorizedBalance) {
    this.authorizedBalance = authorizedBalance;
    return this;
  }

  /**
   * Get authorizedBalance
   * @return authorizedBalance
   */
  @javax.annotation.Nullable
  public Integer getAuthorizedBalance() {
    return authorizedBalance;
  }

  public void setAuthorizedBalance(@javax.annotation.Nullable Integer authorizedBalance) {
    this.authorizedBalance = authorizedBalance;
  }


  public WalletObjectWalletsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletObjectWalletsInner walletObjectWalletsInner = (WalletObjectWalletsInner) o;
    return Objects.equals(this.walletId, walletObjectWalletsInner.walletId) &&
        Objects.equals(this.walletTypeId, walletObjectWalletsInner.walletTypeId) &&
        Objects.equals(this.walletStatus, walletObjectWalletsInner.walletStatus) &&
        Objects.equals(this.codeStatus, walletObjectWalletsInner.codeStatus) &&
        Objects.equals(this.informationStatus, walletObjectWalletsInner.informationStatus) &&
        Objects.equals(this.walletTag, walletObjectWalletsInner.walletTag) &&
        Objects.equals(this.userId, walletObjectWalletsInner.userId) &&
        Objects.equals(this.userLastname, walletObjectWalletsInner.userLastname) &&
        Objects.equals(this.userFirstname, walletObjectWalletsInner.userFirstname) &&
        Objects.equals(this.jointUserId, walletObjectWalletsInner.jointUserId) &&
        Objects.equals(this.tariffId, walletObjectWalletsInner.tariffId) &&
        Objects.equals(this.eventName, walletObjectWalletsInner.eventName) &&
        Objects.equals(this.eventAlias, walletObjectWalletsInner.eventAlias) &&
        Objects.equals(this.eventDate, walletObjectWalletsInner.eventDate) &&
        Objects.equals(this.eventMessage, walletObjectWalletsInner.eventMessage) &&
        Objects.equals(this.eventPayinStartDate, walletObjectWalletsInner.eventPayinStartDate) &&
        Objects.equals(this.eventPayinEndDate, walletObjectWalletsInner.eventPayinEndDate) &&
        Objects.equals(this.contractSigned, walletObjectWalletsInner.contractSigned) &&
        Objects.equals(this.bic, walletObjectWalletsInner.bic) &&
        Objects.equals(this.iban, walletObjectWalletsInner.iban) &&
        Objects.equals(this.urlImage, walletObjectWalletsInner.urlImage) &&
        Objects.equals(this.currency, walletObjectWalletsInner.currency) &&
        Objects.equals(this.createdDate, walletObjectWalletsInner.createdDate) &&
        Objects.equals(this.modifiedDate, walletObjectWalletsInner.modifiedDate) &&
        Objects.equals(this.payinCount, walletObjectWalletsInner.payinCount) &&
        Objects.equals(this.payoutCount, walletObjectWalletsInner.payoutCount) &&
        Objects.equals(this.transferCount, walletObjectWalletsInner.transferCount) &&
        Objects.equals(this.solde, walletObjectWalletsInner.solde) &&
        Objects.equals(this.authorizedBalance, walletObjectWalletsInner.authorizedBalance) &&
        Objects.equals(this.totalRows, walletObjectWalletsInner.totalRows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(walletId, walletTypeId, walletStatus, codeStatus, informationStatus, walletTag, userId, userLastname, userFirstname, jointUserId, tariffId, eventName, eventAlias, eventDate, eventMessage, eventPayinStartDate, eventPayinEndDate, contractSigned, bic, iban, urlImage, currency, createdDate, modifiedDate, payinCount, payoutCount, transferCount, solde, authorizedBalance, totalRows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletObjectWalletsInner {\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    walletTypeId: ").append(toIndentedString(walletTypeId)).append("\n");
    sb.append("    walletStatus: ").append(toIndentedString(walletStatus)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    walletTag: ").append(toIndentedString(walletTag)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userLastname: ").append(toIndentedString(userLastname)).append("\n");
    sb.append("    userFirstname: ").append(toIndentedString(userFirstname)).append("\n");
    sb.append("    jointUserId: ").append(toIndentedString(jointUserId)).append("\n");
    sb.append("    tariffId: ").append(toIndentedString(tariffId)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventAlias: ").append(toIndentedString(eventAlias)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    eventMessage: ").append(toIndentedString(eventMessage)).append("\n");
    sb.append("    eventPayinStartDate: ").append(toIndentedString(eventPayinStartDate)).append("\n");
    sb.append("    eventPayinEndDate: ").append(toIndentedString(eventPayinEndDate)).append("\n");
    sb.append("    contractSigned: ").append(toIndentedString(contractSigned)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    urlImage: ").append(toIndentedString(urlImage)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    payinCount: ").append(toIndentedString(payinCount)).append("\n");
    sb.append("    payoutCount: ").append(toIndentedString(payoutCount)).append("\n");
    sb.append("    transferCount: ").append(toIndentedString(transferCount)).append("\n");
    sb.append("    solde: ").append(toIndentedString(solde)).append("\n");
    sb.append("    authorizedBalance: ").append(toIndentedString(authorizedBalance)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("walletId");
    openapiFields.add("walletTypeId");
    openapiFields.add("walletStatus");
    openapiFields.add("codeStatus");
    openapiFields.add("informationStatus");
    openapiFields.add("walletTag");
    openapiFields.add("userId");
    openapiFields.add("userLastname");
    openapiFields.add("userFirstname");
    openapiFields.add("jointUserId");
    openapiFields.add("tariffId");
    openapiFields.add("eventName");
    openapiFields.add("eventAlias");
    openapiFields.add("eventDate");
    openapiFields.add("eventMessage");
    openapiFields.add("eventPayinStartDate");
    openapiFields.add("eventPayinEndDate");
    openapiFields.add("contractSigned");
    openapiFields.add("bic");
    openapiFields.add("iban");
    openapiFields.add("urlImage");
    openapiFields.add("currency");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("payinCount");
    openapiFields.add("payoutCount");
    openapiFields.add("transferCount");
    openapiFields.add("solde");
    openapiFields.add("authorizedBalance");
    openapiFields.add("totalRows");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WalletObjectWalletsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WalletObjectWalletsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WalletObjectWalletsInner is not found in the empty JSON string", WalletObjectWalletsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WalletObjectWalletsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WalletObjectWalletsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `walletTypeId`
      if (jsonObj.get("walletTypeId") != null && !jsonObj.get("walletTypeId").isJsonNull()) {
        WalletTypeIdEnum.validateJsonElement(jsonObj.get("walletTypeId"));
      }
      if ((jsonObj.get("walletStatus") != null && !jsonObj.get("walletStatus").isJsonNull()) && !jsonObj.get("walletStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletStatus").toString()));
      }
      // validate the optional field `walletStatus`
      if (jsonObj.get("walletStatus") != null && !jsonObj.get("walletStatus").isJsonNull()) {
        WalletStatusEnum.validateJsonElement(jsonObj.get("walletStatus"));
      }
      if ((jsonObj.get("informationStatus") != null && !jsonObj.get("informationStatus").isJsonNull()) && !jsonObj.get("informationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `informationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("informationStatus").toString()));
      }
      if ((jsonObj.get("walletTag") != null && !jsonObj.get("walletTag").isJsonNull()) && !jsonObj.get("walletTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletTag").toString()));
      }
      if ((jsonObj.get("userLastname") != null && !jsonObj.get("userLastname").isJsonNull()) && !jsonObj.get("userLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLastname").toString()));
      }
      if ((jsonObj.get("userFirstname") != null && !jsonObj.get("userFirstname").isJsonNull()) && !jsonObj.get("userFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstname").toString()));
      }
      if ((jsonObj.get("eventName") != null && !jsonObj.get("eventName").isJsonNull()) && !jsonObj.get("eventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventName").toString()));
      }
      if ((jsonObj.get("eventAlias") != null && !jsonObj.get("eventAlias").isJsonNull()) && !jsonObj.get("eventAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventAlias").toString()));
      }
      if ((jsonObj.get("eventDate") != null && !jsonObj.get("eventDate").isJsonNull()) && !jsonObj.get("eventDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventDate").toString()));
      }
      if ((jsonObj.get("eventMessage") != null && !jsonObj.get("eventMessage").isJsonNull()) && !jsonObj.get("eventMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventMessage").toString()));
      }
      if ((jsonObj.get("eventPayinStartDate") != null && !jsonObj.get("eventPayinStartDate").isJsonNull()) && !jsonObj.get("eventPayinStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventPayinStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventPayinStartDate").toString()));
      }
      if ((jsonObj.get("eventPayinEndDate") != null && !jsonObj.get("eventPayinEndDate").isJsonNull()) && !jsonObj.get("eventPayinEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventPayinEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventPayinEndDate").toString()));
      }
      if ((jsonObj.get("bic") != null && !jsonObj.get("bic").isJsonNull()) && !jsonObj.get("bic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bic").toString()));
      }
      if ((jsonObj.get("iban") != null && !jsonObj.get("iban").isJsonNull()) && !jsonObj.get("iban").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iban` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iban").toString()));
      }
      if ((jsonObj.get("urlImage") != null && !jsonObj.get("urlImage").isJsonNull()) && !jsonObj.get("urlImage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlImage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlImage").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WalletObjectWalletsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WalletObjectWalletsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WalletObjectWalletsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WalletObjectWalletsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<WalletObjectWalletsInner>() {
           @Override
           public void write(JsonWriter out, WalletObjectWalletsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WalletObjectWalletsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WalletObjectWalletsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WalletObjectWalletsInner
   * @throws IOException if the JSON string is invalid with respect to WalletObjectWalletsInner
   */
  public static WalletObjectWalletsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WalletObjectWalletsInner.class);
  }

  /**
   * Convert an instance of WalletObjectWalletsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

