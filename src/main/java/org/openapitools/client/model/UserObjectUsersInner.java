/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserObjectUsersInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class UserObjectUsersInner {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  /**
   * Gets or Sets userStatus
   */
  @JsonAdapter(UserStatusEnum.Adapter.class)
  public enum UserStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    UserStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UserStatusEnum fromValue(String value) {
      for (UserStatusEnum b : UserStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UserStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UserStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      UserStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_USER_STATUS = "userStatus";
  @SerializedName(SERIALIZED_NAME_USER_STATUS)
  @javax.annotation.Nullable
  private UserStatusEnum userStatus;

  public static final String SERIALIZED_NAME_USER_TAG = "userTag";
  @SerializedName(SERIALIZED_NAME_USER_TAG)
  @javax.annotation.Nullable
  private String userTag;

  public static final String SERIALIZED_NAME_PARENT_USER_ID = "parentUserId";
  @SerializedName(SERIALIZED_NAME_PARENT_USER_ID)
  @javax.annotation.Nullable
  private Integer parentUserId;

  /**
   * Gets or Sets parentType
   */
  @JsonAdapter(ParentTypeEnum.Adapter.class)
  public enum ParentTypeEnum {
    SHAREHOLDER("shareholder"),
    
    EMPLOYEE("employee"),
    
    LEADER("leader");

    private String value;

    ParentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ParentTypeEnum fromValue(String value) {
      for (ParentTypeEnum b : ParentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ParentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ParentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ParentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ParentTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ParentTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PARENT_TYPE = "parentType";
  @SerializedName(SERIALIZED_NAME_PARENT_TYPE)
  @javax.annotation.Nullable
  private ParentTypeEnum parentType;

  public static final String SERIALIZED_NAME_CONTROLLING_PERSON_TYPE = "controllingPersonType";
  @SerializedName(SERIALIZED_NAME_CONTROLLING_PERSON_TYPE)
  @javax.annotation.Nullable
  private Integer controllingPersonType;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE = "employeeType";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE)
  @javax.annotation.Nullable
  private Integer employeeType;

  public static final String SERIALIZED_NAME_SPECIFIED_U_S_PERSON = "specifiedUSPerson";
  @SerializedName(SERIALIZED_NAME_SPECIFIED_U_S_PERSON)
  @javax.annotation.Nullable
  private Integer specifiedUSPerson;

  /**
   * Gets or Sets title
   */
  @JsonAdapter(TitleEnum.Adapter.class)
  public enum TitleEnum {
    M("M"),
    
    MME("MME"),
    
    MLLE("MLLE");

    private String value;

    TitleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TitleEnum fromValue(String value) {
      for (TitleEnum b : TitleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TitleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TitleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TitleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TitleEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TitleEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  @javax.annotation.Nullable
  private TitleEnum title;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  @javax.annotation.Nullable
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  @javax.annotation.Nullable
  private String lastname;

  public static final String SERIALIZED_NAME_MIDDLE_NAMES = "middleNames";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAMES)
  @javax.annotation.Nullable
  private String middleNames;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  @javax.annotation.Nullable
  private String birthday;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  @javax.annotation.Nullable
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  @javax.annotation.Nullable
  private String address2;

  public static final String SERIALIZED_NAME_ADDRESS3 = "address3";
  @SerializedName(SERIALIZED_NAME_ADDRESS3)
  @javax.annotation.Nullable
  private String address3;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  @javax.annotation.Nullable
  private String postcode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  @javax.annotation.Nullable
  private String city;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  @javax.annotation.Nullable
  private String state;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  @javax.annotation.Nullable
  private String country;

  public static final String SERIALIZED_NAME_COUNTRY_NAME = "countryName";
  @SerializedName(SERIALIZED_NAME_COUNTRY_NAME)
  @javax.annotation.Nullable
  private String countryName;

  /**
   * The country in which the end user is using your services. 
   */
  @JsonAdapter(DistributionCountryEnum.Adapter.class)
  public enum DistributionCountryEnum {
    FR("FR"),
    
    ES("ES"),
    
    IT("IT"),
    
    DE("DE"),
    
    BE("BE"),
    
    NL("NL");

    private String value;

    DistributionCountryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DistributionCountryEnum fromValue(String value) {
      for (DistributionCountryEnum b : DistributionCountryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DistributionCountryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DistributionCountryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DistributionCountryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DistributionCountryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DistributionCountryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DISTRIBUTION_COUNTRY = "distributionCountry";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_COUNTRY)
  @javax.annotation.Nullable
  private DistributionCountryEnum distributionCountry;

  public static final String SERIALIZED_NAME_SECONDARY_ADDRESS1 = "secondaryAddress1";
  @SerializedName(SERIALIZED_NAME_SECONDARY_ADDRESS1)
  @javax.annotation.Nullable
  private String secondaryAddress1;

  public static final String SERIALIZED_NAME_SECONDARY_ADDRESS2 = "secondaryAddress2";
  @SerializedName(SERIALIZED_NAME_SECONDARY_ADDRESS2)
  @javax.annotation.Nullable
  private String secondaryAddress2;

  public static final String SERIALIZED_NAME_SECONDARY_ADDRESS3 = "secondaryAddress3";
  @SerializedName(SERIALIZED_NAME_SECONDARY_ADDRESS3)
  @javax.annotation.Nullable
  private String secondaryAddress3;

  public static final String SERIALIZED_NAME_SECONDARY_POSTCODE = "secondaryPostcode";
  @SerializedName(SERIALIZED_NAME_SECONDARY_POSTCODE)
  @javax.annotation.Nullable
  private String secondaryPostcode;

  public static final String SERIALIZED_NAME_SECONDARY_CITY = "secondaryCity";
  @SerializedName(SERIALIZED_NAME_SECONDARY_CITY)
  @javax.annotation.Nullable
  private String secondaryCity;

  public static final String SERIALIZED_NAME_SECONDARY_STATE = "secondaryState";
  @SerializedName(SERIALIZED_NAME_SECONDARY_STATE)
  @javax.annotation.Nullable
  private String secondaryState;

  public static final String SERIALIZED_NAME_SECONDARY_COUNTRY = "secondaryCountry";
  @SerializedName(SERIALIZED_NAME_SECONDARY_COUNTRY)
  @javax.annotation.Nullable
  private String secondaryCountry;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  @javax.annotation.Nullable
  private String mobile;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  @javax.annotation.Nullable
  private String nationality;

  public static final String SERIALIZED_NAME_NATIONALITY_OTHER = "nationalityOther";
  @SerializedName(SERIALIZED_NAME_NATIONALITY_OTHER)
  @javax.annotation.Nullable
  private String nationalityOther;

  public static final String SERIALIZED_NAME_PLACE_OF_BIRTH = "placeOfBirth";
  @SerializedName(SERIALIZED_NAME_PLACE_OF_BIRTH)
  @javax.annotation.Nullable
  private String placeOfBirth;

  public static final String SERIALIZED_NAME_BIRTH_COUNTRY = "birthCountry";
  @SerializedName(SERIALIZED_NAME_BIRTH_COUNTRY)
  @javax.annotation.Nullable
  private String birthCountry;

  public static final String SERIALIZED_NAME_OCCUPATION = "occupation";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_OCCUPATION)
  @javax.annotation.Nullable
  private String occupation;

  public static final String SERIALIZED_NAME_INCOME_RANGE = "incomeRange";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INCOME_RANGE)
  @javax.annotation.Nullable
  private String incomeRange;

  public static final String SERIALIZED_NAME_LEGAL_NAME = "legalName";
  @SerializedName(SERIALIZED_NAME_LEGAL_NAME)
  @javax.annotation.Nullable
  private String legalName;

  public static final String SERIALIZED_NAME_LEGAL_NAME_EMBOSSED = "legalNameEmbossed";
  @SerializedName(SERIALIZED_NAME_LEGAL_NAME_EMBOSSED)
  @javax.annotation.Nullable
  private String legalNameEmbossed;

  public static final String SERIALIZED_NAME_LEGAL_REGISTRATION_NUMBER = "legalRegistrationNumber";
  @SerializedName(SERIALIZED_NAME_LEGAL_REGISTRATION_NUMBER)
  @javax.annotation.Nullable
  private String legalRegistrationNumber;

  public static final String SERIALIZED_NAME_LEGAL_TVA_NUMBER = "legalTvaNumber";
  @SerializedName(SERIALIZED_NAME_LEGAL_TVA_NUMBER)
  @javax.annotation.Nullable
  private String legalTvaNumber;

  public static final String SERIALIZED_NAME_LEGAL_REGISTRATION_DATE = "legalRegistrationDate";
  @SerializedName(SERIALIZED_NAME_LEGAL_REGISTRATION_DATE)
  @javax.annotation.Nullable
  private String legalRegistrationDate;

  public static final String SERIALIZED_NAME_LEGAL_FORM = "legalForm";
  @SerializedName(SERIALIZED_NAME_LEGAL_FORM)
  @javax.annotation.Nullable
  private String legalForm;

  public static final String SERIALIZED_NAME_LEGAL_SHARE_CAPITAL = "legalShareCapital";
  @SerializedName(SERIALIZED_NAME_LEGAL_SHARE_CAPITAL)
  @javax.annotation.Nullable
  private Integer legalShareCapital;

  public static final String SERIALIZED_NAME_LEGAL_SECTOR = "legalSector";
  @SerializedName(SERIALIZED_NAME_LEGAL_SECTOR)
  @javax.annotation.Nullable
  private String legalSector;

  public static final String SERIALIZED_NAME_LEGAL_ANNUAL_TURN_OVER = "legalAnnualTurnOver";
  @SerializedName(SERIALIZED_NAME_LEGAL_ANNUAL_TURN_OVER)
  @javax.annotation.Nullable
  private String legalAnnualTurnOver;

  public static final String SERIALIZED_NAME_LEGAL_NET_INCOME_RANGE = "legalNetIncomeRange";
  @SerializedName(SERIALIZED_NAME_LEGAL_NET_INCOME_RANGE)
  @javax.annotation.Nullable
  private String legalNetIncomeRange;

  public static final String SERIALIZED_NAME_LEGAL_NUMBER_OF_EMPLOYEE_RANGE = "legalNumberOfEmployeeRange";
  @SerializedName(SERIALIZED_NAME_LEGAL_NUMBER_OF_EMPLOYEE_RANGE)
  @javax.annotation.Nullable
  private String legalNumberOfEmployeeRange;

  public static final String SERIALIZED_NAME_EFFECTIVE_BENEFICIARY = "effectiveBeneficiary";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_BENEFICIARY)
  @javax.annotation.Nullable
  private Integer effectiveBeneficiary;

  /**
   * * &#x60;0&#x60; – NONE * &#x60;1&#x60; – LIGHT * &#x60;2&#x60; – REGULAR * &#x60;3&#x60; – STRONG * &#x60;4&#x60; – REFUSED * &#x60;5&#x60; – PREVALIDATED * &#x60;6&#x60; – ENHANCED 
   */
  @JsonAdapter(KycLevelEnum.Adapter.class)
  public enum KycLevelEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    KycLevelEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KycLevelEnum fromValue(Integer value) {
      for (KycLevelEnum b : KycLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KycLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KycLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KycLevelEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return KycLevelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      KycLevelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_KYC_LEVEL = "kycLevel";
  @SerializedName(SERIALIZED_NAME_KYC_LEVEL)
  @javax.annotation.Nullable
  private KycLevelEnum kycLevel;

  /**
   * * &#x60;0&#x60; – NONE * &#x60;1&#x60; – PENDING * &#x60;2&#x60; – VALIDATED * &#x60;3&#x60; – REFUSED * &#x60;4&#x60; – INVESTIGATING (deprecated) * &#x60;5&#x60; – CLOSED (deprecated) * &#x60;6&#x60; – REVIEW_OPEN * &#x60;7&#x60; – REVIEW_PENDING 
   */
  @JsonAdapter(KycReviewEnum.Adapter.class)
  public enum KycReviewEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_6(6),
    
    NUMBER_7(7);

    private Integer value;

    KycReviewEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KycReviewEnum fromValue(Integer value) {
      for (KycReviewEnum b : KycReviewEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KycReviewEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KycReviewEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KycReviewEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return KycReviewEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      KycReviewEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_KYC_REVIEW = "kycReview";
  @SerializedName(SERIALIZED_NAME_KYC_REVIEW)
  @javax.annotation.Nullable
  private KycReviewEnum kycReview;

  public static final String SERIALIZED_NAME_KYC_REVIEW_COMMENT = "kycReviewComment";
  @SerializedName(SERIALIZED_NAME_KYC_REVIEW_COMMENT)
  @javax.annotation.Nullable
  private String kycReviewComment;

  public static final String SERIALIZED_NAME_IS_FREEZED = "isFreezed";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_IS_FREEZED)
  @javax.annotation.Nullable
  private Integer isFreezed;

  public static final String SERIALIZED_NAME_IS_FROZEN = "isFrozen";
  @SerializedName(SERIALIZED_NAME_IS_FROZEN)
  @javax.annotation.Nullable
  private Integer isFrozen;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private String language;

  public static final String SERIALIZED_NAME_OPT_IN_MAILING = "optInMailing";
  @SerializedName(SERIALIZED_NAME_OPT_IN_MAILING)
  @javax.annotation.Nullable
  private Integer optInMailing;

  public static final String SERIALIZED_NAME_SEPA_CREDITOR_IDENTIFIER = "sepaCreditorIdentifier";
  @SerializedName(SERIALIZED_NAME_SEPA_CREDITOR_IDENTIFIER)
  @javax.annotation.Nullable
  private String sepaCreditorIdentifier;

  public static final String SERIALIZED_NAME_TAX_NUMBER = "taxNumber";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TAX_NUMBER)
  @javax.annotation.Nullable
  private String taxNumber;

  public static final String SERIALIZED_NAME_TAX_RESIDENCE = "taxResidence";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TAX_RESIDENCE)
  @javax.annotation.Nullable
  private String taxResidence;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  @javax.annotation.Nullable
  private String position;

  public static final String SERIALIZED_NAME_PERSONAL_ASSETS = "personalAssets";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PERSONAL_ASSETS)
  @javax.annotation.Nullable
  private String personalAssets;

  public static final String SERIALIZED_NAME_ACTIVITY_OUTSIDE_EU = "activityOutsideEu";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_OUTSIDE_EU)
  @javax.annotation.Nullable
  private Integer activityOutsideEu;

  public static final String SERIALIZED_NAME_ECONOMIC_SANCTIONS = "economicSanctions";
  @SerializedName(SERIALIZED_NAME_ECONOMIC_SANCTIONS)
  @javax.annotation.Nullable
  private Integer economicSanctions;

  public static final String SERIALIZED_NAME_RESIDENT_COUNTRIES_SANCTIONS = "residentCountriesSanctions";
  @SerializedName(SERIALIZED_NAME_RESIDENT_COUNTRIES_SANCTIONS)
  @javax.annotation.Nullable
  private Integer residentCountriesSanctions;

  public static final String SERIALIZED_NAME_INVOLVED_SANCTIONS = "involvedSanctions";
  @SerializedName(SERIALIZED_NAME_INVOLVED_SANCTIONS)
  @javax.annotation.Nullable
  private Integer involvedSanctions;

  /**
   * Defines the scope to which the &#x60;activityOutsideEu&#x60; field applies. 
   */
  @JsonAdapter(EntitySanctionsQuestionnaireEnum.Adapter.class)
  public enum EntitySanctionsQuestionnaireEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    EntitySanctionsQuestionnaireEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntitySanctionsQuestionnaireEnum fromValue(Integer value) {
      for (EntitySanctionsQuestionnaireEnum b : EntitySanctionsQuestionnaireEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntitySanctionsQuestionnaireEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntitySanctionsQuestionnaireEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntitySanctionsQuestionnaireEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return EntitySanctionsQuestionnaireEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      EntitySanctionsQuestionnaireEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_SANCTIONS_QUESTIONNAIRE = "entitySanctionsQuestionnaire";
  @SerializedName(SERIALIZED_NAME_ENTITY_SANCTIONS_QUESTIONNAIRE)
  @javax.annotation.Nullable
  private EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire;

  public static final String SERIALIZED_NAME_SANCTIONS_QUESTIONNAIRE_DATE = "sanctionsQuestionnaireDate";
  @SerializedName(SERIALIZED_NAME_SANCTIONS_QUESTIONNAIRE_DATE)
  @javax.annotation.Nullable
  private String sanctionsQuestionnaireDate;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  @javax.annotation.Nullable
  private String timezone;

  /**
   * Deprecated. Use &#x60;occupationCategory&#x60; instead.
   */
  @JsonAdapter(OccupationTypeEnum.Adapter.class)
  public enum OccupationTypeEnum {
    SELF_EMPLOYED("self_employed"),
    
    PUBLIC_SECTOR_EMPLOYEES("public_sector_employees"),
    
    PRIVATE_SECTOR_EMPLOYEES("private_sector_employees"),
    
    RETIRED_PEOPLE_AND_STUDENTS("retired_people_and_students"),
    
    WITHOUT_ANY_PROFESSIONAL_ACTIVITY("without_any_professional_activity");

    private String value;

    OccupationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OccupationTypeEnum fromValue(String value) {
      for (OccupationTypeEnum b : OccupationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OccupationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OccupationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OccupationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OccupationTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OccupationTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OCCUPATION_TYPE = "occupationType";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_OCCUPATION_TYPE)
  @javax.annotation.Nullable
  private OccupationTypeEnum occupationType;

  /**
   * The source of funds for opening an account for a company or self-employed person
   */
  @JsonAdapter(SourceOfFundsEnum.Adapter.class)
  public enum SourceOfFundsEnum {
    DONATION("donation"),
    
    INHERITANCE("inheritance"),
    
    LOAN("loan"),
    
    LOTTERY("lottery"),
    
    PENSION("pension"),
    
    PROCEEDS_FROM_INVESTMENT("proceeds_from_investment"),
    
    PROCEEDS_FROM_SALE("proceeds_from_sale"),
    
    SALARY("salary"),
    
    SAVINGS("savings");

    private String value;

    SourceOfFundsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceOfFundsEnum fromValue(String value) {
      for (SourceOfFundsEnum b : SourceOfFundsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceOfFundsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceOfFundsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceOfFundsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceOfFundsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SourceOfFundsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SOURCE_OF_FUNDS = "sourceOfFunds";
  @SerializedName(SERIALIZED_NAME_SOURCE_OF_FUNDS)
  @javax.annotation.Nullable
  private SourceOfFundsEnum sourceOfFunds;

  /**
   * Qualify the type of data in the &#x60;legalSector&#x60; field    * If it is set to NACE the legalSector needs to be in a NACE format (4 digits).    * If it is set to NAF (or not set at all) the legalSector needs to be in a NAF format (4 digits followed by a capital letter). 
   */
  @JsonAdapter(LegalSectorTypeEnum.Adapter.class)
  public enum LegalSectorTypeEnum {
    NAF("NAF"),
    
    NACE("NACE");

    private String value;

    LegalSectorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LegalSectorTypeEnum fromValue(String value) {
      for (LegalSectorTypeEnum b : LegalSectorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LegalSectorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LegalSectorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LegalSectorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LegalSectorTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LegalSectorTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LEGAL_SECTOR_TYPE = "legalSectorType";
  @SerializedName(SERIALIZED_NAME_LEGAL_SECTOR_TYPE)
  @javax.annotation.Nullable
  private LegalSectorTypeEnum legalSectorType;

  public static final String SERIALIZED_NAME_IS_ON_STOCK_EXCHANGE = "isOnStockExchange";
  @SerializedName(SERIALIZED_NAME_IS_ON_STOCK_EXCHANGE)
  @javax.annotation.Nullable
  private Integer isOnStockExchange;

  public static final String SERIALIZED_NAME_CODE_STATUS = "codeStatus";
  @SerializedName(SERIALIZED_NAME_CODE_STATUS)
  @javax.annotation.Nullable
  private String codeStatus;

  public static final String SERIALIZED_NAME_INFORMATION_STATUS = "informationStatus";
  @SerializedName(SERIALIZED_NAME_INFORMATION_STATUS)
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  @javax.annotation.Nullable
  private String modifiedDate;

  public static final String SERIALIZED_NAME_WALLET_COUNT = "walletCount";
  @SerializedName(SERIALIZED_NAME_WALLET_COUNT)
  @javax.annotation.Nullable
  private Integer walletCount;

  public static final String SERIALIZED_NAME_PAYIN_COUNT = "payinCount";
  @SerializedName(SERIALIZED_NAME_PAYIN_COUNT)
  @javax.annotation.Nullable
  private Integer payinCount;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  /**
   * Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values. 
   */
  @JsonAdapter(OccupationCategoryEnum.Adapter.class)
  public enum OccupationCategoryEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14),
    
    NUMBER_15(15);

    private Integer value;

    OccupationCategoryEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OccupationCategoryEnum fromValue(Integer value) {
      for (OccupationCategoryEnum b : OccupationCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OccupationCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OccupationCategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OccupationCategoryEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return OccupationCategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      OccupationCategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OCCUPATION_CATEGORY = "occupationCategory";
  @SerializedName(SERIALIZED_NAME_OCCUPATION_CATEGORY)
  @javax.annotation.Nullable
  private OccupationCategoryEnum occupationCategory;

  /**
   * The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values. 
   */
  @JsonAdapter(PersonalAssetsRangeEnum.Adapter.class)
  public enum PersonalAssetsRangeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7);

    private Integer value;

    PersonalAssetsRangeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PersonalAssetsRangeEnum fromValue(Integer value) {
      for (PersonalAssetsRangeEnum b : PersonalAssetsRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PersonalAssetsRangeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PersonalAssetsRangeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PersonalAssetsRangeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return PersonalAssetsRangeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      PersonalAssetsRangeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PERSONAL_ASSETS_RANGE = "personalAssetsRange";
  @SerializedName(SERIALIZED_NAME_PERSONAL_ASSETS_RANGE)
  @javax.annotation.Nullable
  private PersonalAssetsRangeEnum personalAssetsRange;

  /**
   * Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values. 
   */
  @JsonAdapter(MonthlyIncomeRangeEnum.Adapter.class)
  public enum MonthlyIncomeRangeEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7);

    private Integer value;

    MonthlyIncomeRangeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MonthlyIncomeRangeEnum fromValue(Integer value) {
      for (MonthlyIncomeRangeEnum b : MonthlyIncomeRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MonthlyIncomeRangeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MonthlyIncomeRangeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MonthlyIncomeRangeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return MonthlyIncomeRangeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      MonthlyIncomeRangeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MONTHLY_INCOME_RANGE = "monthlyIncomeRange";
  @SerializedName(SERIALIZED_NAME_MONTHLY_INCOME_RANGE)
  @javax.annotation.Nullable
  private MonthlyIncomeRangeEnum monthlyIncomeRange;

  public UserObjectUsersInner() {
  }

  public UserObjectUsersInner(
     String sepaCreditorIdentifier
  ) {
    this();
    this.sepaCreditorIdentifier = sepaCreditorIdentifier;
  }

  public UserObjectUsersInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the User.
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public UserObjectUsersInner userStatus(@javax.annotation.Nullable UserStatusEnum userStatus) {
    this.userStatus = userStatus;
    return this;
  }

  /**
   * Get userStatus
   * @return userStatus
   */
  @javax.annotation.Nullable
  public UserStatusEnum getUserStatus() {
    return userStatus;
  }

  public void setUserStatus(@javax.annotation.Nullable UserStatusEnum userStatus) {
    this.userStatus = userStatus;
  }


  public UserObjectUsersInner userTag(@javax.annotation.Nullable String userTag) {
    this.userTag = userTag;
    return this;
  }

  /**
   * Get userTag
   * @return userTag
   */
  @javax.annotation.Nullable
  public String getUserTag() {
    return userTag;
  }

  public void setUserTag(@javax.annotation.Nullable String userTag) {
    this.userTag = userTag;
  }


  public UserObjectUsersInner parentUserId(@javax.annotation.Nullable Integer parentUserId) {
    this.parentUserId = parentUserId;
    return this;
  }

  /**
   * Get parentUserId
   * @return parentUserId
   */
  @javax.annotation.Nullable
  public Integer getParentUserId() {
    return parentUserId;
  }

  public void setParentUserId(@javax.annotation.Nullable Integer parentUserId) {
    this.parentUserId = parentUserId;
  }


  public UserObjectUsersInner parentType(@javax.annotation.Nullable ParentTypeEnum parentType) {
    this.parentType = parentType;
    return this;
  }

  /**
   * Get parentType
   * @return parentType
   */
  @javax.annotation.Nullable
  public ParentTypeEnum getParentType() {
    return parentType;
  }

  public void setParentType(@javax.annotation.Nullable ParentTypeEnum parentType) {
    this.parentType = parentType;
  }


  public UserObjectUsersInner controllingPersonType(@javax.annotation.Nullable Integer controllingPersonType) {
    this.controllingPersonType = controllingPersonType;
    return this;
  }

  /**
   * Get controllingPersonType
   * @return controllingPersonType
   */
  @javax.annotation.Nullable
  public Integer getControllingPersonType() {
    return controllingPersonType;
  }

  public void setControllingPersonType(@javax.annotation.Nullable Integer controllingPersonType) {
    this.controllingPersonType = controllingPersonType;
  }


  public UserObjectUsersInner employeeType(@javax.annotation.Nullable Integer employeeType) {
    this.employeeType = employeeType;
    return this;
  }

  /**
   * Get employeeType
   * @return employeeType
   */
  @javax.annotation.Nullable
  public Integer getEmployeeType() {
    return employeeType;
  }

  public void setEmployeeType(@javax.annotation.Nullable Integer employeeType) {
    this.employeeType = employeeType;
  }


  public UserObjectUsersInner specifiedUSPerson(@javax.annotation.Nullable Integer specifiedUSPerson) {
    this.specifiedUSPerson = specifiedUSPerson;
    return this;
  }

  /**
   * Get specifiedUSPerson
   * @return specifiedUSPerson
   */
  @javax.annotation.Nullable
  public Integer getSpecifiedUSPerson() {
    return specifiedUSPerson;
  }

  public void setSpecifiedUSPerson(@javax.annotation.Nullable Integer specifiedUSPerson) {
    this.specifiedUSPerson = specifiedUSPerson;
  }


  public UserObjectUsersInner title(@javax.annotation.Nullable TitleEnum title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public TitleEnum getTitle() {
    return title;
  }

  public void setTitle(@javax.annotation.Nullable TitleEnum title) {
    this.title = title;
  }


  public UserObjectUsersInner firstname(@javax.annotation.Nullable String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   */
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(@javax.annotation.Nullable String firstname) {
    this.firstname = firstname;
  }


  public UserObjectUsersInner lastname(@javax.annotation.Nullable String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Get lastname
   * @return lastname
   */
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(@javax.annotation.Nullable String lastname) {
    this.lastname = lastname;
  }


  public UserObjectUsersInner middleNames(@javax.annotation.Nullable String middleNames) {
    this.middleNames = middleNames;
    return this;
  }

  /**
   * Get middleNames
   * @return middleNames
   */
  @javax.annotation.Nullable
  public String getMiddleNames() {
    return middleNames;
  }

  public void setMiddleNames(@javax.annotation.Nullable String middleNames) {
    this.middleNames = middleNames;
  }


  public UserObjectUsersInner birthday(@javax.annotation.Nullable String birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public String getBirthday() {
    return birthday;
  }

  public void setBirthday(@javax.annotation.Nullable String birthday) {
    this.birthday = birthday;
  }


  public UserObjectUsersInner email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public UserObjectUsersInner address1(@javax.annotation.Nullable String address1) {
    this.address1 = address1;
    return this;
  }

  /**
   * Get address1
   * @return address1
   */
  @javax.annotation.Nullable
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(@javax.annotation.Nullable String address1) {
    this.address1 = address1;
  }


  public UserObjectUsersInner address2(@javax.annotation.Nullable String address2) {
    this.address2 = address2;
    return this;
  }

  /**
   * Get address2
   * @return address2
   */
  @javax.annotation.Nullable
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(@javax.annotation.Nullable String address2) {
    this.address2 = address2;
  }


  public UserObjectUsersInner address3(@javax.annotation.Nullable String address3) {
    this.address3 = address3;
    return this;
  }

  /**
   * Get address3
   * @return address3
   */
  @javax.annotation.Nullable
  public String getAddress3() {
    return address3;
  }

  public void setAddress3(@javax.annotation.Nullable String address3) {
    this.address3 = address3;
  }


  public UserObjectUsersInner postcode(@javax.annotation.Nullable String postcode) {
    this.postcode = postcode;
    return this;
  }

  /**
   * Get postcode
   * @return postcode
   */
  @javax.annotation.Nullable
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(@javax.annotation.Nullable String postcode) {
    this.postcode = postcode;
  }


  public UserObjectUsersInner city(@javax.annotation.Nullable String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }


  public UserObjectUsersInner state(@javax.annotation.Nullable String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(@javax.annotation.Nullable String state) {
    this.state = state;
  }


  public UserObjectUsersInner country(@javax.annotation.Nullable String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }


  public UserObjectUsersInner countryName(@javax.annotation.Nullable String countryName) {
    this.countryName = countryName;
    return this;
  }

  /**
   * Get countryName
   * @return countryName
   */
  @javax.annotation.Nullable
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(@javax.annotation.Nullable String countryName) {
    this.countryName = countryName;
  }


  public UserObjectUsersInner distributionCountry(@javax.annotation.Nullable DistributionCountryEnum distributionCountry) {
    this.distributionCountry = distributionCountry;
    return this;
  }

  /**
   * The country in which the end user is using your services. 
   * @return distributionCountry
   */
  @javax.annotation.Nullable
  public DistributionCountryEnum getDistributionCountry() {
    return distributionCountry;
  }

  public void setDistributionCountry(@javax.annotation.Nullable DistributionCountryEnum distributionCountry) {
    this.distributionCountry = distributionCountry;
  }


  public UserObjectUsersInner secondaryAddress1(@javax.annotation.Nullable String secondaryAddress1) {
    this.secondaryAddress1 = secondaryAddress1;
    return this;
  }

  /**
   * Get secondaryAddress1
   * @return secondaryAddress1
   */
  @javax.annotation.Nullable
  public String getSecondaryAddress1() {
    return secondaryAddress1;
  }

  public void setSecondaryAddress1(@javax.annotation.Nullable String secondaryAddress1) {
    this.secondaryAddress1 = secondaryAddress1;
  }


  public UserObjectUsersInner secondaryAddress2(@javax.annotation.Nullable String secondaryAddress2) {
    this.secondaryAddress2 = secondaryAddress2;
    return this;
  }

  /**
   * Get secondaryAddress2
   * @return secondaryAddress2
   */
  @javax.annotation.Nullable
  public String getSecondaryAddress2() {
    return secondaryAddress2;
  }

  public void setSecondaryAddress2(@javax.annotation.Nullable String secondaryAddress2) {
    this.secondaryAddress2 = secondaryAddress2;
  }


  public UserObjectUsersInner secondaryAddress3(@javax.annotation.Nullable String secondaryAddress3) {
    this.secondaryAddress3 = secondaryAddress3;
    return this;
  }

  /**
   * Get secondaryAddress3
   * @return secondaryAddress3
   */
  @javax.annotation.Nullable
  public String getSecondaryAddress3() {
    return secondaryAddress3;
  }

  public void setSecondaryAddress3(@javax.annotation.Nullable String secondaryAddress3) {
    this.secondaryAddress3 = secondaryAddress3;
  }


  public UserObjectUsersInner secondaryPostcode(@javax.annotation.Nullable String secondaryPostcode) {
    this.secondaryPostcode = secondaryPostcode;
    return this;
  }

  /**
   * Get secondaryPostcode
   * @return secondaryPostcode
   */
  @javax.annotation.Nullable
  public String getSecondaryPostcode() {
    return secondaryPostcode;
  }

  public void setSecondaryPostcode(@javax.annotation.Nullable String secondaryPostcode) {
    this.secondaryPostcode = secondaryPostcode;
  }


  public UserObjectUsersInner secondaryCity(@javax.annotation.Nullable String secondaryCity) {
    this.secondaryCity = secondaryCity;
    return this;
  }

  /**
   * Get secondaryCity
   * @return secondaryCity
   */
  @javax.annotation.Nullable
  public String getSecondaryCity() {
    return secondaryCity;
  }

  public void setSecondaryCity(@javax.annotation.Nullable String secondaryCity) {
    this.secondaryCity = secondaryCity;
  }


  public UserObjectUsersInner secondaryState(@javax.annotation.Nullable String secondaryState) {
    this.secondaryState = secondaryState;
    return this;
  }

  /**
   * Get secondaryState
   * @return secondaryState
   */
  @javax.annotation.Nullable
  public String getSecondaryState() {
    return secondaryState;
  }

  public void setSecondaryState(@javax.annotation.Nullable String secondaryState) {
    this.secondaryState = secondaryState;
  }


  public UserObjectUsersInner secondaryCountry(@javax.annotation.Nullable String secondaryCountry) {
    this.secondaryCountry = secondaryCountry;
    return this;
  }

  /**
   * Format ISO 3166-1 alpha-2
   * @return secondaryCountry
   */
  @javax.annotation.Nullable
  public String getSecondaryCountry() {
    return secondaryCountry;
  }

  public void setSecondaryCountry(@javax.annotation.Nullable String secondaryCountry) {
    this.secondaryCountry = secondaryCountry;
  }


  public UserObjectUsersInner phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public UserObjectUsersInner mobile(@javax.annotation.Nullable String mobile) {
    this.mobile = mobile;
    return this;
  }

  /**
   * Get mobile
   * @return mobile
   */
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }

  public void setMobile(@javax.annotation.Nullable String mobile) {
    this.mobile = mobile;
  }


  public UserObjectUsersInner nationality(@javax.annotation.Nullable String nationality) {
    this.nationality = nationality;
    return this;
  }

  /**
   * Format ISO 3166-1 alpha-2
   * @return nationality
   */
  @javax.annotation.Nullable
  public String getNationality() {
    return nationality;
  }

  public void setNationality(@javax.annotation.Nullable String nationality) {
    this.nationality = nationality;
  }


  public UserObjectUsersInner nationalityOther(@javax.annotation.Nullable String nationalityOther) {
    this.nationalityOther = nationalityOther;
    return this;
  }

  /**
   * Format ISO 3166-1 alpha-2
   * @return nationalityOther
   */
  @javax.annotation.Nullable
  public String getNationalityOther() {
    return nationalityOther;
  }

  public void setNationalityOther(@javax.annotation.Nullable String nationalityOther) {
    this.nationalityOther = nationalityOther;
  }


  public UserObjectUsersInner placeOfBirth(@javax.annotation.Nullable String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
    return this;
  }

  /**
   * Get placeOfBirth
   * @return placeOfBirth
   */
  @javax.annotation.Nullable
  public String getPlaceOfBirth() {
    return placeOfBirth;
  }

  public void setPlaceOfBirth(@javax.annotation.Nullable String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
  }


  public UserObjectUsersInner birthCountry(@javax.annotation.Nullable String birthCountry) {
    this.birthCountry = birthCountry;
    return this;
  }

  /**
   * Format ISO 3166-1 alpha-2
   * @return birthCountry
   */
  @javax.annotation.Nullable
  public String getBirthCountry() {
    return birthCountry;
  }

  public void setBirthCountry(@javax.annotation.Nullable String birthCountry) {
    this.birthCountry = birthCountry;
  }


  @Deprecated
  public UserObjectUsersInner occupation(@javax.annotation.Nullable String occupation) {
    this.occupation = occupation;
    return this;
  }

  /**
   * deprecated
   * @return occupation
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getOccupation() {
    return occupation;
  }

  @Deprecated
  public void setOccupation(@javax.annotation.Nullable String occupation) {
    this.occupation = occupation;
  }


  @Deprecated
  public UserObjectUsersInner incomeRange(@javax.annotation.Nullable String incomeRange) {
    this.incomeRange = incomeRange;
    return this;
  }

  /**
   * Get incomeRange
   * @return incomeRange
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getIncomeRange() {
    return incomeRange;
  }

  @Deprecated
  public void setIncomeRange(@javax.annotation.Nullable String incomeRange) {
    this.incomeRange = incomeRange;
  }


  public UserObjectUsersInner legalName(@javax.annotation.Nullable String legalName) {
    this.legalName = legalName;
    return this;
  }

  /**
   * Get legalName
   * @return legalName
   */
  @javax.annotation.Nullable
  public String getLegalName() {
    return legalName;
  }

  public void setLegalName(@javax.annotation.Nullable String legalName) {
    this.legalName = legalName;
  }


  public UserObjectUsersInner legalNameEmbossed(@javax.annotation.Nullable String legalNameEmbossed) {
    this.legalNameEmbossed = legalNameEmbossed;
    return this;
  }

  /**
   * Get legalNameEmbossed
   * @return legalNameEmbossed
   */
  @javax.annotation.Nullable
  public String getLegalNameEmbossed() {
    return legalNameEmbossed;
  }

  public void setLegalNameEmbossed(@javax.annotation.Nullable String legalNameEmbossed) {
    this.legalNameEmbossed = legalNameEmbossed;
  }


  public UserObjectUsersInner legalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {
    this.legalRegistrationNumber = legalRegistrationNumber;
    return this;
  }

  /**
   * Get legalRegistrationNumber
   * @return legalRegistrationNumber
   */
  @javax.annotation.Nullable
  public String getLegalRegistrationNumber() {
    return legalRegistrationNumber;
  }

  public void setLegalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {
    this.legalRegistrationNumber = legalRegistrationNumber;
  }


  public UserObjectUsersInner legalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {
    this.legalTvaNumber = legalTvaNumber;
    return this;
  }

  /**
   * Get legalTvaNumber
   * @return legalTvaNumber
   */
  @javax.annotation.Nullable
  public String getLegalTvaNumber() {
    return legalTvaNumber;
  }

  public void setLegalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {
    this.legalTvaNumber = legalTvaNumber;
  }


  public UserObjectUsersInner legalRegistrationDate(@javax.annotation.Nullable String legalRegistrationDate) {
    this.legalRegistrationDate = legalRegistrationDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return legalRegistrationDate
   */
  @javax.annotation.Nullable
  public String getLegalRegistrationDate() {
    return legalRegistrationDate;
  }

  public void setLegalRegistrationDate(@javax.annotation.Nullable String legalRegistrationDate) {
    this.legalRegistrationDate = legalRegistrationDate;
  }


  public UserObjectUsersInner legalForm(@javax.annotation.Nullable String legalForm) {
    this.legalForm = legalForm;
    return this;
  }

  /**
   * Get legalForm
   * @return legalForm
   */
  @javax.annotation.Nullable
  public String getLegalForm() {
    return legalForm;
  }

  public void setLegalForm(@javax.annotation.Nullable String legalForm) {
    this.legalForm = legalForm;
  }


  public UserObjectUsersInner legalShareCapital(@javax.annotation.Nullable Integer legalShareCapital) {
    this.legalShareCapital = legalShareCapital;
    return this;
  }

  /**
   * Get legalShareCapital
   * @return legalShareCapital
   */
  @javax.annotation.Nullable
  public Integer getLegalShareCapital() {
    return legalShareCapital;
  }

  public void setLegalShareCapital(@javax.annotation.Nullable Integer legalShareCapital) {
    this.legalShareCapital = legalShareCapital;
  }


  public UserObjectUsersInner legalSector(@javax.annotation.Nullable String legalSector) {
    this.legalSector = legalSector;
    return this;
  }

  /**
   * Get legalSector
   * @return legalSector
   */
  @javax.annotation.Nullable
  public String getLegalSector() {
    return legalSector;
  }

  public void setLegalSector(@javax.annotation.Nullable String legalSector) {
    this.legalSector = legalSector;
  }


  public UserObjectUsersInner legalAnnualTurnOver(@javax.annotation.Nullable String legalAnnualTurnOver) {
    this.legalAnnualTurnOver = legalAnnualTurnOver;
    return this;
  }

  /**
   * Get legalAnnualTurnOver
   * @return legalAnnualTurnOver
   */
  @javax.annotation.Nullable
  public String getLegalAnnualTurnOver() {
    return legalAnnualTurnOver;
  }

  public void setLegalAnnualTurnOver(@javax.annotation.Nullable String legalAnnualTurnOver) {
    this.legalAnnualTurnOver = legalAnnualTurnOver;
  }


  public UserObjectUsersInner legalNetIncomeRange(@javax.annotation.Nullable String legalNetIncomeRange) {
    this.legalNetIncomeRange = legalNetIncomeRange;
    return this;
  }

  /**
   * Get legalNetIncomeRange
   * @return legalNetIncomeRange
   */
  @javax.annotation.Nullable
  public String getLegalNetIncomeRange() {
    return legalNetIncomeRange;
  }

  public void setLegalNetIncomeRange(@javax.annotation.Nullable String legalNetIncomeRange) {
    this.legalNetIncomeRange = legalNetIncomeRange;
  }


  public UserObjectUsersInner legalNumberOfEmployeeRange(@javax.annotation.Nullable String legalNumberOfEmployeeRange) {
    this.legalNumberOfEmployeeRange = legalNumberOfEmployeeRange;
    return this;
  }

  /**
   * Get legalNumberOfEmployeeRange
   * @return legalNumberOfEmployeeRange
   */
  @javax.annotation.Nullable
  public String getLegalNumberOfEmployeeRange() {
    return legalNumberOfEmployeeRange;
  }

  public void setLegalNumberOfEmployeeRange(@javax.annotation.Nullable String legalNumberOfEmployeeRange) {
    this.legalNumberOfEmployeeRange = legalNumberOfEmployeeRange;
  }


  public UserObjectUsersInner effectiveBeneficiary(@javax.annotation.Nullable Integer effectiveBeneficiary) {
    this.effectiveBeneficiary = effectiveBeneficiary;
    return this;
  }

  /**
   * Get effectiveBeneficiary
   * @return effectiveBeneficiary
   */
  @javax.annotation.Nullable
  public Integer getEffectiveBeneficiary() {
    return effectiveBeneficiary;
  }

  public void setEffectiveBeneficiary(@javax.annotation.Nullable Integer effectiveBeneficiary) {
    this.effectiveBeneficiary = effectiveBeneficiary;
  }


  public UserObjectUsersInner kycLevel(@javax.annotation.Nullable KycLevelEnum kycLevel) {
    this.kycLevel = kycLevel;
    return this;
  }

  /**
   * * &#x60;0&#x60; – NONE * &#x60;1&#x60; – LIGHT * &#x60;2&#x60; – REGULAR * &#x60;3&#x60; – STRONG * &#x60;4&#x60; – REFUSED * &#x60;5&#x60; – PREVALIDATED * &#x60;6&#x60; – ENHANCED 
   * @return kycLevel
   */
  @javax.annotation.Nullable
  public KycLevelEnum getKycLevel() {
    return kycLevel;
  }

  public void setKycLevel(@javax.annotation.Nullable KycLevelEnum kycLevel) {
    this.kycLevel = kycLevel;
  }


  public UserObjectUsersInner kycReview(@javax.annotation.Nullable KycReviewEnum kycReview) {
    this.kycReview = kycReview;
    return this;
  }

  /**
   * * &#x60;0&#x60; – NONE * &#x60;1&#x60; – PENDING * &#x60;2&#x60; – VALIDATED * &#x60;3&#x60; – REFUSED * &#x60;4&#x60; – INVESTIGATING (deprecated) * &#x60;5&#x60; – CLOSED (deprecated) * &#x60;6&#x60; – REVIEW_OPEN * &#x60;7&#x60; – REVIEW_PENDING 
   * @return kycReview
   */
  @javax.annotation.Nullable
  public KycReviewEnum getKycReview() {
    return kycReview;
  }

  public void setKycReview(@javax.annotation.Nullable KycReviewEnum kycReview) {
    this.kycReview = kycReview;
  }


  public UserObjectUsersInner kycReviewComment(@javax.annotation.Nullable String kycReviewComment) {
    this.kycReviewComment = kycReviewComment;
    return this;
  }

  /**
   * A comment set by Treezor upon [KYC review](/guide/user-verification/introduction.html). It concatenates information for each KYC Review update, with the date, the &#x60;kycReview&#x60; and &#x60;kycLevel&#x60; values, and the comment from Treezor. 
   * @return kycReviewComment
   */
  @javax.annotation.Nullable
  public String getKycReviewComment() {
    return kycReviewComment;
  }

  public void setKycReviewComment(@javax.annotation.Nullable String kycReviewComment) {
    this.kycReviewComment = kycReviewComment;
  }


  @Deprecated
  public UserObjectUsersInner isFreezed(@javax.annotation.Nullable Integer isFreezed) {
    this.isFreezed = isFreezed;
    return this;
  }

  /**
   * deprecated
   * @return isFreezed
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getIsFreezed() {
    return isFreezed;
  }

  @Deprecated
  public void setIsFreezed(@javax.annotation.Nullable Integer isFreezed) {
    this.isFreezed = isFreezed;
  }


  public UserObjectUsersInner isFrozen(@javax.annotation.Nullable Integer isFrozen) {
    this.isFrozen = isFrozen;
    return this;
  }

  /**
   * Get isFrozen
   * @return isFrozen
   */
  @javax.annotation.Nullable
  public Integer getIsFrozen() {
    return isFrozen;
  }

  public void setIsFrozen(@javax.annotation.Nullable Integer isFrozen) {
    this.isFrozen = isFrozen;
  }


  public UserObjectUsersInner language(@javax.annotation.Nullable String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }


  public UserObjectUsersInner optInMailing(@javax.annotation.Nullable Integer optInMailing) {
    this.optInMailing = optInMailing;
    return this;
  }

  /**
   * Get optInMailing
   * @return optInMailing
   */
  @javax.annotation.Nullable
  public Integer getOptInMailing() {
    return optInMailing;
  }

  public void setOptInMailing(@javax.annotation.Nullable Integer optInMailing) {
    this.optInMailing = optInMailing;
  }


  /**
   * The 13-character long [SEPA Creditor Identifier](/guide/overview/glossary.html#sepa-creditor-identifier-sci) of the User. 
   * @return sepaCreditorIdentifier
   */
  @javax.annotation.Nullable
  public String getSepaCreditorIdentifier() {
    return sepaCreditorIdentifier;
  }



  @Deprecated
  public UserObjectUsersInner taxNumber(@javax.annotation.Nullable String taxNumber) {
    this.taxNumber = taxNumber;
    return this;
  }

  /**
   * Get taxNumber
   * @return taxNumber
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getTaxNumber() {
    return taxNumber;
  }

  @Deprecated
  public void setTaxNumber(@javax.annotation.Nullable String taxNumber) {
    this.taxNumber = taxNumber;
  }


  @Deprecated
  public UserObjectUsersInner taxResidence(@javax.annotation.Nullable String taxResidence) {
    this.taxResidence = taxResidence;
    return this;
  }

  /**
   * Get taxResidence
   * @return taxResidence
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getTaxResidence() {
    return taxResidence;
  }

  @Deprecated
  public void setTaxResidence(@javax.annotation.Nullable String taxResidence) {
    this.taxResidence = taxResidence;
  }


  public UserObjectUsersInner position(@javax.annotation.Nullable String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(@javax.annotation.Nullable String position) {
    this.position = position;
  }


  @Deprecated
  public UserObjectUsersInner personalAssets(@javax.annotation.Nullable String personalAssets) {
    this.personalAssets = personalAssets;
    return this;
  }

  /**
   * Get personalAssets
   * @return personalAssets
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getPersonalAssets() {
    return personalAssets;
  }

  @Deprecated
  public void setPersonalAssets(@javax.annotation.Nullable String personalAssets) {
    this.personalAssets = personalAssets;
  }


  public UserObjectUsersInner activityOutsideEu(@javax.annotation.Nullable Integer activityOutsideEu) {
    this.activityOutsideEu = activityOutsideEu;
    return this;
  }

  /**
   * Whether the entity and its business units, subsidiaries, and joint ventures have a commercial activity outside of the European Union.
   * @return activityOutsideEu
   */
  @javax.annotation.Nullable
  public Integer getActivityOutsideEu() {
    return activityOutsideEu;
  }

  public void setActivityOutsideEu(@javax.annotation.Nullable Integer activityOutsideEu) {
    this.activityOutsideEu = activityOutsideEu;
  }


  public UserObjectUsersInner economicSanctions(@javax.annotation.Nullable Integer economicSanctions) {
    this.economicSanctions = economicSanctions;
    return this;
  }

  /**
   * Whether the entity, its subsidiaries, entities, employees, directors, beneficial owners, or joint ventures are subject to Economic Sanctions.
   * @return economicSanctions
   */
  @javax.annotation.Nullable
  public Integer getEconomicSanctions() {
    return economicSanctions;
  }

  public void setEconomicSanctions(@javax.annotation.Nullable Integer economicSanctions) {
    this.economicSanctions = economicSanctions;
  }


  public UserObjectUsersInner residentCountriesSanctions(@javax.annotation.Nullable Integer residentCountriesSanctions) {
    this.residentCountriesSanctions = residentCountriesSanctions;
    return this;
  }

  /**
   * Whether the entity, its subsidiaries, or joint ventures, located within or operating from any countries or territories are subject to Comprehensive Sanctions.
   * @return residentCountriesSanctions
   */
  @javax.annotation.Nullable
  public Integer getResidentCountriesSanctions() {
    return residentCountriesSanctions;
  }

  public void setResidentCountriesSanctions(@javax.annotation.Nullable Integer residentCountriesSanctions) {
    this.residentCountriesSanctions = residentCountriesSanctions;
  }


  public UserObjectUsersInner involvedSanctions(@javax.annotation.Nullable Integer involvedSanctions) {
    this.involvedSanctions = involvedSanctions;
    return this;
  }

  /**
   * Whether the entity, its subsidiaries, or joint ventures, are engaged in transactions, investments, business, or other dealings that directly or indirectly involve or benefit: * Any countries or territories subject to Comprehensive Sanctions, or * Any person or entity which is the target of any Sanctions (“Sanctioned Targets”). 
   * @return involvedSanctions
   */
  @javax.annotation.Nullable
  public Integer getInvolvedSanctions() {
    return involvedSanctions;
  }

  public void setInvolvedSanctions(@javax.annotation.Nullable Integer involvedSanctions) {
    this.involvedSanctions = involvedSanctions;
  }


  public UserObjectUsersInner entitySanctionsQuestionnaire(@javax.annotation.Nullable EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire) {
    this.entitySanctionsQuestionnaire = entitySanctionsQuestionnaire;
    return this;
  }

  /**
   * Defines the scope to which the &#x60;activityOutsideEu&#x60; field applies. 
   * @return entitySanctionsQuestionnaire
   */
  @javax.annotation.Nullable
  public EntitySanctionsQuestionnaireEnum getEntitySanctionsQuestionnaire() {
    return entitySanctionsQuestionnaire;
  }

  public void setEntitySanctionsQuestionnaire(@javax.annotation.Nullable EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire) {
    this.entitySanctionsQuestionnaire = entitySanctionsQuestionnaire;
  }


  public UserObjectUsersInner sanctionsQuestionnaireDate(@javax.annotation.Nullable String sanctionsQuestionnaireDate) {
    this.sanctionsQuestionnaireDate = sanctionsQuestionnaireDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return sanctionsQuestionnaireDate
   */
  @javax.annotation.Nullable
  public String getSanctionsQuestionnaireDate() {
    return sanctionsQuestionnaireDate;
  }

  public void setSanctionsQuestionnaireDate(@javax.annotation.Nullable String sanctionsQuestionnaireDate) {
    this.sanctionsQuestionnaireDate = sanctionsQuestionnaireDate;
  }


  public UserObjectUsersInner timezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }


  @Deprecated
  public UserObjectUsersInner occupationType(@javax.annotation.Nullable OccupationTypeEnum occupationType) {
    this.occupationType = occupationType;
    return this;
  }

  /**
   * Deprecated. Use &#x60;occupationCategory&#x60; instead.
   * @return occupationType
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public OccupationTypeEnum getOccupationType() {
    return occupationType;
  }

  @Deprecated
  public void setOccupationType(@javax.annotation.Nullable OccupationTypeEnum occupationType) {
    this.occupationType = occupationType;
  }


  public UserObjectUsersInner sourceOfFunds(@javax.annotation.Nullable SourceOfFundsEnum sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
    return this;
  }

  /**
   * The source of funds for opening an account for a company or self-employed person
   * @return sourceOfFunds
   */
  @javax.annotation.Nullable
  public SourceOfFundsEnum getSourceOfFunds() {
    return sourceOfFunds;
  }

  public void setSourceOfFunds(@javax.annotation.Nullable SourceOfFundsEnum sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
  }


  public UserObjectUsersInner legalSectorType(@javax.annotation.Nullable LegalSectorTypeEnum legalSectorType) {
    this.legalSectorType = legalSectorType;
    return this;
  }

  /**
   * Qualify the type of data in the &#x60;legalSector&#x60; field    * If it is set to NACE the legalSector needs to be in a NACE format (4 digits).    * If it is set to NAF (or not set at all) the legalSector needs to be in a NAF format (4 digits followed by a capital letter). 
   * @return legalSectorType
   */
  @javax.annotation.Nullable
  public LegalSectorTypeEnum getLegalSectorType() {
    return legalSectorType;
  }

  public void setLegalSectorType(@javax.annotation.Nullable LegalSectorTypeEnum legalSectorType) {
    this.legalSectorType = legalSectorType;
  }


  public UserObjectUsersInner isOnStockExchange(@javax.annotation.Nullable Integer isOnStockExchange) {
    this.isOnStockExchange = isOnStockExchange;
    return this;
  }

  /**
   * The user is a corporation and is quoted on an organized stock exchange.   * &#x60;0&#x60; – No   * &#x60;1&#x60; – Yes 
   * @return isOnStockExchange
   */
  @javax.annotation.Nullable
  public Integer getIsOnStockExchange() {
    return isOnStockExchange;
  }

  public void setIsOnStockExchange(@javax.annotation.Nullable Integer isOnStockExchange) {
    this.isOnStockExchange = isOnStockExchange;
  }


  public UserObjectUsersInner codeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * Get codeStatus
   * @return codeStatus
   */
  @javax.annotation.Nullable
  public String getCodeStatus() {
    return codeStatus;
  }

  public void setCodeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = codeStatus;
  }


  public UserObjectUsersInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  public String getInformationStatus() {
    return informationStatus;
  }

  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }


  public UserObjectUsersInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public UserObjectUsersInner modifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public UserObjectUsersInner walletCount(@javax.annotation.Nullable Integer walletCount) {
    this.walletCount = walletCount;
    return this;
  }

  /**
   * Get walletCount
   * @return walletCount
   */
  @javax.annotation.Nullable
  public Integer getWalletCount() {
    return walletCount;
  }

  public void setWalletCount(@javax.annotation.Nullable Integer walletCount) {
    this.walletCount = walletCount;
  }


  public UserObjectUsersInner payinCount(@javax.annotation.Nullable Integer payinCount) {
    this.payinCount = payinCount;
    return this;
  }

  /**
   * Get payinCount
   * @return payinCount
   */
  @javax.annotation.Nullable
  public Integer getPayinCount() {
    return payinCount;
  }

  public void setPayinCount(@javax.annotation.Nullable Integer payinCount) {
    this.payinCount = payinCount;
  }


  public UserObjectUsersInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }


  public UserObjectUsersInner occupationCategory(@javax.annotation.Nullable OccupationCategoryEnum occupationCategory) {
    this.occupationCategory = occupationCategory;
    return this;
  }

  /**
   * Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values. 
   * @return occupationCategory
   */
  @javax.annotation.Nullable
  public OccupationCategoryEnum getOccupationCategory() {
    return occupationCategory;
  }

  public void setOccupationCategory(@javax.annotation.Nullable OccupationCategoryEnum occupationCategory) {
    this.occupationCategory = occupationCategory;
  }


  public UserObjectUsersInner personalAssetsRange(@javax.annotation.Nullable PersonalAssetsRangeEnum personalAssetsRange) {
    this.personalAssetsRange = personalAssetsRange;
    return this;
  }

  /**
   * The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values. 
   * @return personalAssetsRange
   */
  @javax.annotation.Nullable
  public PersonalAssetsRangeEnum getPersonalAssetsRange() {
    return personalAssetsRange;
  }

  public void setPersonalAssetsRange(@javax.annotation.Nullable PersonalAssetsRangeEnum personalAssetsRange) {
    this.personalAssetsRange = personalAssetsRange;
  }


  public UserObjectUsersInner monthlyIncomeRange(@javax.annotation.Nullable MonthlyIncomeRangeEnum monthlyIncomeRange) {
    this.monthlyIncomeRange = monthlyIncomeRange;
    return this;
  }

  /**
   * Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values. 
   * @return monthlyIncomeRange
   */
  @javax.annotation.Nullable
  public MonthlyIncomeRangeEnum getMonthlyIncomeRange() {
    return monthlyIncomeRange;
  }

  public void setMonthlyIncomeRange(@javax.annotation.Nullable MonthlyIncomeRangeEnum monthlyIncomeRange) {
    this.monthlyIncomeRange = monthlyIncomeRange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserObjectUsersInner userObjectUsersInner = (UserObjectUsersInner) o;
    return Objects.equals(this.userId, userObjectUsersInner.userId) &&
        Objects.equals(this.userStatus, userObjectUsersInner.userStatus) &&
        Objects.equals(this.userTag, userObjectUsersInner.userTag) &&
        Objects.equals(this.parentUserId, userObjectUsersInner.parentUserId) &&
        Objects.equals(this.parentType, userObjectUsersInner.parentType) &&
        Objects.equals(this.controllingPersonType, userObjectUsersInner.controllingPersonType) &&
        Objects.equals(this.employeeType, userObjectUsersInner.employeeType) &&
        Objects.equals(this.specifiedUSPerson, userObjectUsersInner.specifiedUSPerson) &&
        Objects.equals(this.title, userObjectUsersInner.title) &&
        Objects.equals(this.firstname, userObjectUsersInner.firstname) &&
        Objects.equals(this.lastname, userObjectUsersInner.lastname) &&
        Objects.equals(this.middleNames, userObjectUsersInner.middleNames) &&
        Objects.equals(this.birthday, userObjectUsersInner.birthday) &&
        Objects.equals(this.email, userObjectUsersInner.email) &&
        Objects.equals(this.address1, userObjectUsersInner.address1) &&
        Objects.equals(this.address2, userObjectUsersInner.address2) &&
        Objects.equals(this.address3, userObjectUsersInner.address3) &&
        Objects.equals(this.postcode, userObjectUsersInner.postcode) &&
        Objects.equals(this.city, userObjectUsersInner.city) &&
        Objects.equals(this.state, userObjectUsersInner.state) &&
        Objects.equals(this.country, userObjectUsersInner.country) &&
        Objects.equals(this.countryName, userObjectUsersInner.countryName) &&
        Objects.equals(this.distributionCountry, userObjectUsersInner.distributionCountry) &&
        Objects.equals(this.secondaryAddress1, userObjectUsersInner.secondaryAddress1) &&
        Objects.equals(this.secondaryAddress2, userObjectUsersInner.secondaryAddress2) &&
        Objects.equals(this.secondaryAddress3, userObjectUsersInner.secondaryAddress3) &&
        Objects.equals(this.secondaryPostcode, userObjectUsersInner.secondaryPostcode) &&
        Objects.equals(this.secondaryCity, userObjectUsersInner.secondaryCity) &&
        Objects.equals(this.secondaryState, userObjectUsersInner.secondaryState) &&
        Objects.equals(this.secondaryCountry, userObjectUsersInner.secondaryCountry) &&
        Objects.equals(this.phone, userObjectUsersInner.phone) &&
        Objects.equals(this.mobile, userObjectUsersInner.mobile) &&
        Objects.equals(this.nationality, userObjectUsersInner.nationality) &&
        Objects.equals(this.nationalityOther, userObjectUsersInner.nationalityOther) &&
        Objects.equals(this.placeOfBirth, userObjectUsersInner.placeOfBirth) &&
        Objects.equals(this.birthCountry, userObjectUsersInner.birthCountry) &&
        Objects.equals(this.occupation, userObjectUsersInner.occupation) &&
        Objects.equals(this.incomeRange, userObjectUsersInner.incomeRange) &&
        Objects.equals(this.legalName, userObjectUsersInner.legalName) &&
        Objects.equals(this.legalNameEmbossed, userObjectUsersInner.legalNameEmbossed) &&
        Objects.equals(this.legalRegistrationNumber, userObjectUsersInner.legalRegistrationNumber) &&
        Objects.equals(this.legalTvaNumber, userObjectUsersInner.legalTvaNumber) &&
        Objects.equals(this.legalRegistrationDate, userObjectUsersInner.legalRegistrationDate) &&
        Objects.equals(this.legalForm, userObjectUsersInner.legalForm) &&
        Objects.equals(this.legalShareCapital, userObjectUsersInner.legalShareCapital) &&
        Objects.equals(this.legalSector, userObjectUsersInner.legalSector) &&
        Objects.equals(this.legalAnnualTurnOver, userObjectUsersInner.legalAnnualTurnOver) &&
        Objects.equals(this.legalNetIncomeRange, userObjectUsersInner.legalNetIncomeRange) &&
        Objects.equals(this.legalNumberOfEmployeeRange, userObjectUsersInner.legalNumberOfEmployeeRange) &&
        Objects.equals(this.effectiveBeneficiary, userObjectUsersInner.effectiveBeneficiary) &&
        Objects.equals(this.kycLevel, userObjectUsersInner.kycLevel) &&
        Objects.equals(this.kycReview, userObjectUsersInner.kycReview) &&
        Objects.equals(this.kycReviewComment, userObjectUsersInner.kycReviewComment) &&
        Objects.equals(this.isFreezed, userObjectUsersInner.isFreezed) &&
        Objects.equals(this.isFrozen, userObjectUsersInner.isFrozen) &&
        Objects.equals(this.language, userObjectUsersInner.language) &&
        Objects.equals(this.optInMailing, userObjectUsersInner.optInMailing) &&
        Objects.equals(this.sepaCreditorIdentifier, userObjectUsersInner.sepaCreditorIdentifier) &&
        Objects.equals(this.taxNumber, userObjectUsersInner.taxNumber) &&
        Objects.equals(this.taxResidence, userObjectUsersInner.taxResidence) &&
        Objects.equals(this.position, userObjectUsersInner.position) &&
        Objects.equals(this.personalAssets, userObjectUsersInner.personalAssets) &&
        Objects.equals(this.activityOutsideEu, userObjectUsersInner.activityOutsideEu) &&
        Objects.equals(this.economicSanctions, userObjectUsersInner.economicSanctions) &&
        Objects.equals(this.residentCountriesSanctions, userObjectUsersInner.residentCountriesSanctions) &&
        Objects.equals(this.involvedSanctions, userObjectUsersInner.involvedSanctions) &&
        Objects.equals(this.entitySanctionsQuestionnaire, userObjectUsersInner.entitySanctionsQuestionnaire) &&
        Objects.equals(this.sanctionsQuestionnaireDate, userObjectUsersInner.sanctionsQuestionnaireDate) &&
        Objects.equals(this.timezone, userObjectUsersInner.timezone) &&
        Objects.equals(this.occupationType, userObjectUsersInner.occupationType) &&
        Objects.equals(this.sourceOfFunds, userObjectUsersInner.sourceOfFunds) &&
        Objects.equals(this.legalSectorType, userObjectUsersInner.legalSectorType) &&
        Objects.equals(this.isOnStockExchange, userObjectUsersInner.isOnStockExchange) &&
        Objects.equals(this.codeStatus, userObjectUsersInner.codeStatus) &&
        Objects.equals(this.informationStatus, userObjectUsersInner.informationStatus) &&
        Objects.equals(this.createdDate, userObjectUsersInner.createdDate) &&
        Objects.equals(this.modifiedDate, userObjectUsersInner.modifiedDate) &&
        Objects.equals(this.walletCount, userObjectUsersInner.walletCount) &&
        Objects.equals(this.payinCount, userObjectUsersInner.payinCount) &&
        Objects.equals(this.totalRows, userObjectUsersInner.totalRows) &&
        Objects.equals(this.occupationCategory, userObjectUsersInner.occupationCategory) &&
        Objects.equals(this.personalAssetsRange, userObjectUsersInner.personalAssetsRange) &&
        Objects.equals(this.monthlyIncomeRange, userObjectUsersInner.monthlyIncomeRange);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userStatus, userTag, parentUserId, parentType, controllingPersonType, employeeType, specifiedUSPerson, title, firstname, lastname, middleNames, birthday, email, address1, address2, address3, postcode, city, state, country, countryName, distributionCountry, secondaryAddress1, secondaryAddress2, secondaryAddress3, secondaryPostcode, secondaryCity, secondaryState, secondaryCountry, phone, mobile, nationality, nationalityOther, placeOfBirth, birthCountry, occupation, incomeRange, legalName, legalNameEmbossed, legalRegistrationNumber, legalTvaNumber, legalRegistrationDate, legalForm, legalShareCapital, legalSector, legalAnnualTurnOver, legalNetIncomeRange, legalNumberOfEmployeeRange, effectiveBeneficiary, kycLevel, kycReview, kycReviewComment, isFreezed, isFrozen, language, optInMailing, sepaCreditorIdentifier, taxNumber, taxResidence, position, personalAssets, activityOutsideEu, economicSanctions, residentCountriesSanctions, involvedSanctions, entitySanctionsQuestionnaire, sanctionsQuestionnaireDate, timezone, occupationType, sourceOfFunds, legalSectorType, isOnStockExchange, codeStatus, informationStatus, createdDate, modifiedDate, walletCount, payinCount, totalRows, occupationCategory, personalAssetsRange, monthlyIncomeRange);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserObjectUsersInner {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    userTag: ").append(toIndentedString(userTag)).append("\n");
    sb.append("    parentUserId: ").append(toIndentedString(parentUserId)).append("\n");
    sb.append("    parentType: ").append(toIndentedString(parentType)).append("\n");
    sb.append("    controllingPersonType: ").append(toIndentedString(controllingPersonType)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    specifiedUSPerson: ").append(toIndentedString(specifiedUSPerson)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    middleNames: ").append(toIndentedString(middleNames)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    distributionCountry: ").append(toIndentedString(distributionCountry)).append("\n");
    sb.append("    secondaryAddress1: ").append(toIndentedString(secondaryAddress1)).append("\n");
    sb.append("    secondaryAddress2: ").append(toIndentedString(secondaryAddress2)).append("\n");
    sb.append("    secondaryAddress3: ").append(toIndentedString(secondaryAddress3)).append("\n");
    sb.append("    secondaryPostcode: ").append(toIndentedString(secondaryPostcode)).append("\n");
    sb.append("    secondaryCity: ").append(toIndentedString(secondaryCity)).append("\n");
    sb.append("    secondaryState: ").append(toIndentedString(secondaryState)).append("\n");
    sb.append("    secondaryCountry: ").append(toIndentedString(secondaryCountry)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    nationalityOther: ").append(toIndentedString(nationalityOther)).append("\n");
    sb.append("    placeOfBirth: ").append(toIndentedString(placeOfBirth)).append("\n");
    sb.append("    birthCountry: ").append(toIndentedString(birthCountry)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    incomeRange: ").append(toIndentedString(incomeRange)).append("\n");
    sb.append("    legalName: ").append(toIndentedString(legalName)).append("\n");
    sb.append("    legalNameEmbossed: ").append(toIndentedString(legalNameEmbossed)).append("\n");
    sb.append("    legalRegistrationNumber: ").append(toIndentedString(legalRegistrationNumber)).append("\n");
    sb.append("    legalTvaNumber: ").append(toIndentedString(legalTvaNumber)).append("\n");
    sb.append("    legalRegistrationDate: ").append(toIndentedString(legalRegistrationDate)).append("\n");
    sb.append("    legalForm: ").append(toIndentedString(legalForm)).append("\n");
    sb.append("    legalShareCapital: ").append(toIndentedString(legalShareCapital)).append("\n");
    sb.append("    legalSector: ").append(toIndentedString(legalSector)).append("\n");
    sb.append("    legalAnnualTurnOver: ").append(toIndentedString(legalAnnualTurnOver)).append("\n");
    sb.append("    legalNetIncomeRange: ").append(toIndentedString(legalNetIncomeRange)).append("\n");
    sb.append("    legalNumberOfEmployeeRange: ").append(toIndentedString(legalNumberOfEmployeeRange)).append("\n");
    sb.append("    effectiveBeneficiary: ").append(toIndentedString(effectiveBeneficiary)).append("\n");
    sb.append("    kycLevel: ").append(toIndentedString(kycLevel)).append("\n");
    sb.append("    kycReview: ").append(toIndentedString(kycReview)).append("\n");
    sb.append("    kycReviewComment: ").append(toIndentedString(kycReviewComment)).append("\n");
    sb.append("    isFreezed: ").append(toIndentedString(isFreezed)).append("\n");
    sb.append("    isFrozen: ").append(toIndentedString(isFrozen)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    optInMailing: ").append(toIndentedString(optInMailing)).append("\n");
    sb.append("    sepaCreditorIdentifier: ").append(toIndentedString(sepaCreditorIdentifier)).append("\n");
    sb.append("    taxNumber: ").append(toIndentedString(taxNumber)).append("\n");
    sb.append("    taxResidence: ").append(toIndentedString(taxResidence)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    personalAssets: ").append(toIndentedString(personalAssets)).append("\n");
    sb.append("    activityOutsideEu: ").append(toIndentedString(activityOutsideEu)).append("\n");
    sb.append("    economicSanctions: ").append(toIndentedString(economicSanctions)).append("\n");
    sb.append("    residentCountriesSanctions: ").append(toIndentedString(residentCountriesSanctions)).append("\n");
    sb.append("    involvedSanctions: ").append(toIndentedString(involvedSanctions)).append("\n");
    sb.append("    entitySanctionsQuestionnaire: ").append(toIndentedString(entitySanctionsQuestionnaire)).append("\n");
    sb.append("    sanctionsQuestionnaireDate: ").append(toIndentedString(sanctionsQuestionnaireDate)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    occupationType: ").append(toIndentedString(occupationType)).append("\n");
    sb.append("    sourceOfFunds: ").append(toIndentedString(sourceOfFunds)).append("\n");
    sb.append("    legalSectorType: ").append(toIndentedString(legalSectorType)).append("\n");
    sb.append("    isOnStockExchange: ").append(toIndentedString(isOnStockExchange)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    walletCount: ").append(toIndentedString(walletCount)).append("\n");
    sb.append("    payinCount: ").append(toIndentedString(payinCount)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    occupationCategory: ").append(toIndentedString(occupationCategory)).append("\n");
    sb.append("    personalAssetsRange: ").append(toIndentedString(personalAssetsRange)).append("\n");
    sb.append("    monthlyIncomeRange: ").append(toIndentedString(monthlyIncomeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("userStatus");
    openapiFields.add("userTag");
    openapiFields.add("parentUserId");
    openapiFields.add("parentType");
    openapiFields.add("controllingPersonType");
    openapiFields.add("employeeType");
    openapiFields.add("specifiedUSPerson");
    openapiFields.add("title");
    openapiFields.add("firstname");
    openapiFields.add("lastname");
    openapiFields.add("middleNames");
    openapiFields.add("birthday");
    openapiFields.add("email");
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("address3");
    openapiFields.add("postcode");
    openapiFields.add("city");
    openapiFields.add("state");
    openapiFields.add("country");
    openapiFields.add("countryName");
    openapiFields.add("distributionCountry");
    openapiFields.add("secondaryAddress1");
    openapiFields.add("secondaryAddress2");
    openapiFields.add("secondaryAddress3");
    openapiFields.add("secondaryPostcode");
    openapiFields.add("secondaryCity");
    openapiFields.add("secondaryState");
    openapiFields.add("secondaryCountry");
    openapiFields.add("phone");
    openapiFields.add("mobile");
    openapiFields.add("nationality");
    openapiFields.add("nationalityOther");
    openapiFields.add("placeOfBirth");
    openapiFields.add("birthCountry");
    openapiFields.add("occupation");
    openapiFields.add("incomeRange");
    openapiFields.add("legalName");
    openapiFields.add("legalNameEmbossed");
    openapiFields.add("legalRegistrationNumber");
    openapiFields.add("legalTvaNumber");
    openapiFields.add("legalRegistrationDate");
    openapiFields.add("legalForm");
    openapiFields.add("legalShareCapital");
    openapiFields.add("legalSector");
    openapiFields.add("legalAnnualTurnOver");
    openapiFields.add("legalNetIncomeRange");
    openapiFields.add("legalNumberOfEmployeeRange");
    openapiFields.add("effectiveBeneficiary");
    openapiFields.add("kycLevel");
    openapiFields.add("kycReview");
    openapiFields.add("kycReviewComment");
    openapiFields.add("isFreezed");
    openapiFields.add("isFrozen");
    openapiFields.add("language");
    openapiFields.add("optInMailing");
    openapiFields.add("sepaCreditorIdentifier");
    openapiFields.add("taxNumber");
    openapiFields.add("taxResidence");
    openapiFields.add("position");
    openapiFields.add("personalAssets");
    openapiFields.add("activityOutsideEu");
    openapiFields.add("economicSanctions");
    openapiFields.add("residentCountriesSanctions");
    openapiFields.add("involvedSanctions");
    openapiFields.add("entitySanctionsQuestionnaire");
    openapiFields.add("sanctionsQuestionnaireDate");
    openapiFields.add("timezone");
    openapiFields.add("occupationType");
    openapiFields.add("sourceOfFunds");
    openapiFields.add("legalSectorType");
    openapiFields.add("isOnStockExchange");
    openapiFields.add("codeStatus");
    openapiFields.add("informationStatus");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("walletCount");
    openapiFields.add("payinCount");
    openapiFields.add("totalRows");
    openapiFields.add("occupationCategory");
    openapiFields.add("personalAssetsRange");
    openapiFields.add("monthlyIncomeRange");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserObjectUsersInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserObjectUsersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserObjectUsersInner is not found in the empty JSON string", UserObjectUsersInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserObjectUsersInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserObjectUsersInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) && !jsonObj.get("userStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStatus").toString()));
      }
      // validate the optional field `userStatus`
      if (jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) {
        UserStatusEnum.validateJsonElement(jsonObj.get("userStatus"));
      }
      if ((jsonObj.get("userTag") != null && !jsonObj.get("userTag").isJsonNull()) && !jsonObj.get("userTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userTag").toString()));
      }
      if ((jsonObj.get("parentType") != null && !jsonObj.get("parentType").isJsonNull()) && !jsonObj.get("parentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentType").toString()));
      }
      // validate the optional field `parentType`
      if (jsonObj.get("parentType") != null && !jsonObj.get("parentType").isJsonNull()) {
        ParentTypeEnum.validateJsonElement(jsonObj.get("parentType"));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // validate the optional field `title`
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) {
        TitleEnum.validateJsonElement(jsonObj.get("title"));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("middleNames") != null && !jsonObj.get("middleNames").isJsonNull()) && !jsonObj.get("middleNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleNames").toString()));
      }
      if ((jsonObj.get("birthday") != null && !jsonObj.get("birthday").isJsonNull()) && !jsonObj.get("birthday").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthday` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthday").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonNull()) && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if ((jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonNull()) && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      if ((jsonObj.get("address3") != null && !jsonObj.get("address3").isJsonNull()) && !jsonObj.get("address3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address3").toString()));
      }
      if ((jsonObj.get("postcode") != null && !jsonObj.get("postcode").isJsonNull()) && !jsonObj.get("postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcode").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("countryName") != null && !jsonObj.get("countryName").isJsonNull()) && !jsonObj.get("countryName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryName").toString()));
      }
      if ((jsonObj.get("distributionCountry") != null && !jsonObj.get("distributionCountry").isJsonNull()) && !jsonObj.get("distributionCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distributionCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distributionCountry").toString()));
      }
      // validate the optional field `distributionCountry`
      if (jsonObj.get("distributionCountry") != null && !jsonObj.get("distributionCountry").isJsonNull()) {
        DistributionCountryEnum.validateJsonElement(jsonObj.get("distributionCountry"));
      }
      if ((jsonObj.get("secondaryAddress1") != null && !jsonObj.get("secondaryAddress1").isJsonNull()) && !jsonObj.get("secondaryAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryAddress1").toString()));
      }
      if ((jsonObj.get("secondaryAddress2") != null && !jsonObj.get("secondaryAddress2").isJsonNull()) && !jsonObj.get("secondaryAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryAddress2").toString()));
      }
      if ((jsonObj.get("secondaryAddress3") != null && !jsonObj.get("secondaryAddress3").isJsonNull()) && !jsonObj.get("secondaryAddress3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryAddress3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryAddress3").toString()));
      }
      if ((jsonObj.get("secondaryPostcode") != null && !jsonObj.get("secondaryPostcode").isJsonNull()) && !jsonObj.get("secondaryPostcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryPostcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryPostcode").toString()));
      }
      if ((jsonObj.get("secondaryCity") != null && !jsonObj.get("secondaryCity").isJsonNull()) && !jsonObj.get("secondaryCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryCity").toString()));
      }
      if ((jsonObj.get("secondaryState") != null && !jsonObj.get("secondaryState").isJsonNull()) && !jsonObj.get("secondaryState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryState").toString()));
      }
      if ((jsonObj.get("secondaryCountry") != null && !jsonObj.get("secondaryCountry").isJsonNull()) && !jsonObj.get("secondaryCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryCountry").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      if ((jsonObj.get("nationalityOther") != null && !jsonObj.get("nationalityOther").isJsonNull()) && !jsonObj.get("nationalityOther").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationalityOther` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationalityOther").toString()));
      }
      if ((jsonObj.get("placeOfBirth") != null && !jsonObj.get("placeOfBirth").isJsonNull()) && !jsonObj.get("placeOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeOfBirth").toString()));
      }
      if ((jsonObj.get("birthCountry") != null && !jsonObj.get("birthCountry").isJsonNull()) && !jsonObj.get("birthCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthCountry").toString()));
      }
      if ((jsonObj.get("occupation") != null && !jsonObj.get("occupation").isJsonNull()) && !jsonObj.get("occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupation").toString()));
      }
      if ((jsonObj.get("incomeRange") != null && !jsonObj.get("incomeRange").isJsonNull()) && !jsonObj.get("incomeRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomeRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomeRange").toString()));
      }
      if ((jsonObj.get("legalName") != null && !jsonObj.get("legalName").isJsonNull()) && !jsonObj.get("legalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalName").toString()));
      }
      if ((jsonObj.get("legalNameEmbossed") != null && !jsonObj.get("legalNameEmbossed").isJsonNull()) && !jsonObj.get("legalNameEmbossed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalNameEmbossed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalNameEmbossed").toString()));
      }
      if ((jsonObj.get("legalRegistrationNumber") != null && !jsonObj.get("legalRegistrationNumber").isJsonNull()) && !jsonObj.get("legalRegistrationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalRegistrationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalRegistrationNumber").toString()));
      }
      if ((jsonObj.get("legalTvaNumber") != null && !jsonObj.get("legalTvaNumber").isJsonNull()) && !jsonObj.get("legalTvaNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalTvaNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalTvaNumber").toString()));
      }
      if ((jsonObj.get("legalRegistrationDate") != null && !jsonObj.get("legalRegistrationDate").isJsonNull()) && !jsonObj.get("legalRegistrationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalRegistrationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalRegistrationDate").toString()));
      }
      if ((jsonObj.get("legalForm") != null && !jsonObj.get("legalForm").isJsonNull()) && !jsonObj.get("legalForm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalForm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalForm").toString()));
      }
      if ((jsonObj.get("legalSector") != null && !jsonObj.get("legalSector").isJsonNull()) && !jsonObj.get("legalSector").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalSector` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalSector").toString()));
      }
      if ((jsonObj.get("legalAnnualTurnOver") != null && !jsonObj.get("legalAnnualTurnOver").isJsonNull()) && !jsonObj.get("legalAnnualTurnOver").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalAnnualTurnOver` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalAnnualTurnOver").toString()));
      }
      if ((jsonObj.get("legalNetIncomeRange") != null && !jsonObj.get("legalNetIncomeRange").isJsonNull()) && !jsonObj.get("legalNetIncomeRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalNetIncomeRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalNetIncomeRange").toString()));
      }
      if ((jsonObj.get("legalNumberOfEmployeeRange") != null && !jsonObj.get("legalNumberOfEmployeeRange").isJsonNull()) && !jsonObj.get("legalNumberOfEmployeeRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalNumberOfEmployeeRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalNumberOfEmployeeRange").toString()));
      }
      // validate the optional field `kycLevel`
      if (jsonObj.get("kycLevel") != null && !jsonObj.get("kycLevel").isJsonNull()) {
        KycLevelEnum.validateJsonElement(jsonObj.get("kycLevel"));
      }
      // validate the optional field `kycReview`
      if (jsonObj.get("kycReview") != null && !jsonObj.get("kycReview").isJsonNull()) {
        KycReviewEnum.validateJsonElement(jsonObj.get("kycReview"));
      }
      if ((jsonObj.get("kycReviewComment") != null && !jsonObj.get("kycReviewComment").isJsonNull()) && !jsonObj.get("kycReviewComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycReviewComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycReviewComment").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("sepaCreditorIdentifier") != null && !jsonObj.get("sepaCreditorIdentifier").isJsonNull()) && !jsonObj.get("sepaCreditorIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sepaCreditorIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sepaCreditorIdentifier").toString()));
      }
      if ((jsonObj.get("taxNumber") != null && !jsonObj.get("taxNumber").isJsonNull()) && !jsonObj.get("taxNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxNumber").toString()));
      }
      if ((jsonObj.get("taxResidence") != null && !jsonObj.get("taxResidence").isJsonNull()) && !jsonObj.get("taxResidence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxResidence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxResidence").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("personalAssets") != null && !jsonObj.get("personalAssets").isJsonNull()) && !jsonObj.get("personalAssets").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalAssets` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalAssets").toString()));
      }
      // validate the optional field `entitySanctionsQuestionnaire`
      if (jsonObj.get("entitySanctionsQuestionnaire") != null && !jsonObj.get("entitySanctionsQuestionnaire").isJsonNull()) {
        EntitySanctionsQuestionnaireEnum.validateJsonElement(jsonObj.get("entitySanctionsQuestionnaire"));
      }
      if ((jsonObj.get("sanctionsQuestionnaireDate") != null && !jsonObj.get("sanctionsQuestionnaireDate").isJsonNull()) && !jsonObj.get("sanctionsQuestionnaireDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sanctionsQuestionnaireDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sanctionsQuestionnaireDate").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("occupationType") != null && !jsonObj.get("occupationType").isJsonNull()) && !jsonObj.get("occupationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupationType").toString()));
      }
      // validate the optional field `occupationType`
      if (jsonObj.get("occupationType") != null && !jsonObj.get("occupationType").isJsonNull()) {
        OccupationTypeEnum.validateJsonElement(jsonObj.get("occupationType"));
      }
      if ((jsonObj.get("sourceOfFunds") != null && !jsonObj.get("sourceOfFunds").isJsonNull()) && !jsonObj.get("sourceOfFunds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceOfFunds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceOfFunds").toString()));
      }
      // validate the optional field `sourceOfFunds`
      if (jsonObj.get("sourceOfFunds") != null && !jsonObj.get("sourceOfFunds").isJsonNull()) {
        SourceOfFundsEnum.validateJsonElement(jsonObj.get("sourceOfFunds"));
      }
      if ((jsonObj.get("legalSectorType") != null && !jsonObj.get("legalSectorType").isJsonNull()) && !jsonObj.get("legalSectorType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalSectorType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalSectorType").toString()));
      }
      // validate the optional field `legalSectorType`
      if (jsonObj.get("legalSectorType") != null && !jsonObj.get("legalSectorType").isJsonNull()) {
        LegalSectorTypeEnum.validateJsonElement(jsonObj.get("legalSectorType"));
      }
      if ((jsonObj.get("codeStatus") != null && !jsonObj.get("codeStatus").isJsonNull()) && !jsonObj.get("codeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codeStatus").toString()));
      }
      if ((jsonObj.get("informationStatus") != null && !jsonObj.get("informationStatus").isJsonNull()) && !jsonObj.get("informationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `informationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("informationStatus").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
      // validate the optional field `occupationCategory`
      if (jsonObj.get("occupationCategory") != null && !jsonObj.get("occupationCategory").isJsonNull()) {
        OccupationCategoryEnum.validateJsonElement(jsonObj.get("occupationCategory"));
      }
      // validate the optional field `personalAssetsRange`
      if (jsonObj.get("personalAssetsRange") != null && !jsonObj.get("personalAssetsRange").isJsonNull()) {
        PersonalAssetsRangeEnum.validateJsonElement(jsonObj.get("personalAssetsRange"));
      }
      // validate the optional field `monthlyIncomeRange`
      if (jsonObj.get("monthlyIncomeRange") != null && !jsonObj.get("monthlyIncomeRange").isJsonNull()) {
        MonthlyIncomeRangeEnum.validateJsonElement(jsonObj.get("monthlyIncomeRange"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserObjectUsersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserObjectUsersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserObjectUsersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserObjectUsersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<UserObjectUsersInner>() {
           @Override
           public void write(JsonWriter out, UserObjectUsersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserObjectUsersInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserObjectUsersInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserObjectUsersInner
   * @throws IOException if the JSON string is invalid with respect to UserObjectUsersInner
   */
  public static UserObjectUsersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserObjectUsersInner.class);
  }

  /**
   * Convert an instance of UserObjectUsersInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

