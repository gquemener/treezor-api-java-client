/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PostPayout200ResponsePayoutsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PostPayout200ResponsePayoutsInner {
  public static final String SERIALIZED_NAME_PAYOUT_ID = "payoutId";
  @SerializedName(SERIALIZED_NAME_PAYOUT_ID)
  @javax.annotation.Nullable
  private Integer payoutId;

  public static final String SERIALIZED_NAME_PAYOUT_TAG = "payoutTag";
  @SerializedName(SERIALIZED_NAME_PAYOUT_TAG)
  @javax.annotation.Nullable
  private String payoutTag;

  /**
   * Gets or Sets payoutStatus
   */
  @JsonAdapter(PayoutStatusEnum.Adapter.class)
  public enum PayoutStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    PayoutStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayoutStatusEnum fromValue(String value) {
      for (PayoutStatusEnum b : PayoutStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PayoutStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayoutStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayoutStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PayoutStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PayoutStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYOUT_STATUS = "payoutStatus";
  @SerializedName(SERIALIZED_NAME_PAYOUT_STATUS)
  @javax.annotation.Nullable
  private PayoutStatusEnum payoutStatus;

  public static final String SERIALIZED_NAME_PAYOUT_TYPE_ID = "payoutTypeId";
  @SerializedName(SERIALIZED_NAME_PAYOUT_TYPE_ID)
  @javax.annotation.Nullable
  private Integer payoutTypeId;

  /**
   * Gets or Sets payoutType
   */
  @JsonAdapter(PayoutTypeEnum.Adapter.class)
  public enum PayoutTypeEnum {
    CREDIT_TRANSFER("Credit Transfer"),
    
    DIRECT_DEBIT("Direct Debit"),
    
    INSTANT_SEPA_CREDIT_TRANSFER("Instant Sepa Credit Transfer");

    private String value;

    PayoutTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayoutTypeEnum fromValue(String value) {
      for (PayoutTypeEnum b : PayoutTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PayoutTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayoutTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayoutTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PayoutTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PayoutTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYOUT_TYPE = "payoutType";
  @SerializedName(SERIALIZED_NAME_PAYOUT_TYPE)
  @javax.annotation.Nullable
  private PayoutTypeEnum payoutType;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String SERIALIZED_NAME_PAYOUT_DATE = "payoutDate";
  @SerializedName(SERIALIZED_NAME_PAYOUT_DATE)
  @javax.annotation.Nullable
  private String payoutDate;

  public static final String SERIALIZED_NAME_WALLET_EVENT_NAME = "walletEventName";
  @SerializedName(SERIALIZED_NAME_WALLET_EVENT_NAME)
  @javax.annotation.Nullable
  private String walletEventName;

  public static final String SERIALIZED_NAME_WALLET_ALIAS = "walletAlias";
  @SerializedName(SERIALIZED_NAME_WALLET_ALIAS)
  @javax.annotation.Nullable
  private String walletAlias;

  public static final String SERIALIZED_NAME_USER_FIRSTNAME = "userFirstname";
  @SerializedName(SERIALIZED_NAME_USER_FIRSTNAME)
  @javax.annotation.Nullable
  private String userFirstname;

  public static final String SERIALIZED_NAME_USER_LASTNAME = "userLastname";
  @SerializedName(SERIALIZED_NAME_USER_LASTNAME)
  @javax.annotation.Nullable
  private String userLastname;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_BENEFICIARY_ID = "beneficiaryId";
  @SerializedName(SERIALIZED_NAME_BENEFICIARY_ID)
  @javax.annotation.Nullable
  private Integer beneficiaryId;

  public static final String SERIALIZED_NAME_UNIQUE_MANDATE_REFERENCE = "uniqueMandateReference";
  @SerializedName(SERIALIZED_NAME_UNIQUE_MANDATE_REFERENCE)
  @javax.annotation.Nullable
  private String uniqueMandateReference;

  public static final String SERIALIZED_NAME_BANKACCOUNT_I_B_A_N = "bankaccountIBAN";
  @SerializedName(SERIALIZED_NAME_BANKACCOUNT_I_B_A_N)
  @javax.annotation.Nullable
  private String bankaccountIBAN;

  public static final String SERIALIZED_NAME_VIRTUAL_IBAN_ID = "virtualIbanId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IBAN_ID)
  @javax.annotation.Nullable
  private Integer virtualIbanId;

  public static final String SERIALIZED_NAME_VIRTUAL_IBAN_REFERENCE = "virtualIbanReference";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IBAN_REFERENCE)
  @javax.annotation.Nullable
  private String virtualIbanReference;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  @javax.annotation.Nullable
  private String label;

  public static final String SERIALIZED_NAME_END_TO_END_ID = "endToEndId";
  @SerializedName(SERIALIZED_NAME_END_TO_END_ID)
  @javax.annotation.Nullable
  private String endToEndId;

  public static final String SERIALIZED_NAME_REASON_CODE = "reasonCode";
  @SerializedName(SERIALIZED_NAME_REASON_CODE)
  @javax.annotation.Nullable
  private String reasonCode;

  public static final String SERIALIZED_NAME_REASON_DESCRIPTION = "reasonDescription";
  @SerializedName(SERIALIZED_NAME_REASON_DESCRIPTION)
  @javax.annotation.Nullable
  private String reasonDescription;

  public static final String SERIALIZED_NAME_CODE_STATUS = "codeStatus";
  @SerializedName(SERIALIZED_NAME_CODE_STATUS)
  @javax.annotation.Nullable
  private String codeStatus;

  public static final String SERIALIZED_NAME_INFORMATION_STATUS = "informationStatus";
  @SerializedName(SERIALIZED_NAME_INFORMATION_STATUS)
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String SERIALIZED_NAME_SUPPORTING_FILE_LINK = "supportingFileLink";
  @SerializedName(SERIALIZED_NAME_SUPPORTING_FILE_LINK)
  @javax.annotation.Nullable
  private String supportingFileLink;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  @javax.annotation.Nullable
  private String amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public static final String SERIALIZED_NAME_PARTNER_FEE = "partnerFee";
  @SerializedName(SERIALIZED_NAME_PARTNER_FEE)
  @javax.annotation.Nullable
  private String partnerFee;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  @javax.annotation.Nullable
  private String modifiedDate;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Object metadata;

  public PostPayout200ResponsePayoutsInner() {
  }

  public PostPayout200ResponsePayoutsInner payoutId(@javax.annotation.Nullable Integer payoutId) {
    this.payoutId = payoutId;
    return this;
  }

  /**
   * Get payoutId
   * @return payoutId
   */
  @javax.annotation.Nullable
  public Integer getPayoutId() {
    return payoutId;
  }

  public void setPayoutId(@javax.annotation.Nullable Integer payoutId) {
    this.payoutId = payoutId;
  }


  public PostPayout200ResponsePayoutsInner payoutTag(@javax.annotation.Nullable String payoutTag) {
    this.payoutTag = payoutTag;
    return this;
  }

  /**
   * Get payoutTag
   * @return payoutTag
   */
  @javax.annotation.Nullable
  public String getPayoutTag() {
    return payoutTag;
  }

  public void setPayoutTag(@javax.annotation.Nullable String payoutTag) {
    this.payoutTag = payoutTag;
  }


  public PostPayout200ResponsePayoutsInner payoutStatus(@javax.annotation.Nullable PayoutStatusEnum payoutStatus) {
    this.payoutStatus = payoutStatus;
    return this;
  }

  /**
   * Get payoutStatus
   * @return payoutStatus
   */
  @javax.annotation.Nullable
  public PayoutStatusEnum getPayoutStatus() {
    return payoutStatus;
  }

  public void setPayoutStatus(@javax.annotation.Nullable PayoutStatusEnum payoutStatus) {
    this.payoutStatus = payoutStatus;
  }


  public PostPayout200ResponsePayoutsInner payoutTypeId(@javax.annotation.Nullable Integer payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
    return this;
  }

  /**
   * Get payoutTypeId
   * @return payoutTypeId
   */
  @javax.annotation.Nullable
  public Integer getPayoutTypeId() {
    return payoutTypeId;
  }

  public void setPayoutTypeId(@javax.annotation.Nullable Integer payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
  }


  public PostPayout200ResponsePayoutsInner payoutType(@javax.annotation.Nullable PayoutTypeEnum payoutType) {
    this.payoutType = payoutType;
    return this;
  }

  /**
   * Get payoutType
   * @return payoutType
   */
  @javax.annotation.Nullable
  public PayoutTypeEnum getPayoutType() {
    return payoutType;
  }

  public void setPayoutType(@javax.annotation.Nullable PayoutTypeEnum payoutType) {
    this.payoutType = payoutType;
  }


  public PostPayout200ResponsePayoutsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public PostPayout200ResponsePayoutsInner payoutDate(@javax.annotation.Nullable String payoutDate) {
    this.payoutDate = payoutDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return payoutDate
   */
  @javax.annotation.Nullable
  public String getPayoutDate() {
    return payoutDate;
  }

  public void setPayoutDate(@javax.annotation.Nullable String payoutDate) {
    this.payoutDate = payoutDate;
  }


  public PostPayout200ResponsePayoutsInner walletEventName(@javax.annotation.Nullable String walletEventName) {
    this.walletEventName = walletEventName;
    return this;
  }

  /**
   * Get walletEventName
   * @return walletEventName
   */
  @javax.annotation.Nullable
  public String getWalletEventName() {
    return walletEventName;
  }

  public void setWalletEventName(@javax.annotation.Nullable String walletEventName) {
    this.walletEventName = walletEventName;
  }


  public PostPayout200ResponsePayoutsInner walletAlias(@javax.annotation.Nullable String walletAlias) {
    this.walletAlias = walletAlias;
    return this;
  }

  /**
   * Get walletAlias
   * @return walletAlias
   */
  @javax.annotation.Nullable
  public String getWalletAlias() {
    return walletAlias;
  }

  public void setWalletAlias(@javax.annotation.Nullable String walletAlias) {
    this.walletAlias = walletAlias;
  }


  public PostPayout200ResponsePayoutsInner userFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
    return this;
  }

  /**
   * Get userFirstname
   * @return userFirstname
   */
  @javax.annotation.Nullable
  public String getUserFirstname() {
    return userFirstname;
  }

  public void setUserFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
  }


  public PostPayout200ResponsePayoutsInner userLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
    return this;
  }

  /**
   * Get userLastname
   * @return userLastname
   */
  @javax.annotation.Nullable
  public String getUserLastname() {
    return userLastname;
  }

  public void setUserLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
  }


  public PostPayout200ResponsePayoutsInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public PostPayout200ResponsePayoutsInner beneficiaryId(@javax.annotation.Nullable Integer beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
    return this;
  }

  /**
   * Get beneficiaryId
   * @return beneficiaryId
   */
  @javax.annotation.Nullable
  public Integer getBeneficiaryId() {
    return beneficiaryId;
  }

  public void setBeneficiaryId(@javax.annotation.Nullable Integer beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
  }


  public PostPayout200ResponsePayoutsInner uniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
    return this;
  }

  /**
   * Get uniqueMandateReference
   * @return uniqueMandateReference
   */
  @javax.annotation.Nullable
  public String getUniqueMandateReference() {
    return uniqueMandateReference;
  }

  public void setUniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
  }


  public PostPayout200ResponsePayoutsInner bankaccountIBAN(@javax.annotation.Nullable String bankaccountIBAN) {
    this.bankaccountIBAN = bankaccountIBAN;
    return this;
  }

  /**
   * Get bankaccountIBAN
   * @return bankaccountIBAN
   */
  @javax.annotation.Nullable
  public String getBankaccountIBAN() {
    return bankaccountIBAN;
  }

  public void setBankaccountIBAN(@javax.annotation.Nullable String bankaccountIBAN) {
    this.bankaccountIBAN = bankaccountIBAN;
  }


  public PostPayout200ResponsePayoutsInner virtualIbanId(@javax.annotation.Nullable Integer virtualIbanId) {
    this.virtualIbanId = virtualIbanId;
    return this;
  }

  /**
   * Get virtualIbanId
   * @return virtualIbanId
   */
  @javax.annotation.Nullable
  public Integer getVirtualIbanId() {
    return virtualIbanId;
  }

  public void setVirtualIbanId(@javax.annotation.Nullable Integer virtualIbanId) {
    this.virtualIbanId = virtualIbanId;
  }


  public PostPayout200ResponsePayoutsInner virtualIbanReference(@javax.annotation.Nullable String virtualIbanReference) {
    this.virtualIbanReference = virtualIbanReference;
    return this;
  }

  /**
   * Get virtualIbanReference
   * @return virtualIbanReference
   */
  @javax.annotation.Nullable
  public String getVirtualIbanReference() {
    return virtualIbanReference;
  }

  public void setVirtualIbanReference(@javax.annotation.Nullable String virtualIbanReference) {
    this.virtualIbanReference = virtualIbanReference;
  }


  public PostPayout200ResponsePayoutsInner label(@javax.annotation.Nullable String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = label;
  }


  public PostPayout200ResponsePayoutsInner endToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = endToEndId;
    return this;
  }

  /**
   * Get endToEndId
   * @return endToEndId
   */
  @javax.annotation.Nullable
  public String getEndToEndId() {
    return endToEndId;
  }

  public void setEndToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = endToEndId;
  }


  public PostPayout200ResponsePayoutsInner reasonCode(@javax.annotation.Nullable String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * Get reasonCode
   * @return reasonCode
   */
  @javax.annotation.Nullable
  public String getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(@javax.annotation.Nullable String reasonCode) {
    this.reasonCode = reasonCode;
  }


  public PostPayout200ResponsePayoutsInner reasonDescription(@javax.annotation.Nullable String reasonDescription) {
    this.reasonDescription = reasonDescription;
    return this;
  }

  /**
   * Get reasonDescription
   * @return reasonDescription
   */
  @javax.annotation.Nullable
  public String getReasonDescription() {
    return reasonDescription;
  }

  public void setReasonDescription(@javax.annotation.Nullable String reasonDescription) {
    this.reasonDescription = reasonDescription;
  }


  public PostPayout200ResponsePayoutsInner codeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * Get codeStatus
   * @return codeStatus
   */
  @javax.annotation.Nullable
  public String getCodeStatus() {
    return codeStatus;
  }

  public void setCodeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = codeStatus;
  }


  public PostPayout200ResponsePayoutsInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  public String getInformationStatus() {
    return informationStatus;
  }

  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }


  public PostPayout200ResponsePayoutsInner supportingFileLink(@javax.annotation.Nullable String supportingFileLink) {
    this.supportingFileLink = supportingFileLink;
    return this;
  }

  /**
   * Get supportingFileLink
   * @return supportingFileLink
   */
  @javax.annotation.Nullable
  public String getSupportingFileLink() {
    return supportingFileLink;
  }

  public void setSupportingFileLink(@javax.annotation.Nullable String supportingFileLink) {
    this.supportingFileLink = supportingFileLink;
  }


  public PostPayout200ResponsePayoutsInner amount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
  }


  public PostPayout200ResponsePayoutsInner currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }


  public PostPayout200ResponsePayoutsInner partnerFee(@javax.annotation.Nullable String partnerFee) {
    this.partnerFee = partnerFee;
    return this;
  }

  /**
   * Get partnerFee
   * @return partnerFee
   */
  @javax.annotation.Nullable
  public String getPartnerFee() {
    return partnerFee;
  }

  public void setPartnerFee(@javax.annotation.Nullable String partnerFee) {
    this.partnerFee = partnerFee;
  }


  public PostPayout200ResponsePayoutsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public PostPayout200ResponsePayoutsInner modifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(@javax.annotation.Nullable String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public PostPayout200ResponsePayoutsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }


  public PostPayout200ResponsePayoutsInner metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = metadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPayout200ResponsePayoutsInner postPayout200ResponsePayoutsInner = (PostPayout200ResponsePayoutsInner) o;
    return Objects.equals(this.payoutId, postPayout200ResponsePayoutsInner.payoutId) &&
        Objects.equals(this.payoutTag, postPayout200ResponsePayoutsInner.payoutTag) &&
        Objects.equals(this.payoutStatus, postPayout200ResponsePayoutsInner.payoutStatus) &&
        Objects.equals(this.payoutTypeId, postPayout200ResponsePayoutsInner.payoutTypeId) &&
        Objects.equals(this.payoutType, postPayout200ResponsePayoutsInner.payoutType) &&
        Objects.equals(this.walletId, postPayout200ResponsePayoutsInner.walletId) &&
        Objects.equals(this.payoutDate, postPayout200ResponsePayoutsInner.payoutDate) &&
        Objects.equals(this.walletEventName, postPayout200ResponsePayoutsInner.walletEventName) &&
        Objects.equals(this.walletAlias, postPayout200ResponsePayoutsInner.walletAlias) &&
        Objects.equals(this.userFirstname, postPayout200ResponsePayoutsInner.userFirstname) &&
        Objects.equals(this.userLastname, postPayout200ResponsePayoutsInner.userLastname) &&
        Objects.equals(this.userId, postPayout200ResponsePayoutsInner.userId) &&
        Objects.equals(this.beneficiaryId, postPayout200ResponsePayoutsInner.beneficiaryId) &&
        Objects.equals(this.uniqueMandateReference, postPayout200ResponsePayoutsInner.uniqueMandateReference) &&
        Objects.equals(this.bankaccountIBAN, postPayout200ResponsePayoutsInner.bankaccountIBAN) &&
        Objects.equals(this.virtualIbanId, postPayout200ResponsePayoutsInner.virtualIbanId) &&
        Objects.equals(this.virtualIbanReference, postPayout200ResponsePayoutsInner.virtualIbanReference) &&
        Objects.equals(this.label, postPayout200ResponsePayoutsInner.label) &&
        Objects.equals(this.endToEndId, postPayout200ResponsePayoutsInner.endToEndId) &&
        Objects.equals(this.reasonCode, postPayout200ResponsePayoutsInner.reasonCode) &&
        Objects.equals(this.reasonDescription, postPayout200ResponsePayoutsInner.reasonDescription) &&
        Objects.equals(this.codeStatus, postPayout200ResponsePayoutsInner.codeStatus) &&
        Objects.equals(this.informationStatus, postPayout200ResponsePayoutsInner.informationStatus) &&
        Objects.equals(this.supportingFileLink, postPayout200ResponsePayoutsInner.supportingFileLink) &&
        Objects.equals(this.amount, postPayout200ResponsePayoutsInner.amount) &&
        Objects.equals(this.currency, postPayout200ResponsePayoutsInner.currency) &&
        Objects.equals(this.partnerFee, postPayout200ResponsePayoutsInner.partnerFee) &&
        Objects.equals(this.createdDate, postPayout200ResponsePayoutsInner.createdDate) &&
        Objects.equals(this.modifiedDate, postPayout200ResponsePayoutsInner.modifiedDate) &&
        Objects.equals(this.totalRows, postPayout200ResponsePayoutsInner.totalRows) &&
        Objects.equals(this.metadata, postPayout200ResponsePayoutsInner.metadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutId, payoutTag, payoutStatus, payoutTypeId, payoutType, walletId, payoutDate, walletEventName, walletAlias, userFirstname, userLastname, userId, beneficiaryId, uniqueMandateReference, bankaccountIBAN, virtualIbanId, virtualIbanReference, label, endToEndId, reasonCode, reasonDescription, codeStatus, informationStatus, supportingFileLink, amount, currency, partnerFee, createdDate, modifiedDate, totalRows, metadata);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPayout200ResponsePayoutsInner {\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    payoutTag: ").append(toIndentedString(payoutTag)).append("\n");
    sb.append("    payoutStatus: ").append(toIndentedString(payoutStatus)).append("\n");
    sb.append("    payoutTypeId: ").append(toIndentedString(payoutTypeId)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    payoutDate: ").append(toIndentedString(payoutDate)).append("\n");
    sb.append("    walletEventName: ").append(toIndentedString(walletEventName)).append("\n");
    sb.append("    walletAlias: ").append(toIndentedString(walletAlias)).append("\n");
    sb.append("    userFirstname: ").append(toIndentedString(userFirstname)).append("\n");
    sb.append("    userLastname: ").append(toIndentedString(userLastname)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    beneficiaryId: ").append(toIndentedString(beneficiaryId)).append("\n");
    sb.append("    uniqueMandateReference: ").append(toIndentedString(uniqueMandateReference)).append("\n");
    sb.append("    bankaccountIBAN: ").append(toIndentedString(bankaccountIBAN)).append("\n");
    sb.append("    virtualIbanId: ").append(toIndentedString(virtualIbanId)).append("\n");
    sb.append("    virtualIbanReference: ").append(toIndentedString(virtualIbanReference)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    reasonDescription: ").append(toIndentedString(reasonDescription)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    supportingFileLink: ").append(toIndentedString(supportingFileLink)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    partnerFee: ").append(toIndentedString(partnerFee)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payoutId");
    openapiFields.add("payoutTag");
    openapiFields.add("payoutStatus");
    openapiFields.add("payoutTypeId");
    openapiFields.add("payoutType");
    openapiFields.add("walletId");
    openapiFields.add("payoutDate");
    openapiFields.add("walletEventName");
    openapiFields.add("walletAlias");
    openapiFields.add("userFirstname");
    openapiFields.add("userLastname");
    openapiFields.add("userId");
    openapiFields.add("beneficiaryId");
    openapiFields.add("uniqueMandateReference");
    openapiFields.add("bankaccountIBAN");
    openapiFields.add("virtualIbanId");
    openapiFields.add("virtualIbanReference");
    openapiFields.add("label");
    openapiFields.add("endToEndId");
    openapiFields.add("reasonCode");
    openapiFields.add("reasonDescription");
    openapiFields.add("codeStatus");
    openapiFields.add("informationStatus");
    openapiFields.add("supportingFileLink");
    openapiFields.add("amount");
    openapiFields.add("currency");
    openapiFields.add("partnerFee");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("totalRows");
    openapiFields.add("metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostPayout200ResponsePayoutsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostPayout200ResponsePayoutsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostPayout200ResponsePayoutsInner is not found in the empty JSON string", PostPayout200ResponsePayoutsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostPayout200ResponsePayoutsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostPayout200ResponsePayoutsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("payoutTag") != null && !jsonObj.get("payoutTag").isJsonNull()) && !jsonObj.get("payoutTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payoutTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payoutTag").toString()));
      }
      if ((jsonObj.get("payoutStatus") != null && !jsonObj.get("payoutStatus").isJsonNull()) && !jsonObj.get("payoutStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payoutStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payoutStatus").toString()));
      }
      // validate the optional field `payoutStatus`
      if (jsonObj.get("payoutStatus") != null && !jsonObj.get("payoutStatus").isJsonNull()) {
        PayoutStatusEnum.validateJsonElement(jsonObj.get("payoutStatus"));
      }
      if ((jsonObj.get("payoutType") != null && !jsonObj.get("payoutType").isJsonNull()) && !jsonObj.get("payoutType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payoutType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payoutType").toString()));
      }
      // validate the optional field `payoutType`
      if (jsonObj.get("payoutType") != null && !jsonObj.get("payoutType").isJsonNull()) {
        PayoutTypeEnum.validateJsonElement(jsonObj.get("payoutType"));
      }
      if ((jsonObj.get("payoutDate") != null && !jsonObj.get("payoutDate").isJsonNull()) && !jsonObj.get("payoutDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payoutDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payoutDate").toString()));
      }
      if ((jsonObj.get("walletEventName") != null && !jsonObj.get("walletEventName").isJsonNull()) && !jsonObj.get("walletEventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletEventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletEventName").toString()));
      }
      if ((jsonObj.get("walletAlias") != null && !jsonObj.get("walletAlias").isJsonNull()) && !jsonObj.get("walletAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletAlias").toString()));
      }
      if ((jsonObj.get("userFirstname") != null && !jsonObj.get("userFirstname").isJsonNull()) && !jsonObj.get("userFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstname").toString()));
      }
      if ((jsonObj.get("userLastname") != null && !jsonObj.get("userLastname").isJsonNull()) && !jsonObj.get("userLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLastname").toString()));
      }
      if ((jsonObj.get("uniqueMandateReference") != null && !jsonObj.get("uniqueMandateReference").isJsonNull()) && !jsonObj.get("uniqueMandateReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uniqueMandateReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uniqueMandateReference").toString()));
      }
      if ((jsonObj.get("bankaccountIBAN") != null && !jsonObj.get("bankaccountIBAN").isJsonNull()) && !jsonObj.get("bankaccountIBAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankaccountIBAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankaccountIBAN").toString()));
      }
      if ((jsonObj.get("virtualIbanReference") != null && !jsonObj.get("virtualIbanReference").isJsonNull()) && !jsonObj.get("virtualIbanReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtualIbanReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtualIbanReference").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("endToEndId") != null && !jsonObj.get("endToEndId").isJsonNull()) && !jsonObj.get("endToEndId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endToEndId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endToEndId").toString()));
      }
      if ((jsonObj.get("reasonCode") != null && !jsonObj.get("reasonCode").isJsonNull()) && !jsonObj.get("reasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonCode").toString()));
      }
      if ((jsonObj.get("reasonDescription") != null && !jsonObj.get("reasonDescription").isJsonNull()) && !jsonObj.get("reasonDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonDescription").toString()));
      }
      if ((jsonObj.get("codeStatus") != null && !jsonObj.get("codeStatus").isJsonNull()) && !jsonObj.get("codeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codeStatus").toString()));
      }
      if ((jsonObj.get("informationStatus") != null && !jsonObj.get("informationStatus").isJsonNull()) && !jsonObj.get("informationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `informationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("informationStatus").toString()));
      }
      if ((jsonObj.get("supportingFileLink") != null && !jsonObj.get("supportingFileLink").isJsonNull()) && !jsonObj.get("supportingFileLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportingFileLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportingFileLink").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("partnerFee") != null && !jsonObj.get("partnerFee").isJsonNull()) && !jsonObj.get("partnerFee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerFee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerFee").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostPayout200ResponsePayoutsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostPayout200ResponsePayoutsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostPayout200ResponsePayoutsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostPayout200ResponsePayoutsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PostPayout200ResponsePayoutsInner>() {
           @Override
           public void write(JsonWriter out, PostPayout200ResponsePayoutsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostPayout200ResponsePayoutsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostPayout200ResponsePayoutsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostPayout200ResponsePayoutsInner
   * @throws IOException if the JSON string is invalid with respect to PostPayout200ResponsePayoutsInner
   */
  public static PostPayout200ResponsePayoutsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostPayout200ResponsePayoutsInner.class);
  }

  /**
   * Convert an instance of PostPayout200ResponsePayoutsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

