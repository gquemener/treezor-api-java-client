/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetRecallSctInst200ResponseRecallsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class GetRecallSctInst200ResponseRecallsInner {
  public static final String SERIALIZED_NAME_RECALL_ID = "recallId";
  @SerializedName(SERIALIZED_NAME_RECALL_ID)
  @javax.annotation.Nullable
  private String recallId;

  public static final String SERIALIZED_NAME_CREATION_DATE_T_IME = "creationDateTIme";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE_T_IME)
  @javax.annotation.Nullable
  private String creationDateTIme;

  /**
   * The status of the recall. See [Status](/guide/transfers/sepa-recalls.html#status-statuslabel) for more information. 
   */
  @JsonAdapter(StatusLabelEnum.Adapter.class)
  public enum StatusLabelEnum {
    PENDING("PENDING"),
    
    PENDING_REJECTED_WAITING_ACK("PENDING_REJECTED_WAITING_ACK"),
    
    PENDING_ACCEPTED_WAITING_ACK("PENDING_ACCEPTED_WAITING_ACK"),
    
    ACCEPTED("ACCEPTED"),
    
    REJECTED("REJECTED");

    private String value;

    StatusLabelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusLabelEnum fromValue(String value) {
      for (StatusLabelEnum b : StatusLabelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusLabelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusLabelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusLabelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusLabelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusLabelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS_LABEL = "statusLabel";
  @SerializedName(SERIALIZED_NAME_STATUS_LABEL)
  @javax.annotation.Nullable
  private StatusLabelEnum statusLabel;

  public static final String SERIALIZED_NAME_CX_ID = "cxId";
  @SerializedName(SERIALIZED_NAME_CX_ID)
  @javax.annotation.Nullable
  private String cxId;

  /**
   * The type of recall. See [Types](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) for more information. 
   */
  @JsonAdapter(ReasonCodeEnum.Adapter.class)
  public enum ReasonCodeEnum {
    DUPL("DUPL"),
    
    TECH("TECH"),
    
    FRAD("FRAD"),
    
    CUST("CUST"),
    
    AM09("AM09"),
    
    AC03("AC03");

    private String value;

    ReasonCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReasonCodeEnum fromValue(String value) {
      for (ReasonCodeEnum b : ReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReasonCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReasonCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReasonCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReasonCodeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReasonCodeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REASON_CODE = "reasonCode";
  @SerializedName(SERIALIZED_NAME_REASON_CODE)
  @javax.annotation.Nullable
  private ReasonCodeEnum reasonCode;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "additionalInformation";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  @javax.annotation.Nullable
  private String additionalInformation;

  public static final String SERIALIZED_NAME_SCTR_DBTR_I_B_A_N = "sctrDbtrIBAN";
  @SerializedName(SERIALIZED_NAME_SCTR_DBTR_I_B_A_N)
  @javax.annotation.Nullable
  private String sctrDbtrIBAN;

  public static final String SERIALIZED_NAME_SCTR_DBTR_B_I_C = "sctrDbtrBIC";
  @SerializedName(SERIALIZED_NAME_SCTR_DBTR_B_I_C)
  @javax.annotation.Nullable
  private String sctrDbtrBIC;

  public static final String SERIALIZED_NAME_SCTR_DBTR_NAME = "sctrDbtrName";
  @SerializedName(SERIALIZED_NAME_SCTR_DBTR_NAME)
  @javax.annotation.Nullable
  private String sctrDbtrName;

  public static final String SERIALIZED_NAME_SCTR_DBTR_ADDRESS = "sctrDbtrAddress";
  @SerializedName(SERIALIZED_NAME_SCTR_DBTR_ADDRESS)
  @javax.annotation.Nullable
  private String sctrDbtrAddress;

  public static final String SERIALIZED_NAME_SCTR_DBTR_COUNTRY = "sctrDbtrCountry";
  @SerializedName(SERIALIZED_NAME_SCTR_DBTR_COUNTRY)
  @javax.annotation.Nullable
  private String sctrDbtrCountry;

  public static final String SERIALIZED_NAME_SCTR_CDTR_I_B_A_N = "sctrCdtrIBAN";
  @SerializedName(SERIALIZED_NAME_SCTR_CDTR_I_B_A_N)
  @javax.annotation.Nullable
  private String sctrCdtrIBAN;

  public static final String SERIALIZED_NAME_SCTR_CDTR_B_I_C = "sctrCdtrBIC";
  @SerializedName(SERIALIZED_NAME_SCTR_CDTR_B_I_C)
  @javax.annotation.Nullable
  private String sctrCdtrBIC;

  public static final String SERIALIZED_NAME_SCTR_CDTR_NAME = "sctrCdtrName";
  @SerializedName(SERIALIZED_NAME_SCTR_CDTR_NAME)
  @javax.annotation.Nullable
  private String sctrCdtrName;

  public static final String SERIALIZED_NAME_SCTR_CDTR_ADDRESS = "sctrCdtrAddress";
  @SerializedName(SERIALIZED_NAME_SCTR_CDTR_ADDRESS)
  @javax.annotation.Nullable
  private String sctrCdtrAddress;

  public static final String SERIALIZED_NAME_SCTR_CDTR_COUNTRY = "sctrCdtrCountry";
  @SerializedName(SERIALIZED_NAME_SCTR_CDTR_COUNTRY)
  @javax.annotation.Nullable
  private String sctrCdtrCountry;

  public static final String SERIALIZED_NAME_SCTR_MSG_ID = "sctrMsgId";
  @SerializedName(SERIALIZED_NAME_SCTR_MSG_ID)
  @javax.annotation.Nullable
  private String sctrMsgId;

  public static final String SERIALIZED_NAME_SCTR_INSTR_ID = "sctrInstrId";
  @SerializedName(SERIALIZED_NAME_SCTR_INSTR_ID)
  @javax.annotation.Nullable
  private String sctrInstrId;

  public static final String SERIALIZED_NAME_SCTR_TX_ID = "sctrTxId";
  @SerializedName(SERIALIZED_NAME_SCTR_TX_ID)
  @javax.annotation.Nullable
  private String sctrTxId;

  public static final String SERIALIZED_NAME_SCTR_E2_E_I_D = "sctrE2EID";
  @SerializedName(SERIALIZED_NAME_SCTR_E2_E_I_D)
  @javax.annotation.Nullable
  private String sctrE2EID;

  public static final String SERIALIZED_NAME_SCTR_AMOUNT = "sctrAmount";
  @SerializedName(SERIALIZED_NAME_SCTR_AMOUNT)
  @javax.annotation.Nullable
  private String sctrAmount;

  public static final String SERIALIZED_NAME_SCTR_SETTLEMENT_DATE = "sctrSettlementDate";
  @SerializedName(SERIALIZED_NAME_SCTR_SETTLEMENT_DATE)
  @javax.annotation.Nullable
  private String sctrSettlementDate;

  public static final String SERIALIZED_NAME_SCTR_REMITTANCE_INFORMATION = "sctrRemittanceInformation";
  @SerializedName(SERIALIZED_NAME_SCTR_REMITTANCE_INFORMATION)
  @javax.annotation.Nullable
  private String sctrRemittanceInformation;

  public static final String SERIALIZED_NAME_SCTR_TRZ_ID = "sctrTrzId";
  @SerializedName(SERIALIZED_NAME_SCTR_TRZ_ID)
  @javax.annotation.Nullable
  private String sctrTrzId;

  public static final String SERIALIZED_NAME_SCTR_EXTERNAL_ID = "sctrExternalId";
  @SerializedName(SERIALIZED_NAME_SCTR_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String sctrExternalId;

  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private Integer clientId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String SERIALIZED_NAME_RECEIVED_DATE = "receivedDate";
  @SerializedName(SERIALIZED_NAME_RECEIVED_DATE)
  @javax.annotation.Nullable
  private String receivedDate;

  public static final String SERIALIZED_NAME_PAYIN_REFUND_ID = "payinRefundId";
  @SerializedName(SERIALIZED_NAME_PAYIN_REFUND_ID)
  @javax.annotation.Nullable
  private Integer payinRefundId;

  public static final String SERIALIZED_NAME_RESPONSE_TYPE = "responseType";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TYPE)
  @javax.annotation.Nullable
  private Integer responseType;

  /**
   * The [type of Recall Rejection](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode).
   */
  @JsonAdapter(NegativeResponseReasonCodeEnum.Adapter.class)
  public enum NegativeResponseReasonCodeEnum {
    NOOR("NOOR"),
    
    ARDT("ARDT"),
    
    AC04("AC04"),
    
    NOAS("NOAS"),
    
    CUST("CUST"),
    
    AM04("AM04"),
    
    LEGL("LEGL");

    private String value;

    NegativeResponseReasonCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NegativeResponseReasonCodeEnum fromValue(String value) {
      for (NegativeResponseReasonCodeEnum b : NegativeResponseReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<NegativeResponseReasonCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NegativeResponseReasonCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NegativeResponseReasonCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NegativeResponseReasonCodeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      NegativeResponseReasonCodeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_NEGATIVE_RESPONSE_REASON_CODE = "negativeResponseReasonCode";
  @SerializedName(SERIALIZED_NAME_NEGATIVE_RESPONSE_REASON_CODE)
  @javax.annotation.Nullable
  private NegativeResponseReasonCodeEnum negativeResponseReasonCode;

  public static final String SERIALIZED_NAME_NEGATIVE_RESPONSE_ADDITIONAL_INFORMATION = "negativeResponseAdditionalInformation";
  @SerializedName(SERIALIZED_NAME_NEGATIVE_RESPONSE_ADDITIONAL_INFORMATION)
  @javax.annotation.Nullable
  private String negativeResponseAdditionalInformation;

  public static final String SERIALIZED_NAME_RESPONSE_COMMENT = "responseComment";
  @SerializedName(SERIALIZED_NAME_RESPONSE_COMMENT)
  @javax.annotation.Nullable
  private String responseComment;

  public static final String SERIALIZED_NAME_AUTOMATIC_RESPONSE = "automaticResponse";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_RESPONSE)
  @javax.annotation.Nullable
  private String automaticResponse;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_UPDATED_DATE = "updatedDate";
  @SerializedName(SERIALIZED_NAME_UPDATED_DATE)
  @javax.annotation.Nullable
  private String updatedDate;

  public GetRecallSctInst200ResponseRecallsInner() {
  }

  public GetRecallSctInst200ResponseRecallsInner recallId(@javax.annotation.Nullable String recallId) {
    this.recallId = recallId;
    return this;
  }

  /**
   * Get recallId
   * @return recallId
   */
  @javax.annotation.Nullable
  public String getRecallId() {
    return recallId;
  }

  public void setRecallId(@javax.annotation.Nullable String recallId) {
    this.recallId = recallId;
  }


  public GetRecallSctInst200ResponseRecallsInner creationDateTIme(@javax.annotation.Nullable String creationDateTIme) {
    this.creationDateTIme = creationDateTIme;
    return this;
  }

  /**
   * Get creationDateTIme
   * @return creationDateTIme
   */
  @javax.annotation.Nullable
  public String getCreationDateTIme() {
    return creationDateTIme;
  }

  public void setCreationDateTIme(@javax.annotation.Nullable String creationDateTIme) {
    this.creationDateTIme = creationDateTIme;
  }


  public GetRecallSctInst200ResponseRecallsInner statusLabel(@javax.annotation.Nullable StatusLabelEnum statusLabel) {
    this.statusLabel = statusLabel;
    return this;
  }

  /**
   * The status of the recall. See [Status](/guide/transfers/sepa-recalls.html#status-statuslabel) for more information. 
   * @return statusLabel
   */
  @javax.annotation.Nullable
  public StatusLabelEnum getStatusLabel() {
    return statusLabel;
  }

  public void setStatusLabel(@javax.annotation.Nullable StatusLabelEnum statusLabel) {
    this.statusLabel = statusLabel;
  }


  public GetRecallSctInst200ResponseRecallsInner cxId(@javax.annotation.Nullable String cxId) {
    this.cxId = cxId;
    return this;
  }

  /**
   * Get cxId
   * @return cxId
   */
  @javax.annotation.Nullable
  public String getCxId() {
    return cxId;
  }

  public void setCxId(@javax.annotation.Nullable String cxId) {
    this.cxId = cxId;
  }


  public GetRecallSctInst200ResponseRecallsInner reasonCode(@javax.annotation.Nullable ReasonCodeEnum reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * The type of recall. See [Types](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) for more information. 
   * @return reasonCode
   */
  @javax.annotation.Nullable
  public ReasonCodeEnum getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(@javax.annotation.Nullable ReasonCodeEnum reasonCode) {
    this.reasonCode = reasonCode;
  }


  public GetRecallSctInst200ResponseRecallsInner additionalInformation(@javax.annotation.Nullable String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  /**
   * Get additionalInformation
   * @return additionalInformation
   */
  @javax.annotation.Nullable
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(@javax.annotation.Nullable String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrDbtrIBAN(@javax.annotation.Nullable String sctrDbtrIBAN) {
    this.sctrDbtrIBAN = sctrDbtrIBAN;
    return this;
  }

  /**
   * Get sctrDbtrIBAN
   * @return sctrDbtrIBAN
   */
  @javax.annotation.Nullable
  public String getSctrDbtrIBAN() {
    return sctrDbtrIBAN;
  }

  public void setSctrDbtrIBAN(@javax.annotation.Nullable String sctrDbtrIBAN) {
    this.sctrDbtrIBAN = sctrDbtrIBAN;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrDbtrBIC(@javax.annotation.Nullable String sctrDbtrBIC) {
    this.sctrDbtrBIC = sctrDbtrBIC;
    return this;
  }

  /**
   * Get sctrDbtrBIC
   * @return sctrDbtrBIC
   */
  @javax.annotation.Nullable
  public String getSctrDbtrBIC() {
    return sctrDbtrBIC;
  }

  public void setSctrDbtrBIC(@javax.annotation.Nullable String sctrDbtrBIC) {
    this.sctrDbtrBIC = sctrDbtrBIC;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrDbtrName(@javax.annotation.Nullable String sctrDbtrName) {
    this.sctrDbtrName = sctrDbtrName;
    return this;
  }

  /**
   * Get sctrDbtrName
   * @return sctrDbtrName
   */
  @javax.annotation.Nullable
  public String getSctrDbtrName() {
    return sctrDbtrName;
  }

  public void setSctrDbtrName(@javax.annotation.Nullable String sctrDbtrName) {
    this.sctrDbtrName = sctrDbtrName;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrDbtrAddress(@javax.annotation.Nullable String sctrDbtrAddress) {
    this.sctrDbtrAddress = sctrDbtrAddress;
    return this;
  }

  /**
   * Get sctrDbtrAddress
   * @return sctrDbtrAddress
   */
  @javax.annotation.Nullable
  public String getSctrDbtrAddress() {
    return sctrDbtrAddress;
  }

  public void setSctrDbtrAddress(@javax.annotation.Nullable String sctrDbtrAddress) {
    this.sctrDbtrAddress = sctrDbtrAddress;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrDbtrCountry(@javax.annotation.Nullable String sctrDbtrCountry) {
    this.sctrDbtrCountry = sctrDbtrCountry;
    return this;
  }

  /**
   * Get sctrDbtrCountry
   * @return sctrDbtrCountry
   */
  @javax.annotation.Nullable
  public String getSctrDbtrCountry() {
    return sctrDbtrCountry;
  }

  public void setSctrDbtrCountry(@javax.annotation.Nullable String sctrDbtrCountry) {
    this.sctrDbtrCountry = sctrDbtrCountry;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrCdtrIBAN(@javax.annotation.Nullable String sctrCdtrIBAN) {
    this.sctrCdtrIBAN = sctrCdtrIBAN;
    return this;
  }

  /**
   * Get sctrCdtrIBAN
   * @return sctrCdtrIBAN
   */
  @javax.annotation.Nullable
  public String getSctrCdtrIBAN() {
    return sctrCdtrIBAN;
  }

  public void setSctrCdtrIBAN(@javax.annotation.Nullable String sctrCdtrIBAN) {
    this.sctrCdtrIBAN = sctrCdtrIBAN;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrCdtrBIC(@javax.annotation.Nullable String sctrCdtrBIC) {
    this.sctrCdtrBIC = sctrCdtrBIC;
    return this;
  }

  /**
   * Get sctrCdtrBIC
   * @return sctrCdtrBIC
   */
  @javax.annotation.Nullable
  public String getSctrCdtrBIC() {
    return sctrCdtrBIC;
  }

  public void setSctrCdtrBIC(@javax.annotation.Nullable String sctrCdtrBIC) {
    this.sctrCdtrBIC = sctrCdtrBIC;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrCdtrName(@javax.annotation.Nullable String sctrCdtrName) {
    this.sctrCdtrName = sctrCdtrName;
    return this;
  }

  /**
   * Get sctrCdtrName
   * @return sctrCdtrName
   */
  @javax.annotation.Nullable
  public String getSctrCdtrName() {
    return sctrCdtrName;
  }

  public void setSctrCdtrName(@javax.annotation.Nullable String sctrCdtrName) {
    this.sctrCdtrName = sctrCdtrName;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrCdtrAddress(@javax.annotation.Nullable String sctrCdtrAddress) {
    this.sctrCdtrAddress = sctrCdtrAddress;
    return this;
  }

  /**
   * Get sctrCdtrAddress
   * @return sctrCdtrAddress
   */
  @javax.annotation.Nullable
  public String getSctrCdtrAddress() {
    return sctrCdtrAddress;
  }

  public void setSctrCdtrAddress(@javax.annotation.Nullable String sctrCdtrAddress) {
    this.sctrCdtrAddress = sctrCdtrAddress;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrCdtrCountry(@javax.annotation.Nullable String sctrCdtrCountry) {
    this.sctrCdtrCountry = sctrCdtrCountry;
    return this;
  }

  /**
   * Get sctrCdtrCountry
   * @return sctrCdtrCountry
   */
  @javax.annotation.Nullable
  public String getSctrCdtrCountry() {
    return sctrCdtrCountry;
  }

  public void setSctrCdtrCountry(@javax.annotation.Nullable String sctrCdtrCountry) {
    this.sctrCdtrCountry = sctrCdtrCountry;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrMsgId(@javax.annotation.Nullable String sctrMsgId) {
    this.sctrMsgId = sctrMsgId;
    return this;
  }

  /**
   * Get sctrMsgId
   * @return sctrMsgId
   */
  @javax.annotation.Nullable
  public String getSctrMsgId() {
    return sctrMsgId;
  }

  public void setSctrMsgId(@javax.annotation.Nullable String sctrMsgId) {
    this.sctrMsgId = sctrMsgId;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrInstrId(@javax.annotation.Nullable String sctrInstrId) {
    this.sctrInstrId = sctrInstrId;
    return this;
  }

  /**
   * Get sctrInstrId
   * @return sctrInstrId
   */
  @javax.annotation.Nullable
  public String getSctrInstrId() {
    return sctrInstrId;
  }

  public void setSctrInstrId(@javax.annotation.Nullable String sctrInstrId) {
    this.sctrInstrId = sctrInstrId;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrTxId(@javax.annotation.Nullable String sctrTxId) {
    this.sctrTxId = sctrTxId;
    return this;
  }

  /**
   * Get sctrTxId
   * @return sctrTxId
   */
  @javax.annotation.Nullable
  public String getSctrTxId() {
    return sctrTxId;
  }

  public void setSctrTxId(@javax.annotation.Nullable String sctrTxId) {
    this.sctrTxId = sctrTxId;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrE2EID(@javax.annotation.Nullable String sctrE2EID) {
    this.sctrE2EID = sctrE2EID;
    return this;
  }

  /**
   * Get sctrE2EID
   * @return sctrE2EID
   */
  @javax.annotation.Nullable
  public String getSctrE2EID() {
    return sctrE2EID;
  }

  public void setSctrE2EID(@javax.annotation.Nullable String sctrE2EID) {
    this.sctrE2EID = sctrE2EID;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrAmount(@javax.annotation.Nullable String sctrAmount) {
    this.sctrAmount = sctrAmount;
    return this;
  }

  /**
   * Get sctrAmount
   * @return sctrAmount
   */
  @javax.annotation.Nullable
  public String getSctrAmount() {
    return sctrAmount;
  }

  public void setSctrAmount(@javax.annotation.Nullable String sctrAmount) {
    this.sctrAmount = sctrAmount;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrSettlementDate(@javax.annotation.Nullable String sctrSettlementDate) {
    this.sctrSettlementDate = sctrSettlementDate;
    return this;
  }

  /**
   * Get sctrSettlementDate
   * @return sctrSettlementDate
   */
  @javax.annotation.Nullable
  public String getSctrSettlementDate() {
    return sctrSettlementDate;
  }

  public void setSctrSettlementDate(@javax.annotation.Nullable String sctrSettlementDate) {
    this.sctrSettlementDate = sctrSettlementDate;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrRemittanceInformation(@javax.annotation.Nullable String sctrRemittanceInformation) {
    this.sctrRemittanceInformation = sctrRemittanceInformation;
    return this;
  }

  /**
   * Get sctrRemittanceInformation
   * @return sctrRemittanceInformation
   */
  @javax.annotation.Nullable
  public String getSctrRemittanceInformation() {
    return sctrRemittanceInformation;
  }

  public void setSctrRemittanceInformation(@javax.annotation.Nullable String sctrRemittanceInformation) {
    this.sctrRemittanceInformation = sctrRemittanceInformation;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrTrzId(@javax.annotation.Nullable String sctrTrzId) {
    this.sctrTrzId = sctrTrzId;
    return this;
  }

  /**
   * Get sctrTrzId
   * @return sctrTrzId
   */
  @javax.annotation.Nullable
  public String getSctrTrzId() {
    return sctrTrzId;
  }

  public void setSctrTrzId(@javax.annotation.Nullable String sctrTrzId) {
    this.sctrTrzId = sctrTrzId;
  }


  public GetRecallSctInst200ResponseRecallsInner sctrExternalId(@javax.annotation.Nullable String sctrExternalId) {
    this.sctrExternalId = sctrExternalId;
    return this;
  }

  /**
   * Get sctrExternalId
   * @return sctrExternalId
   */
  @javax.annotation.Nullable
  public String getSctrExternalId() {
    return sctrExternalId;
  }

  public void setSctrExternalId(@javax.annotation.Nullable String sctrExternalId) {
    this.sctrExternalId = sctrExternalId;
  }


  public GetRecallSctInst200ResponseRecallsInner clientId(@javax.annotation.Nullable Integer clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public Integer getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable Integer clientId) {
    this.clientId = clientId;
  }


  public GetRecallSctInst200ResponseRecallsInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public GetRecallSctInst200ResponseRecallsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public GetRecallSctInst200ResponseRecallsInner receivedDate(@javax.annotation.Nullable String receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

  /**
   * Get receivedDate
   * @return receivedDate
   */
  @javax.annotation.Nullable
  public String getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(@javax.annotation.Nullable String receivedDate) {
    this.receivedDate = receivedDate;
  }


  public GetRecallSctInst200ResponseRecallsInner payinRefundId(@javax.annotation.Nullable Integer payinRefundId) {
    this.payinRefundId = payinRefundId;
    return this;
  }

  /**
   * Get payinRefundId
   * @return payinRefundId
   */
  @javax.annotation.Nullable
  public Integer getPayinRefundId() {
    return payinRefundId;
  }

  public void setPayinRefundId(@javax.annotation.Nullable Integer payinRefundId) {
    this.payinRefundId = payinRefundId;
  }


  public GetRecallSctInst200ResponseRecallsInner responseType(@javax.annotation.Nullable Integer responseType) {
    this.responseType = responseType;
    return this;
  }

  /**
   * Get responseType
   * @return responseType
   */
  @javax.annotation.Nullable
  public Integer getResponseType() {
    return responseType;
  }

  public void setResponseType(@javax.annotation.Nullable Integer responseType) {
    this.responseType = responseType;
  }


  public GetRecallSctInst200ResponseRecallsInner negativeResponseReasonCode(@javax.annotation.Nullable NegativeResponseReasonCodeEnum negativeResponseReasonCode) {
    this.negativeResponseReasonCode = negativeResponseReasonCode;
    return this;
  }

  /**
   * The [type of Recall Rejection](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode).
   * @return negativeResponseReasonCode
   */
  @javax.annotation.Nullable
  public NegativeResponseReasonCodeEnum getNegativeResponseReasonCode() {
    return negativeResponseReasonCode;
  }

  public void setNegativeResponseReasonCode(@javax.annotation.Nullable NegativeResponseReasonCodeEnum negativeResponseReasonCode) {
    this.negativeResponseReasonCode = negativeResponseReasonCode;
  }


  public GetRecallSctInst200ResponseRecallsInner negativeResponseAdditionalInformation(@javax.annotation.Nullable String negativeResponseAdditionalInformation) {
    this.negativeResponseAdditionalInformation = negativeResponseAdditionalInformation;
    return this;
  }

  /**
   * Get negativeResponseAdditionalInformation
   * @return negativeResponseAdditionalInformation
   */
  @javax.annotation.Nullable
  public String getNegativeResponseAdditionalInformation() {
    return negativeResponseAdditionalInformation;
  }

  public void setNegativeResponseAdditionalInformation(@javax.annotation.Nullable String negativeResponseAdditionalInformation) {
    this.negativeResponseAdditionalInformation = negativeResponseAdditionalInformation;
  }


  public GetRecallSctInst200ResponseRecallsInner responseComment(@javax.annotation.Nullable String responseComment) {
    this.responseComment = responseComment;
    return this;
  }

  /**
   * Get responseComment
   * @return responseComment
   */
  @javax.annotation.Nullable
  public String getResponseComment() {
    return responseComment;
  }

  public void setResponseComment(@javax.annotation.Nullable String responseComment) {
    this.responseComment = responseComment;
  }


  public GetRecallSctInst200ResponseRecallsInner automaticResponse(@javax.annotation.Nullable String automaticResponse) {
    this.automaticResponse = automaticResponse;
    return this;
  }

  /**
   * Get automaticResponse
   * @return automaticResponse
   */
  @javax.annotation.Nullable
  public String getAutomaticResponse() {
    return automaticResponse;
  }

  public void setAutomaticResponse(@javax.annotation.Nullable String automaticResponse) {
    this.automaticResponse = automaticResponse;
  }


  public GetRecallSctInst200ResponseRecallsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public GetRecallSctInst200ResponseRecallsInner updatedDate(@javax.annotation.Nullable String updatedDate) {
    this.updatedDate = updatedDate;
    return this;
  }

  /**
   * Get updatedDate
   * @return updatedDate
   */
  @javax.annotation.Nullable
  public String getUpdatedDate() {
    return updatedDate;
  }

  public void setUpdatedDate(@javax.annotation.Nullable String updatedDate) {
    this.updatedDate = updatedDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRecallSctInst200ResponseRecallsInner getRecallSctInst200ResponseRecallsInner = (GetRecallSctInst200ResponseRecallsInner) o;
    return Objects.equals(this.recallId, getRecallSctInst200ResponseRecallsInner.recallId) &&
        Objects.equals(this.creationDateTIme, getRecallSctInst200ResponseRecallsInner.creationDateTIme) &&
        Objects.equals(this.statusLabel, getRecallSctInst200ResponseRecallsInner.statusLabel) &&
        Objects.equals(this.cxId, getRecallSctInst200ResponseRecallsInner.cxId) &&
        Objects.equals(this.reasonCode, getRecallSctInst200ResponseRecallsInner.reasonCode) &&
        Objects.equals(this.additionalInformation, getRecallSctInst200ResponseRecallsInner.additionalInformation) &&
        Objects.equals(this.sctrDbtrIBAN, getRecallSctInst200ResponseRecallsInner.sctrDbtrIBAN) &&
        Objects.equals(this.sctrDbtrBIC, getRecallSctInst200ResponseRecallsInner.sctrDbtrBIC) &&
        Objects.equals(this.sctrDbtrName, getRecallSctInst200ResponseRecallsInner.sctrDbtrName) &&
        Objects.equals(this.sctrDbtrAddress, getRecallSctInst200ResponseRecallsInner.sctrDbtrAddress) &&
        Objects.equals(this.sctrDbtrCountry, getRecallSctInst200ResponseRecallsInner.sctrDbtrCountry) &&
        Objects.equals(this.sctrCdtrIBAN, getRecallSctInst200ResponseRecallsInner.sctrCdtrIBAN) &&
        Objects.equals(this.sctrCdtrBIC, getRecallSctInst200ResponseRecallsInner.sctrCdtrBIC) &&
        Objects.equals(this.sctrCdtrName, getRecallSctInst200ResponseRecallsInner.sctrCdtrName) &&
        Objects.equals(this.sctrCdtrAddress, getRecallSctInst200ResponseRecallsInner.sctrCdtrAddress) &&
        Objects.equals(this.sctrCdtrCountry, getRecallSctInst200ResponseRecallsInner.sctrCdtrCountry) &&
        Objects.equals(this.sctrMsgId, getRecallSctInst200ResponseRecallsInner.sctrMsgId) &&
        Objects.equals(this.sctrInstrId, getRecallSctInst200ResponseRecallsInner.sctrInstrId) &&
        Objects.equals(this.sctrTxId, getRecallSctInst200ResponseRecallsInner.sctrTxId) &&
        Objects.equals(this.sctrE2EID, getRecallSctInst200ResponseRecallsInner.sctrE2EID) &&
        Objects.equals(this.sctrAmount, getRecallSctInst200ResponseRecallsInner.sctrAmount) &&
        Objects.equals(this.sctrSettlementDate, getRecallSctInst200ResponseRecallsInner.sctrSettlementDate) &&
        Objects.equals(this.sctrRemittanceInformation, getRecallSctInst200ResponseRecallsInner.sctrRemittanceInformation) &&
        Objects.equals(this.sctrTrzId, getRecallSctInst200ResponseRecallsInner.sctrTrzId) &&
        Objects.equals(this.sctrExternalId, getRecallSctInst200ResponseRecallsInner.sctrExternalId) &&
        Objects.equals(this.clientId, getRecallSctInst200ResponseRecallsInner.clientId) &&
        Objects.equals(this.userId, getRecallSctInst200ResponseRecallsInner.userId) &&
        Objects.equals(this.walletId, getRecallSctInst200ResponseRecallsInner.walletId) &&
        Objects.equals(this.receivedDate, getRecallSctInst200ResponseRecallsInner.receivedDate) &&
        Objects.equals(this.payinRefundId, getRecallSctInst200ResponseRecallsInner.payinRefundId) &&
        Objects.equals(this.responseType, getRecallSctInst200ResponseRecallsInner.responseType) &&
        Objects.equals(this.negativeResponseReasonCode, getRecallSctInst200ResponseRecallsInner.negativeResponseReasonCode) &&
        Objects.equals(this.negativeResponseAdditionalInformation, getRecallSctInst200ResponseRecallsInner.negativeResponseAdditionalInformation) &&
        Objects.equals(this.responseComment, getRecallSctInst200ResponseRecallsInner.responseComment) &&
        Objects.equals(this.automaticResponse, getRecallSctInst200ResponseRecallsInner.automaticResponse) &&
        Objects.equals(this.createdDate, getRecallSctInst200ResponseRecallsInner.createdDate) &&
        Objects.equals(this.updatedDate, getRecallSctInst200ResponseRecallsInner.updatedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recallId, creationDateTIme, statusLabel, cxId, reasonCode, additionalInformation, sctrDbtrIBAN, sctrDbtrBIC, sctrDbtrName, sctrDbtrAddress, sctrDbtrCountry, sctrCdtrIBAN, sctrCdtrBIC, sctrCdtrName, sctrCdtrAddress, sctrCdtrCountry, sctrMsgId, sctrInstrId, sctrTxId, sctrE2EID, sctrAmount, sctrSettlementDate, sctrRemittanceInformation, sctrTrzId, sctrExternalId, clientId, userId, walletId, receivedDate, payinRefundId, responseType, negativeResponseReasonCode, negativeResponseAdditionalInformation, responseComment, automaticResponse, createdDate, updatedDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRecallSctInst200ResponseRecallsInner {\n");
    sb.append("    recallId: ").append(toIndentedString(recallId)).append("\n");
    sb.append("    creationDateTIme: ").append(toIndentedString(creationDateTIme)).append("\n");
    sb.append("    statusLabel: ").append(toIndentedString(statusLabel)).append("\n");
    sb.append("    cxId: ").append(toIndentedString(cxId)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    sctrDbtrIBAN: ").append(toIndentedString(sctrDbtrIBAN)).append("\n");
    sb.append("    sctrDbtrBIC: ").append(toIndentedString(sctrDbtrBIC)).append("\n");
    sb.append("    sctrDbtrName: ").append(toIndentedString(sctrDbtrName)).append("\n");
    sb.append("    sctrDbtrAddress: ").append(toIndentedString(sctrDbtrAddress)).append("\n");
    sb.append("    sctrDbtrCountry: ").append(toIndentedString(sctrDbtrCountry)).append("\n");
    sb.append("    sctrCdtrIBAN: ").append(toIndentedString(sctrCdtrIBAN)).append("\n");
    sb.append("    sctrCdtrBIC: ").append(toIndentedString(sctrCdtrBIC)).append("\n");
    sb.append("    sctrCdtrName: ").append(toIndentedString(sctrCdtrName)).append("\n");
    sb.append("    sctrCdtrAddress: ").append(toIndentedString(sctrCdtrAddress)).append("\n");
    sb.append("    sctrCdtrCountry: ").append(toIndentedString(sctrCdtrCountry)).append("\n");
    sb.append("    sctrMsgId: ").append(toIndentedString(sctrMsgId)).append("\n");
    sb.append("    sctrInstrId: ").append(toIndentedString(sctrInstrId)).append("\n");
    sb.append("    sctrTxId: ").append(toIndentedString(sctrTxId)).append("\n");
    sb.append("    sctrE2EID: ").append(toIndentedString(sctrE2EID)).append("\n");
    sb.append("    sctrAmount: ").append(toIndentedString(sctrAmount)).append("\n");
    sb.append("    sctrSettlementDate: ").append(toIndentedString(sctrSettlementDate)).append("\n");
    sb.append("    sctrRemittanceInformation: ").append(toIndentedString(sctrRemittanceInformation)).append("\n");
    sb.append("    sctrTrzId: ").append(toIndentedString(sctrTrzId)).append("\n");
    sb.append("    sctrExternalId: ").append(toIndentedString(sctrExternalId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    payinRefundId: ").append(toIndentedString(payinRefundId)).append("\n");
    sb.append("    responseType: ").append(toIndentedString(responseType)).append("\n");
    sb.append("    negativeResponseReasonCode: ").append(toIndentedString(negativeResponseReasonCode)).append("\n");
    sb.append("    negativeResponseAdditionalInformation: ").append(toIndentedString(negativeResponseAdditionalInformation)).append("\n");
    sb.append("    responseComment: ").append(toIndentedString(responseComment)).append("\n");
    sb.append("    automaticResponse: ").append(toIndentedString(automaticResponse)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("recallId");
    openapiFields.add("creationDateTIme");
    openapiFields.add("statusLabel");
    openapiFields.add("cxId");
    openapiFields.add("reasonCode");
    openapiFields.add("additionalInformation");
    openapiFields.add("sctrDbtrIBAN");
    openapiFields.add("sctrDbtrBIC");
    openapiFields.add("sctrDbtrName");
    openapiFields.add("sctrDbtrAddress");
    openapiFields.add("sctrDbtrCountry");
    openapiFields.add("sctrCdtrIBAN");
    openapiFields.add("sctrCdtrBIC");
    openapiFields.add("sctrCdtrName");
    openapiFields.add("sctrCdtrAddress");
    openapiFields.add("sctrCdtrCountry");
    openapiFields.add("sctrMsgId");
    openapiFields.add("sctrInstrId");
    openapiFields.add("sctrTxId");
    openapiFields.add("sctrE2EID");
    openapiFields.add("sctrAmount");
    openapiFields.add("sctrSettlementDate");
    openapiFields.add("sctrRemittanceInformation");
    openapiFields.add("sctrTrzId");
    openapiFields.add("sctrExternalId");
    openapiFields.add("clientId");
    openapiFields.add("userId");
    openapiFields.add("walletId");
    openapiFields.add("receivedDate");
    openapiFields.add("payinRefundId");
    openapiFields.add("responseType");
    openapiFields.add("negativeResponseReasonCode");
    openapiFields.add("negativeResponseAdditionalInformation");
    openapiFields.add("responseComment");
    openapiFields.add("automaticResponse");
    openapiFields.add("createdDate");
    openapiFields.add("updatedDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetRecallSctInst200ResponseRecallsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetRecallSctInst200ResponseRecallsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetRecallSctInst200ResponseRecallsInner is not found in the empty JSON string", GetRecallSctInst200ResponseRecallsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetRecallSctInst200ResponseRecallsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetRecallSctInst200ResponseRecallsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("recallId") != null && !jsonObj.get("recallId").isJsonNull()) && !jsonObj.get("recallId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recallId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recallId").toString()));
      }
      if ((jsonObj.get("creationDateTIme") != null && !jsonObj.get("creationDateTIme").isJsonNull()) && !jsonObj.get("creationDateTIme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDateTIme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDateTIme").toString()));
      }
      if ((jsonObj.get("statusLabel") != null && !jsonObj.get("statusLabel").isJsonNull()) && !jsonObj.get("statusLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusLabel").toString()));
      }
      // validate the optional field `statusLabel`
      if (jsonObj.get("statusLabel") != null && !jsonObj.get("statusLabel").isJsonNull()) {
        StatusLabelEnum.validateJsonElement(jsonObj.get("statusLabel"));
      }
      if ((jsonObj.get("cxId") != null && !jsonObj.get("cxId").isJsonNull()) && !jsonObj.get("cxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cxId").toString()));
      }
      if ((jsonObj.get("reasonCode") != null && !jsonObj.get("reasonCode").isJsonNull()) && !jsonObj.get("reasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonCode").toString()));
      }
      // validate the optional field `reasonCode`
      if (jsonObj.get("reasonCode") != null && !jsonObj.get("reasonCode").isJsonNull()) {
        ReasonCodeEnum.validateJsonElement(jsonObj.get("reasonCode"));
      }
      if ((jsonObj.get("additionalInformation") != null && !jsonObj.get("additionalInformation").isJsonNull()) && !jsonObj.get("additionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalInformation").toString()));
      }
      if ((jsonObj.get("sctrDbtrIBAN") != null && !jsonObj.get("sctrDbtrIBAN").isJsonNull()) && !jsonObj.get("sctrDbtrIBAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrDbtrIBAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrDbtrIBAN").toString()));
      }
      if ((jsonObj.get("sctrDbtrBIC") != null && !jsonObj.get("sctrDbtrBIC").isJsonNull()) && !jsonObj.get("sctrDbtrBIC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrDbtrBIC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrDbtrBIC").toString()));
      }
      if ((jsonObj.get("sctrDbtrName") != null && !jsonObj.get("sctrDbtrName").isJsonNull()) && !jsonObj.get("sctrDbtrName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrDbtrName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrDbtrName").toString()));
      }
      if ((jsonObj.get("sctrDbtrAddress") != null && !jsonObj.get("sctrDbtrAddress").isJsonNull()) && !jsonObj.get("sctrDbtrAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrDbtrAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrDbtrAddress").toString()));
      }
      if ((jsonObj.get("sctrDbtrCountry") != null && !jsonObj.get("sctrDbtrCountry").isJsonNull()) && !jsonObj.get("sctrDbtrCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrDbtrCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrDbtrCountry").toString()));
      }
      if ((jsonObj.get("sctrCdtrIBAN") != null && !jsonObj.get("sctrCdtrIBAN").isJsonNull()) && !jsonObj.get("sctrCdtrIBAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrCdtrIBAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrCdtrIBAN").toString()));
      }
      if ((jsonObj.get("sctrCdtrBIC") != null && !jsonObj.get("sctrCdtrBIC").isJsonNull()) && !jsonObj.get("sctrCdtrBIC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrCdtrBIC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrCdtrBIC").toString()));
      }
      if ((jsonObj.get("sctrCdtrName") != null && !jsonObj.get("sctrCdtrName").isJsonNull()) && !jsonObj.get("sctrCdtrName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrCdtrName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrCdtrName").toString()));
      }
      if ((jsonObj.get("sctrCdtrAddress") != null && !jsonObj.get("sctrCdtrAddress").isJsonNull()) && !jsonObj.get("sctrCdtrAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrCdtrAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrCdtrAddress").toString()));
      }
      if ((jsonObj.get("sctrCdtrCountry") != null && !jsonObj.get("sctrCdtrCountry").isJsonNull()) && !jsonObj.get("sctrCdtrCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrCdtrCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrCdtrCountry").toString()));
      }
      if ((jsonObj.get("sctrMsgId") != null && !jsonObj.get("sctrMsgId").isJsonNull()) && !jsonObj.get("sctrMsgId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrMsgId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrMsgId").toString()));
      }
      if ((jsonObj.get("sctrInstrId") != null && !jsonObj.get("sctrInstrId").isJsonNull()) && !jsonObj.get("sctrInstrId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrInstrId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrInstrId").toString()));
      }
      if ((jsonObj.get("sctrTxId") != null && !jsonObj.get("sctrTxId").isJsonNull()) && !jsonObj.get("sctrTxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrTxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrTxId").toString()));
      }
      if ((jsonObj.get("sctrE2EID") != null && !jsonObj.get("sctrE2EID").isJsonNull()) && !jsonObj.get("sctrE2EID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrE2EID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrE2EID").toString()));
      }
      if ((jsonObj.get("sctrAmount") != null && !jsonObj.get("sctrAmount").isJsonNull()) && !jsonObj.get("sctrAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrAmount").toString()));
      }
      if ((jsonObj.get("sctrSettlementDate") != null && !jsonObj.get("sctrSettlementDate").isJsonNull()) && !jsonObj.get("sctrSettlementDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrSettlementDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrSettlementDate").toString()));
      }
      if ((jsonObj.get("sctrRemittanceInformation") != null && !jsonObj.get("sctrRemittanceInformation").isJsonNull()) && !jsonObj.get("sctrRemittanceInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrRemittanceInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrRemittanceInformation").toString()));
      }
      if ((jsonObj.get("sctrTrzId") != null && !jsonObj.get("sctrTrzId").isJsonNull()) && !jsonObj.get("sctrTrzId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrTrzId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrTrzId").toString()));
      }
      if ((jsonObj.get("sctrExternalId") != null && !jsonObj.get("sctrExternalId").isJsonNull()) && !jsonObj.get("sctrExternalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sctrExternalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sctrExternalId").toString()));
      }
      if ((jsonObj.get("receivedDate") != null && !jsonObj.get("receivedDate").isJsonNull()) && !jsonObj.get("receivedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receivedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receivedDate").toString()));
      }
      if ((jsonObj.get("negativeResponseReasonCode") != null && !jsonObj.get("negativeResponseReasonCode").isJsonNull()) && !jsonObj.get("negativeResponseReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `negativeResponseReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("negativeResponseReasonCode").toString()));
      }
      // validate the optional field `negativeResponseReasonCode`
      if (jsonObj.get("negativeResponseReasonCode") != null && !jsonObj.get("negativeResponseReasonCode").isJsonNull()) {
        NegativeResponseReasonCodeEnum.validateJsonElement(jsonObj.get("negativeResponseReasonCode"));
      }
      if ((jsonObj.get("negativeResponseAdditionalInformation") != null && !jsonObj.get("negativeResponseAdditionalInformation").isJsonNull()) && !jsonObj.get("negativeResponseAdditionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `negativeResponseAdditionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("negativeResponseAdditionalInformation").toString()));
      }
      if ((jsonObj.get("responseComment") != null && !jsonObj.get("responseComment").isJsonNull()) && !jsonObj.get("responseComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseComment").toString()));
      }
      if ((jsonObj.get("automaticResponse") != null && !jsonObj.get("automaticResponse").isJsonNull()) && !jsonObj.get("automaticResponse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automaticResponse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automaticResponse").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("updatedDate") != null && !jsonObj.get("updatedDate").isJsonNull()) && !jsonObj.get("updatedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetRecallSctInst200ResponseRecallsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetRecallSctInst200ResponseRecallsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetRecallSctInst200ResponseRecallsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetRecallSctInst200ResponseRecallsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetRecallSctInst200ResponseRecallsInner>() {
           @Override
           public void write(JsonWriter out, GetRecallSctInst200ResponseRecallsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetRecallSctInst200ResponseRecallsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetRecallSctInst200ResponseRecallsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetRecallSctInst200ResponseRecallsInner
   * @throws IOException if the JSON string is invalid with respect to GetRecallSctInst200ResponseRecallsInner
   */
  public static GetRecallSctInst200ResponseRecallsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetRecallSctInst200ResponseRecallsInner.class);
  }

  /**
   * Convert an instance of GetRecallSctInst200ResponseRecallsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

