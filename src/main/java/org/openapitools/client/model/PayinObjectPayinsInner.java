/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PayinObjectPayinsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PayinObjectPayinsInner {
  public static final String SERIALIZED_NAME_PAYIN_ID = "payinId";
  @SerializedName(SERIALIZED_NAME_PAYIN_ID)
  @javax.annotation.Nullable
  private String payinId;

  public static final String SERIALIZED_NAME_PAYIN_TAG = "payinTag";
  @SerializedName(SERIALIZED_NAME_PAYIN_TAG)
  @javax.annotation.Nullable
  private String payinTag;

  /**
   * Gets or Sets payinStatus
   */
  @JsonAdapter(PayinStatusEnum.Adapter.class)
  public enum PayinStatusEnum {
    PENDING("PENDING"),
    
    CANCELED("CANCELED"),
    
    VALIDATED("VALIDATED");

    private String value;

    PayinStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PayinStatusEnum fromValue(String value) {
      for (PayinStatusEnum b : PayinStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PayinStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PayinStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PayinStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PayinStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PayinStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYIN_STATUS = "payinStatus";
  @SerializedName(SERIALIZED_NAME_PAYIN_STATUS)
  @javax.annotation.Nullable
  private PayinStatusEnum payinStatus;

  public static final String SERIALIZED_NAME_CODE_STATUS = "codeStatus";
  @SerializedName(SERIALIZED_NAME_CODE_STATUS)
  @javax.annotation.Nullable
  private Integer codeStatus;

  public static final String SERIALIZED_NAME_INFORMATION_STATUS = "informationStatus";
  @SerializedName(SERIALIZED_NAME_INFORMATION_STATUS)
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  @javax.annotation.Nullable
  private Integer cartId;

  public static final String SERIALIZED_NAME_WALLET_EVENT_NAME = "walletEventName";
  @SerializedName(SERIALIZED_NAME_WALLET_EVENT_NAME)
  @javax.annotation.Nullable
  private String walletEventName;

  public static final String SERIALIZED_NAME_WALLET_ALIAS = "walletAlias";
  @SerializedName(SERIALIZED_NAME_WALLET_ALIAS)
  @javax.annotation.Nullable
  private String walletAlias;

  public static final String SERIALIZED_NAME_USER_FIRSTNAME = "userFirstname";
  @SerializedName(SERIALIZED_NAME_USER_FIRSTNAME)
  @javax.annotation.Nullable
  private String userFirstname;

  public static final String SERIALIZED_NAME_USER_LASTNAME = "userLastname";
  @SerializedName(SERIALIZED_NAME_USER_LASTNAME)
  @javax.annotation.Nullable
  private String userLastname;

  public static final String SERIALIZED_NAME_MESSAGE_TO_USER = "messageToUser";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TO_USER)
  @javax.annotation.Nullable
  private String messageToUser;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_ID = "paymentMethodId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_ID)
  @javax.annotation.Nullable
  private Integer paymentMethodId;

  public static final String SERIALIZED_NAME_SUBTOTAL_ITEMS = "subtotalItems";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_ITEMS)
  @javax.annotation.Nullable
  private String subtotalItems;

  public static final String SERIALIZED_NAME_SUBTOTAL_SERVICES = "subtotalServices";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_SERVICES)
  @javax.annotation.Nullable
  private String subtotalServices;

  public static final String SERIALIZED_NAME_SUBTOTAL_TAX = "subtotalTax";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_TAX)
  @javax.annotation.Nullable
  private String subtotalTax;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  @javax.annotation.Nullable
  private String amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public static final String SERIALIZED_NAME_DISTRIBUTOR_FEE = "distributorFee";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTOR_FEE)
  @javax.annotation.Nullable
  private String distributorFee;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  @javax.annotation.Nullable
  private String createdDate;

  public static final String SERIALIZED_NAME_CREATED_IP = "createdIp";
  @SerializedName(SERIALIZED_NAME_CREATED_IP)
  @javax.annotation.Nullable
  private String createdIp;

  public static final String SERIALIZED_NAME_PAYMENT_HTML = "paymentHtml";
  @SerializedName(SERIALIZED_NAME_PAYMENT_HTML)
  @javax.annotation.Nullable
  private String paymentHtml;

  public static final String SERIALIZED_NAME_PAYMENT_LANGUAGE = "paymentLanguage";
  @SerializedName(SERIALIZED_NAME_PAYMENT_LANGUAGE)
  @javax.annotation.Nullable
  private String paymentLanguage;

  public static final String SERIALIZED_NAME_PAYMENT_POST_URL = "paymentPostUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_POST_URL)
  @javax.annotation.Nullable
  private String paymentPostUrl;

  public static final String SERIALIZED_NAME_PAYMENT_POST_DATA_URL = "paymentPostDataUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_POST_DATA_URL)
  @javax.annotation.Nullable
  private String paymentPostDataUrl;

  public static final String SERIALIZED_NAME_PAYMENT_ACCEPTED_URL = "paymentAcceptedUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCEPTED_URL)
  @javax.annotation.Nullable
  private String paymentAcceptedUrl;

  public static final String SERIALIZED_NAME_PAYMENT_WAITING_URL = "paymentWaitingUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_WAITING_URL)
  @javax.annotation.Nullable
  private String paymentWaitingUrl;

  public static final String SERIALIZED_NAME_PAYMENT_REFUSED_URL = "paymentRefusedUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REFUSED_URL)
  @javax.annotation.Nullable
  private String paymentRefusedUrl;

  public static final String SERIALIZED_NAME_PAYMENT_CANCELED_URL = "paymentCanceledUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CANCELED_URL)
  @javax.annotation.Nullable
  private String paymentCanceledUrl;

  public static final String SERIALIZED_NAME_PAYMENT_EXCEPTION_URL = "paymentExceptionUrl";
  @SerializedName(SERIALIZED_NAME_PAYMENT_EXCEPTION_URL)
  @javax.annotation.Nullable
  private String paymentExceptionUrl;

  public static final String SERIALIZED_NAME_IBAN_FULLNAME = "ibanFullname";
  @SerializedName(SERIALIZED_NAME_IBAN_FULLNAME)
  @javax.annotation.Nullable
  private String ibanFullname;

  public static final String SERIALIZED_NAME_DBTR_I_B_A_N = "DbtrIBAN";
  @SerializedName(SERIALIZED_NAME_DBTR_I_B_A_N)
  @javax.annotation.Nullable
  private String dbtrIBAN;

  public static final String SERIALIZED_NAME_IBAN_ID = "ibanId";
  @SerializedName(SERIALIZED_NAME_IBAN_ID)
  @javax.annotation.Nullable
  private String ibanId;

  public static final String SERIALIZED_NAME_IBAN_BIC = "ibanBic";
  @SerializedName(SERIALIZED_NAME_IBAN_BIC)
  @javax.annotation.Nullable
  private String ibanBic;

  public static final String SERIALIZED_NAME_IBAN_TX_END_TO_END_ID = "ibanTxEndToEndId";
  @SerializedName(SERIALIZED_NAME_IBAN_TX_END_TO_END_ID)
  @javax.annotation.Nullable
  private String ibanTxEndToEndId;

  public static final String SERIALIZED_NAME_IBAN_TX_ID = "ibanTxId";
  @SerializedName(SERIALIZED_NAME_IBAN_TX_ID)
  @javax.annotation.Nullable
  private String ibanTxId;

  public static final String SERIALIZED_NAME_REFUND_AMOUNT = "refundAmount";
  @SerializedName(SERIALIZED_NAME_REFUND_AMOUNT)
  @javax.annotation.Nullable
  private String refundAmount;

  public static final String SERIALIZED_NAME_TOTAL_ROWS = "totalRows";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROWS)
  @javax.annotation.Nullable
  private Integer totalRows;

  public static final String SERIALIZED_NAME_FORWARD_URL = "forwardUrl";
  @SerializedName(SERIALIZED_NAME_FORWARD_URL)
  @javax.annotation.Nullable
  private String forwardUrl;

  public static final String SERIALIZED_NAME_PAYIN_DATE = "payinDate";
  @SerializedName(SERIALIZED_NAME_PAYIN_DATE)
  @javax.annotation.Nullable
  private String payinDate;

  public static final String SERIALIZED_NAME_MANDATE_ID = "mandateId";
  @SerializedName(SERIALIZED_NAME_MANDATE_ID)
  @javax.annotation.Nullable
  private Integer mandateId;

  public static final String SERIALIZED_NAME_CREDITOR_NAME = "creditorName";
  @SerializedName(SERIALIZED_NAME_CREDITOR_NAME)
  @javax.annotation.Nullable
  private String creditorName;

  public static final String SERIALIZED_NAME_CREDITOR_ADDRESS_LINE = "creditorAddressLine";
  @SerializedName(SERIALIZED_NAME_CREDITOR_ADDRESS_LINE)
  @javax.annotation.Nullable
  private String creditorAddressLine;

  public static final String SERIALIZED_NAME_CREDITOR_COUNTRY = "creditorCountry";
  @SerializedName(SERIALIZED_NAME_CREDITOR_COUNTRY)
  @javax.annotation.Nullable
  private String creditorCountry;

  public static final String SERIALIZED_NAME_CREDITOR_IBAN = "creditorIban";
  @SerializedName(SERIALIZED_NAME_CREDITOR_IBAN)
  @javax.annotation.Nullable
  private String creditorIban;

  public static final String SERIALIZED_NAME_CREDITOR_B_I_C = "creditorBIC";
  @SerializedName(SERIALIZED_NAME_CREDITOR_B_I_C)
  @javax.annotation.Nullable
  private String creditorBIC;

  public static final String SERIALIZED_NAME_VIRTUAL_IBAN_ID = "virtualIbanId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IBAN_ID)
  @javax.annotation.Nullable
  private Integer virtualIbanId;

  public static final String SERIALIZED_NAME_VIRTUAL_IBAN_REFERENCE = "virtualIbanReference";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IBAN_REFERENCE)
  @javax.annotation.Nullable
  private String virtualIbanReference;

  public PayinObjectPayinsInner() {
  }

  public PayinObjectPayinsInner payinId(@javax.annotation.Nullable String payinId) {
    this.payinId = payinId;
    return this;
  }

  /**
   * The unique identifier of the payin. In the specific case of the SCTR Inst payin, this value is a uuid. 
   * @return payinId
   */
  @javax.annotation.Nullable
  public String getPayinId() {
    return payinId;
  }

  public void setPayinId(@javax.annotation.Nullable String payinId) {
    this.payinId = payinId;
  }


  public PayinObjectPayinsInner payinTag(@javax.annotation.Nullable String payinTag) {
    this.payinTag = payinTag;
    return this;
  }

  /**
   * Get payinTag
   * @return payinTag
   */
  @javax.annotation.Nullable
  public String getPayinTag() {
    return payinTag;
  }

  public void setPayinTag(@javax.annotation.Nullable String payinTag) {
    this.payinTag = payinTag;
  }


  public PayinObjectPayinsInner payinStatus(@javax.annotation.Nullable PayinStatusEnum payinStatus) {
    this.payinStatus = payinStatus;
    return this;
  }

  /**
   * Get payinStatus
   * @return payinStatus
   */
  @javax.annotation.Nullable
  public PayinStatusEnum getPayinStatus() {
    return payinStatus;
  }

  public void setPayinStatus(@javax.annotation.Nullable PayinStatusEnum payinStatus) {
    this.payinStatus = payinStatus;
  }


  public PayinObjectPayinsInner codeStatus(@javax.annotation.Nullable Integer codeStatus) {
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * Get codeStatus
   * @return codeStatus
   */
  @javax.annotation.Nullable
  public Integer getCodeStatus() {
    return codeStatus;
  }

  public void setCodeStatus(@javax.annotation.Nullable Integer codeStatus) {
    this.codeStatus = codeStatus;
  }


  public PayinObjectPayinsInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  public String getInformationStatus() {
    return informationStatus;
  }

  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }


  public PayinObjectPayinsInner walletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public Integer getWalletId() {
    return walletId;
  }

  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }


  public PayinObjectPayinsInner userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public PayinObjectPayinsInner cartId(@javax.annotation.Nullable Integer cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public Integer getCartId() {
    return cartId;
  }

  public void setCartId(@javax.annotation.Nullable Integer cartId) {
    this.cartId = cartId;
  }


  public PayinObjectPayinsInner walletEventName(@javax.annotation.Nullable String walletEventName) {
    this.walletEventName = walletEventName;
    return this;
  }

  /**
   * Get walletEventName
   * @return walletEventName
   */
  @javax.annotation.Nullable
  public String getWalletEventName() {
    return walletEventName;
  }

  public void setWalletEventName(@javax.annotation.Nullable String walletEventName) {
    this.walletEventName = walletEventName;
  }


  public PayinObjectPayinsInner walletAlias(@javax.annotation.Nullable String walletAlias) {
    this.walletAlias = walletAlias;
    return this;
  }

  /**
   * Get walletAlias
   * @return walletAlias
   */
  @javax.annotation.Nullable
  public String getWalletAlias() {
    return walletAlias;
  }

  public void setWalletAlias(@javax.annotation.Nullable String walletAlias) {
    this.walletAlias = walletAlias;
  }


  public PayinObjectPayinsInner userFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
    return this;
  }

  /**
   * Get userFirstname
   * @return userFirstname
   */
  @javax.annotation.Nullable
  public String getUserFirstname() {
    return userFirstname;
  }

  public void setUserFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
  }


  public PayinObjectPayinsInner userLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
    return this;
  }

  /**
   * Get userLastname
   * @return userLastname
   */
  @javax.annotation.Nullable
  public String getUserLastname() {
    return userLastname;
  }

  public void setUserLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
  }


  public PayinObjectPayinsInner messageToUser(@javax.annotation.Nullable String messageToUser) {
    this.messageToUser = messageToUser;
    return this;
  }

  /**
   * Get messageToUser
   * @return messageToUser
   */
  @javax.annotation.Nullable
  public String getMessageToUser() {
    return messageToUser;
  }

  public void setMessageToUser(@javax.annotation.Nullable String messageToUser) {
    this.messageToUser = messageToUser;
  }


  public PayinObjectPayinsInner paymentMethodId(@javax.annotation.Nullable Integer paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * Get paymentMethodId
   * @return paymentMethodId
   */
  @javax.annotation.Nullable
  public Integer getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(@javax.annotation.Nullable Integer paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public PayinObjectPayinsInner subtotalItems(@javax.annotation.Nullable String subtotalItems) {
    this.subtotalItems = subtotalItems;
    return this;
  }

  /**
   * Get subtotalItems
   * @return subtotalItems
   */
  @javax.annotation.Nullable
  public String getSubtotalItems() {
    return subtotalItems;
  }

  public void setSubtotalItems(@javax.annotation.Nullable String subtotalItems) {
    this.subtotalItems = subtotalItems;
  }


  public PayinObjectPayinsInner subtotalServices(@javax.annotation.Nullable String subtotalServices) {
    this.subtotalServices = subtotalServices;
    return this;
  }

  /**
   * Get subtotalServices
   * @return subtotalServices
   */
  @javax.annotation.Nullable
  public String getSubtotalServices() {
    return subtotalServices;
  }

  public void setSubtotalServices(@javax.annotation.Nullable String subtotalServices) {
    this.subtotalServices = subtotalServices;
  }


  public PayinObjectPayinsInner subtotalTax(@javax.annotation.Nullable String subtotalTax) {
    this.subtotalTax = subtotalTax;
    return this;
  }

  /**
   * Get subtotalTax
   * @return subtotalTax
   */
  @javax.annotation.Nullable
  public String getSubtotalTax() {
    return subtotalTax;
  }

  public void setSubtotalTax(@javax.annotation.Nullable String subtotalTax) {
    this.subtotalTax = subtotalTax;
  }


  public PayinObjectPayinsInner amount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public String getAmount() {
    return amount;
  }

  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
  }


  public PayinObjectPayinsInner currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }


  public PayinObjectPayinsInner distributorFee(@javax.annotation.Nullable String distributorFee) {
    this.distributorFee = distributorFee;
    return this;
  }

  /**
   * Get distributorFee
   * @return distributorFee
   */
  @javax.annotation.Nullable
  public String getDistributorFee() {
    return distributorFee;
  }

  public void setDistributorFee(@javax.annotation.Nullable String distributorFee) {
    this.distributorFee = distributorFee;
  }


  public PayinObjectPayinsInner createdDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD HH:MM:SS
   * @return createdDate
   */
  @javax.annotation.Nullable
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(@javax.annotation.Nullable String createdDate) {
    this.createdDate = createdDate;
  }


  public PayinObjectPayinsInner createdIp(@javax.annotation.Nullable String createdIp) {
    this.createdIp = createdIp;
    return this;
  }

  /**
   * Get createdIp
   * @return createdIp
   */
  @javax.annotation.Nullable
  public String getCreatedIp() {
    return createdIp;
  }

  public void setCreatedIp(@javax.annotation.Nullable String createdIp) {
    this.createdIp = createdIp;
  }


  public PayinObjectPayinsInner paymentHtml(@javax.annotation.Nullable String paymentHtml) {
    this.paymentHtml = paymentHtml;
    return this;
  }

  /**
   * Get paymentHtml
   * @return paymentHtml
   */
  @javax.annotation.Nullable
  public String getPaymentHtml() {
    return paymentHtml;
  }

  public void setPaymentHtml(@javax.annotation.Nullable String paymentHtml) {
    this.paymentHtml = paymentHtml;
  }


  public PayinObjectPayinsInner paymentLanguage(@javax.annotation.Nullable String paymentLanguage) {
    this.paymentLanguage = paymentLanguage;
    return this;
  }

  /**
   * Get paymentLanguage
   * @return paymentLanguage
   */
  @javax.annotation.Nullable
  public String getPaymentLanguage() {
    return paymentLanguage;
  }

  public void setPaymentLanguage(@javax.annotation.Nullable String paymentLanguage) {
    this.paymentLanguage = paymentLanguage;
  }


  public PayinObjectPayinsInner paymentPostUrl(@javax.annotation.Nullable String paymentPostUrl) {
    this.paymentPostUrl = paymentPostUrl;
    return this;
  }

  /**
   * Get paymentPostUrl
   * @return paymentPostUrl
   */
  @javax.annotation.Nullable
  public String getPaymentPostUrl() {
    return paymentPostUrl;
  }

  public void setPaymentPostUrl(@javax.annotation.Nullable String paymentPostUrl) {
    this.paymentPostUrl = paymentPostUrl;
  }


  public PayinObjectPayinsInner paymentPostDataUrl(@javax.annotation.Nullable String paymentPostDataUrl) {
    this.paymentPostDataUrl = paymentPostDataUrl;
    return this;
  }

  /**
   * Get paymentPostDataUrl
   * @return paymentPostDataUrl
   */
  @javax.annotation.Nullable
  public String getPaymentPostDataUrl() {
    return paymentPostDataUrl;
  }

  public void setPaymentPostDataUrl(@javax.annotation.Nullable String paymentPostDataUrl) {
    this.paymentPostDataUrl = paymentPostDataUrl;
  }


  public PayinObjectPayinsInner paymentAcceptedUrl(@javax.annotation.Nullable String paymentAcceptedUrl) {
    this.paymentAcceptedUrl = paymentAcceptedUrl;
    return this;
  }

  /**
   * Get paymentAcceptedUrl
   * @return paymentAcceptedUrl
   */
  @javax.annotation.Nullable
  public String getPaymentAcceptedUrl() {
    return paymentAcceptedUrl;
  }

  public void setPaymentAcceptedUrl(@javax.annotation.Nullable String paymentAcceptedUrl) {
    this.paymentAcceptedUrl = paymentAcceptedUrl;
  }


  public PayinObjectPayinsInner paymentWaitingUrl(@javax.annotation.Nullable String paymentWaitingUrl) {
    this.paymentWaitingUrl = paymentWaitingUrl;
    return this;
  }

  /**
   * Get paymentWaitingUrl
   * @return paymentWaitingUrl
   */
  @javax.annotation.Nullable
  public String getPaymentWaitingUrl() {
    return paymentWaitingUrl;
  }

  public void setPaymentWaitingUrl(@javax.annotation.Nullable String paymentWaitingUrl) {
    this.paymentWaitingUrl = paymentWaitingUrl;
  }


  public PayinObjectPayinsInner paymentRefusedUrl(@javax.annotation.Nullable String paymentRefusedUrl) {
    this.paymentRefusedUrl = paymentRefusedUrl;
    return this;
  }

  /**
   * Get paymentRefusedUrl
   * @return paymentRefusedUrl
   */
  @javax.annotation.Nullable
  public String getPaymentRefusedUrl() {
    return paymentRefusedUrl;
  }

  public void setPaymentRefusedUrl(@javax.annotation.Nullable String paymentRefusedUrl) {
    this.paymentRefusedUrl = paymentRefusedUrl;
  }


  public PayinObjectPayinsInner paymentCanceledUrl(@javax.annotation.Nullable String paymentCanceledUrl) {
    this.paymentCanceledUrl = paymentCanceledUrl;
    return this;
  }

  /**
   * Get paymentCanceledUrl
   * @return paymentCanceledUrl
   */
  @javax.annotation.Nullable
  public String getPaymentCanceledUrl() {
    return paymentCanceledUrl;
  }

  public void setPaymentCanceledUrl(@javax.annotation.Nullable String paymentCanceledUrl) {
    this.paymentCanceledUrl = paymentCanceledUrl;
  }


  public PayinObjectPayinsInner paymentExceptionUrl(@javax.annotation.Nullable String paymentExceptionUrl) {
    this.paymentExceptionUrl = paymentExceptionUrl;
    return this;
  }

  /**
   * Get paymentExceptionUrl
   * @return paymentExceptionUrl
   */
  @javax.annotation.Nullable
  public String getPaymentExceptionUrl() {
    return paymentExceptionUrl;
  }

  public void setPaymentExceptionUrl(@javax.annotation.Nullable String paymentExceptionUrl) {
    this.paymentExceptionUrl = paymentExceptionUrl;
  }


  public PayinObjectPayinsInner ibanFullname(@javax.annotation.Nullable String ibanFullname) {
    this.ibanFullname = ibanFullname;
    return this;
  }

  /**
   * Get ibanFullname
   * @return ibanFullname
   */
  @javax.annotation.Nullable
  public String getIbanFullname() {
    return ibanFullname;
  }

  public void setIbanFullname(@javax.annotation.Nullable String ibanFullname) {
    this.ibanFullname = ibanFullname;
  }


  public PayinObjectPayinsInner dbtrIBAN(@javax.annotation.Nullable String dbtrIBAN) {
    this.dbtrIBAN = dbtrIBAN;
    return this;
  }

  /**
   * Get dbtrIBAN
   * @return dbtrIBAN
   */
  @javax.annotation.Nullable
  public String getDbtrIBAN() {
    return dbtrIBAN;
  }

  public void setDbtrIBAN(@javax.annotation.Nullable String dbtrIBAN) {
    this.dbtrIBAN = dbtrIBAN;
  }


  public PayinObjectPayinsInner ibanId(@javax.annotation.Nullable String ibanId) {
    this.ibanId = ibanId;
    return this;
  }

  /**
   * Get ibanId
   * @return ibanId
   */
  @javax.annotation.Nullable
  public String getIbanId() {
    return ibanId;
  }

  public void setIbanId(@javax.annotation.Nullable String ibanId) {
    this.ibanId = ibanId;
  }


  public PayinObjectPayinsInner ibanBic(@javax.annotation.Nullable String ibanBic) {
    this.ibanBic = ibanBic;
    return this;
  }

  /**
   * Get ibanBic
   * @return ibanBic
   */
  @javax.annotation.Nullable
  public String getIbanBic() {
    return ibanBic;
  }

  public void setIbanBic(@javax.annotation.Nullable String ibanBic) {
    this.ibanBic = ibanBic;
  }


  public PayinObjectPayinsInner ibanTxEndToEndId(@javax.annotation.Nullable String ibanTxEndToEndId) {
    this.ibanTxEndToEndId = ibanTxEndToEndId;
    return this;
  }

  /**
   * Get ibanTxEndToEndId
   * @return ibanTxEndToEndId
   */
  @javax.annotation.Nullable
  public String getIbanTxEndToEndId() {
    return ibanTxEndToEndId;
  }

  public void setIbanTxEndToEndId(@javax.annotation.Nullable String ibanTxEndToEndId) {
    this.ibanTxEndToEndId = ibanTxEndToEndId;
  }


  public PayinObjectPayinsInner ibanTxId(@javax.annotation.Nullable String ibanTxId) {
    this.ibanTxId = ibanTxId;
    return this;
  }

  /**
   * Get ibanTxId
   * @return ibanTxId
   */
  @javax.annotation.Nullable
  public String getIbanTxId() {
    return ibanTxId;
  }

  public void setIbanTxId(@javax.annotation.Nullable String ibanTxId) {
    this.ibanTxId = ibanTxId;
  }


  public PayinObjectPayinsInner refundAmount(@javax.annotation.Nullable String refundAmount) {
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Get refundAmount
   * @return refundAmount
   */
  @javax.annotation.Nullable
  public String getRefundAmount() {
    return refundAmount;
  }

  public void setRefundAmount(@javax.annotation.Nullable String refundAmount) {
    this.refundAmount = refundAmount;
  }


  public PayinObjectPayinsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

  /**
   * Get totalRows
   * @return totalRows
   */
  @javax.annotation.Nullable
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }


  public PayinObjectPayinsInner forwardUrl(@javax.annotation.Nullable String forwardUrl) {
    this.forwardUrl = forwardUrl;
    return this;
  }

  /**
   * Get forwardUrl
   * @return forwardUrl
   */
  @javax.annotation.Nullable
  public String getForwardUrl() {
    return forwardUrl;
  }

  public void setForwardUrl(@javax.annotation.Nullable String forwardUrl) {
    this.forwardUrl = forwardUrl;
  }


  public PayinObjectPayinsInner payinDate(@javax.annotation.Nullable String payinDate) {
    this.payinDate = payinDate;
    return this;
  }

  /**
   * Date YYYY-MM-DD
   * @return payinDate
   */
  @javax.annotation.Nullable
  public String getPayinDate() {
    return payinDate;
  }

  public void setPayinDate(@javax.annotation.Nullable String payinDate) {
    this.payinDate = payinDate;
  }


  public PayinObjectPayinsInner mandateId(@javax.annotation.Nullable Integer mandateId) {
    this.mandateId = mandateId;
    return this;
  }

  /**
   * Get mandateId
   * @return mandateId
   */
  @javax.annotation.Nullable
  public Integer getMandateId() {
    return mandateId;
  }

  public void setMandateId(@javax.annotation.Nullable Integer mandateId) {
    this.mandateId = mandateId;
  }


  public PayinObjectPayinsInner creditorName(@javax.annotation.Nullable String creditorName) {
    this.creditorName = creditorName;
    return this;
  }

  /**
   * Get creditorName
   * @return creditorName
   */
  @javax.annotation.Nullable
  public String getCreditorName() {
    return creditorName;
  }

  public void setCreditorName(@javax.annotation.Nullable String creditorName) {
    this.creditorName = creditorName;
  }


  public PayinObjectPayinsInner creditorAddressLine(@javax.annotation.Nullable String creditorAddressLine) {
    this.creditorAddressLine = creditorAddressLine;
    return this;
  }

  /**
   * Get creditorAddressLine
   * @return creditorAddressLine
   */
  @javax.annotation.Nullable
  public String getCreditorAddressLine() {
    return creditorAddressLine;
  }

  public void setCreditorAddressLine(@javax.annotation.Nullable String creditorAddressLine) {
    this.creditorAddressLine = creditorAddressLine;
  }


  public PayinObjectPayinsInner creditorCountry(@javax.annotation.Nullable String creditorCountry) {
    this.creditorCountry = creditorCountry;
    return this;
  }

  /**
   * Get creditorCountry
   * @return creditorCountry
   */
  @javax.annotation.Nullable
  public String getCreditorCountry() {
    return creditorCountry;
  }

  public void setCreditorCountry(@javax.annotation.Nullable String creditorCountry) {
    this.creditorCountry = creditorCountry;
  }


  public PayinObjectPayinsInner creditorIban(@javax.annotation.Nullable String creditorIban) {
    this.creditorIban = creditorIban;
    return this;
  }

  /**
   * Get creditorIban
   * @return creditorIban
   */
  @javax.annotation.Nullable
  public String getCreditorIban() {
    return creditorIban;
  }

  public void setCreditorIban(@javax.annotation.Nullable String creditorIban) {
    this.creditorIban = creditorIban;
  }


  public PayinObjectPayinsInner creditorBIC(@javax.annotation.Nullable String creditorBIC) {
    this.creditorBIC = creditorBIC;
    return this;
  }

  /**
   * Get creditorBIC
   * @return creditorBIC
   */
  @javax.annotation.Nullable
  public String getCreditorBIC() {
    return creditorBIC;
  }

  public void setCreditorBIC(@javax.annotation.Nullable String creditorBIC) {
    this.creditorBIC = creditorBIC;
  }


  public PayinObjectPayinsInner virtualIbanId(@javax.annotation.Nullable Integer virtualIbanId) {
    this.virtualIbanId = virtualIbanId;
    return this;
  }

  /**
   * Get virtualIbanId
   * @return virtualIbanId
   */
  @javax.annotation.Nullable
  public Integer getVirtualIbanId() {
    return virtualIbanId;
  }

  public void setVirtualIbanId(@javax.annotation.Nullable Integer virtualIbanId) {
    this.virtualIbanId = virtualIbanId;
  }


  public PayinObjectPayinsInner virtualIbanReference(@javax.annotation.Nullable String virtualIbanReference) {
    this.virtualIbanReference = virtualIbanReference;
    return this;
  }

  /**
   * Get virtualIbanReference
   * @return virtualIbanReference
   */
  @javax.annotation.Nullable
  public String getVirtualIbanReference() {
    return virtualIbanReference;
  }

  public void setVirtualIbanReference(@javax.annotation.Nullable String virtualIbanReference) {
    this.virtualIbanReference = virtualIbanReference;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayinObjectPayinsInner payinObjectPayinsInner = (PayinObjectPayinsInner) o;
    return Objects.equals(this.payinId, payinObjectPayinsInner.payinId) &&
        Objects.equals(this.payinTag, payinObjectPayinsInner.payinTag) &&
        Objects.equals(this.payinStatus, payinObjectPayinsInner.payinStatus) &&
        Objects.equals(this.codeStatus, payinObjectPayinsInner.codeStatus) &&
        Objects.equals(this.informationStatus, payinObjectPayinsInner.informationStatus) &&
        Objects.equals(this.walletId, payinObjectPayinsInner.walletId) &&
        Objects.equals(this.userId, payinObjectPayinsInner.userId) &&
        Objects.equals(this.cartId, payinObjectPayinsInner.cartId) &&
        Objects.equals(this.walletEventName, payinObjectPayinsInner.walletEventName) &&
        Objects.equals(this.walletAlias, payinObjectPayinsInner.walletAlias) &&
        Objects.equals(this.userFirstname, payinObjectPayinsInner.userFirstname) &&
        Objects.equals(this.userLastname, payinObjectPayinsInner.userLastname) &&
        Objects.equals(this.messageToUser, payinObjectPayinsInner.messageToUser) &&
        Objects.equals(this.paymentMethodId, payinObjectPayinsInner.paymentMethodId) &&
        Objects.equals(this.subtotalItems, payinObjectPayinsInner.subtotalItems) &&
        Objects.equals(this.subtotalServices, payinObjectPayinsInner.subtotalServices) &&
        Objects.equals(this.subtotalTax, payinObjectPayinsInner.subtotalTax) &&
        Objects.equals(this.amount, payinObjectPayinsInner.amount) &&
        Objects.equals(this.currency, payinObjectPayinsInner.currency) &&
        Objects.equals(this.distributorFee, payinObjectPayinsInner.distributorFee) &&
        Objects.equals(this.createdDate, payinObjectPayinsInner.createdDate) &&
        Objects.equals(this.createdIp, payinObjectPayinsInner.createdIp) &&
        Objects.equals(this.paymentHtml, payinObjectPayinsInner.paymentHtml) &&
        Objects.equals(this.paymentLanguage, payinObjectPayinsInner.paymentLanguage) &&
        Objects.equals(this.paymentPostUrl, payinObjectPayinsInner.paymentPostUrl) &&
        Objects.equals(this.paymentPostDataUrl, payinObjectPayinsInner.paymentPostDataUrl) &&
        Objects.equals(this.paymentAcceptedUrl, payinObjectPayinsInner.paymentAcceptedUrl) &&
        Objects.equals(this.paymentWaitingUrl, payinObjectPayinsInner.paymentWaitingUrl) &&
        Objects.equals(this.paymentRefusedUrl, payinObjectPayinsInner.paymentRefusedUrl) &&
        Objects.equals(this.paymentCanceledUrl, payinObjectPayinsInner.paymentCanceledUrl) &&
        Objects.equals(this.paymentExceptionUrl, payinObjectPayinsInner.paymentExceptionUrl) &&
        Objects.equals(this.ibanFullname, payinObjectPayinsInner.ibanFullname) &&
        Objects.equals(this.dbtrIBAN, payinObjectPayinsInner.dbtrIBAN) &&
        Objects.equals(this.ibanId, payinObjectPayinsInner.ibanId) &&
        Objects.equals(this.ibanBic, payinObjectPayinsInner.ibanBic) &&
        Objects.equals(this.ibanTxEndToEndId, payinObjectPayinsInner.ibanTxEndToEndId) &&
        Objects.equals(this.ibanTxId, payinObjectPayinsInner.ibanTxId) &&
        Objects.equals(this.refundAmount, payinObjectPayinsInner.refundAmount) &&
        Objects.equals(this.totalRows, payinObjectPayinsInner.totalRows) &&
        Objects.equals(this.forwardUrl, payinObjectPayinsInner.forwardUrl) &&
        Objects.equals(this.payinDate, payinObjectPayinsInner.payinDate) &&
        Objects.equals(this.mandateId, payinObjectPayinsInner.mandateId) &&
        Objects.equals(this.creditorName, payinObjectPayinsInner.creditorName) &&
        Objects.equals(this.creditorAddressLine, payinObjectPayinsInner.creditorAddressLine) &&
        Objects.equals(this.creditorCountry, payinObjectPayinsInner.creditorCountry) &&
        Objects.equals(this.creditorIban, payinObjectPayinsInner.creditorIban) &&
        Objects.equals(this.creditorBIC, payinObjectPayinsInner.creditorBIC) &&
        Objects.equals(this.virtualIbanId, payinObjectPayinsInner.virtualIbanId) &&
        Objects.equals(this.virtualIbanReference, payinObjectPayinsInner.virtualIbanReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payinId, payinTag, payinStatus, codeStatus, informationStatus, walletId, userId, cartId, walletEventName, walletAlias, userFirstname, userLastname, messageToUser, paymentMethodId, subtotalItems, subtotalServices, subtotalTax, amount, currency, distributorFee, createdDate, createdIp, paymentHtml, paymentLanguage, paymentPostUrl, paymentPostDataUrl, paymentAcceptedUrl, paymentWaitingUrl, paymentRefusedUrl, paymentCanceledUrl, paymentExceptionUrl, ibanFullname, dbtrIBAN, ibanId, ibanBic, ibanTxEndToEndId, ibanTxId, refundAmount, totalRows, forwardUrl, payinDate, mandateId, creditorName, creditorAddressLine, creditorCountry, creditorIban, creditorBIC, virtualIbanId, virtualIbanReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayinObjectPayinsInner {\n");
    sb.append("    payinId: ").append(toIndentedString(payinId)).append("\n");
    sb.append("    payinTag: ").append(toIndentedString(payinTag)).append("\n");
    sb.append("    payinStatus: ").append(toIndentedString(payinStatus)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    walletEventName: ").append(toIndentedString(walletEventName)).append("\n");
    sb.append("    walletAlias: ").append(toIndentedString(walletAlias)).append("\n");
    sb.append("    userFirstname: ").append(toIndentedString(userFirstname)).append("\n");
    sb.append("    userLastname: ").append(toIndentedString(userLastname)).append("\n");
    sb.append("    messageToUser: ").append(toIndentedString(messageToUser)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    subtotalItems: ").append(toIndentedString(subtotalItems)).append("\n");
    sb.append("    subtotalServices: ").append(toIndentedString(subtotalServices)).append("\n");
    sb.append("    subtotalTax: ").append(toIndentedString(subtotalTax)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    distributorFee: ").append(toIndentedString(distributorFee)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdIp: ").append(toIndentedString(createdIp)).append("\n");
    sb.append("    paymentHtml: ").append(toIndentedString(paymentHtml)).append("\n");
    sb.append("    paymentLanguage: ").append(toIndentedString(paymentLanguage)).append("\n");
    sb.append("    paymentPostUrl: ").append(toIndentedString(paymentPostUrl)).append("\n");
    sb.append("    paymentPostDataUrl: ").append(toIndentedString(paymentPostDataUrl)).append("\n");
    sb.append("    paymentAcceptedUrl: ").append(toIndentedString(paymentAcceptedUrl)).append("\n");
    sb.append("    paymentWaitingUrl: ").append(toIndentedString(paymentWaitingUrl)).append("\n");
    sb.append("    paymentRefusedUrl: ").append(toIndentedString(paymentRefusedUrl)).append("\n");
    sb.append("    paymentCanceledUrl: ").append(toIndentedString(paymentCanceledUrl)).append("\n");
    sb.append("    paymentExceptionUrl: ").append(toIndentedString(paymentExceptionUrl)).append("\n");
    sb.append("    ibanFullname: ").append(toIndentedString(ibanFullname)).append("\n");
    sb.append("    dbtrIBAN: ").append(toIndentedString(dbtrIBAN)).append("\n");
    sb.append("    ibanId: ").append(toIndentedString(ibanId)).append("\n");
    sb.append("    ibanBic: ").append(toIndentedString(ibanBic)).append("\n");
    sb.append("    ibanTxEndToEndId: ").append(toIndentedString(ibanTxEndToEndId)).append("\n");
    sb.append("    ibanTxId: ").append(toIndentedString(ibanTxId)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    forwardUrl: ").append(toIndentedString(forwardUrl)).append("\n");
    sb.append("    payinDate: ").append(toIndentedString(payinDate)).append("\n");
    sb.append("    mandateId: ").append(toIndentedString(mandateId)).append("\n");
    sb.append("    creditorName: ").append(toIndentedString(creditorName)).append("\n");
    sb.append("    creditorAddressLine: ").append(toIndentedString(creditorAddressLine)).append("\n");
    sb.append("    creditorCountry: ").append(toIndentedString(creditorCountry)).append("\n");
    sb.append("    creditorIban: ").append(toIndentedString(creditorIban)).append("\n");
    sb.append("    creditorBIC: ").append(toIndentedString(creditorBIC)).append("\n");
    sb.append("    virtualIbanId: ").append(toIndentedString(virtualIbanId)).append("\n");
    sb.append("    virtualIbanReference: ").append(toIndentedString(virtualIbanReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payinId");
    openapiFields.add("payinTag");
    openapiFields.add("payinStatus");
    openapiFields.add("codeStatus");
    openapiFields.add("informationStatus");
    openapiFields.add("walletId");
    openapiFields.add("userId");
    openapiFields.add("cartId");
    openapiFields.add("walletEventName");
    openapiFields.add("walletAlias");
    openapiFields.add("userFirstname");
    openapiFields.add("userLastname");
    openapiFields.add("messageToUser");
    openapiFields.add("paymentMethodId");
    openapiFields.add("subtotalItems");
    openapiFields.add("subtotalServices");
    openapiFields.add("subtotalTax");
    openapiFields.add("amount");
    openapiFields.add("currency");
    openapiFields.add("distributorFee");
    openapiFields.add("createdDate");
    openapiFields.add("createdIp");
    openapiFields.add("paymentHtml");
    openapiFields.add("paymentLanguage");
    openapiFields.add("paymentPostUrl");
    openapiFields.add("paymentPostDataUrl");
    openapiFields.add("paymentAcceptedUrl");
    openapiFields.add("paymentWaitingUrl");
    openapiFields.add("paymentRefusedUrl");
    openapiFields.add("paymentCanceledUrl");
    openapiFields.add("paymentExceptionUrl");
    openapiFields.add("ibanFullname");
    openapiFields.add("DbtrIBAN");
    openapiFields.add("ibanId");
    openapiFields.add("ibanBic");
    openapiFields.add("ibanTxEndToEndId");
    openapiFields.add("ibanTxId");
    openapiFields.add("refundAmount");
    openapiFields.add("totalRows");
    openapiFields.add("forwardUrl");
    openapiFields.add("payinDate");
    openapiFields.add("mandateId");
    openapiFields.add("creditorName");
    openapiFields.add("creditorAddressLine");
    openapiFields.add("creditorCountry");
    openapiFields.add("creditorIban");
    openapiFields.add("creditorBIC");
    openapiFields.add("virtualIbanId");
    openapiFields.add("virtualIbanReference");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PayinObjectPayinsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PayinObjectPayinsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayinObjectPayinsInner is not found in the empty JSON string", PayinObjectPayinsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PayinObjectPayinsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PayinObjectPayinsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("payinId") != null && !jsonObj.get("payinId").isJsonNull()) && !jsonObj.get("payinId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinId").toString()));
      }
      if ((jsonObj.get("payinTag") != null && !jsonObj.get("payinTag").isJsonNull()) && !jsonObj.get("payinTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinTag").toString()));
      }
      if ((jsonObj.get("payinStatus") != null && !jsonObj.get("payinStatus").isJsonNull()) && !jsonObj.get("payinStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinStatus").toString()));
      }
      // validate the optional field `payinStatus`
      if (jsonObj.get("payinStatus") != null && !jsonObj.get("payinStatus").isJsonNull()) {
        PayinStatusEnum.validateJsonElement(jsonObj.get("payinStatus"));
      }
      if ((jsonObj.get("informationStatus") != null && !jsonObj.get("informationStatus").isJsonNull()) && !jsonObj.get("informationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `informationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("informationStatus").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("walletEventName") != null && !jsonObj.get("walletEventName").isJsonNull()) && !jsonObj.get("walletEventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletEventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletEventName").toString()));
      }
      if ((jsonObj.get("walletAlias") != null && !jsonObj.get("walletAlias").isJsonNull()) && !jsonObj.get("walletAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletAlias").toString()));
      }
      if ((jsonObj.get("userFirstname") != null && !jsonObj.get("userFirstname").isJsonNull()) && !jsonObj.get("userFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstname").toString()));
      }
      if ((jsonObj.get("userLastname") != null && !jsonObj.get("userLastname").isJsonNull()) && !jsonObj.get("userLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLastname").toString()));
      }
      if ((jsonObj.get("messageToUser") != null && !jsonObj.get("messageToUser").isJsonNull()) && !jsonObj.get("messageToUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageToUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageToUser").toString()));
      }
      if ((jsonObj.get("subtotalItems") != null && !jsonObj.get("subtotalItems").isJsonNull()) && !jsonObj.get("subtotalItems").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtotalItems` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtotalItems").toString()));
      }
      if ((jsonObj.get("subtotalServices") != null && !jsonObj.get("subtotalServices").isJsonNull()) && !jsonObj.get("subtotalServices").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtotalServices` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtotalServices").toString()));
      }
      if ((jsonObj.get("subtotalTax") != null && !jsonObj.get("subtotalTax").isJsonNull()) && !jsonObj.get("subtotalTax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtotalTax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtotalTax").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("distributorFee") != null && !jsonObj.get("distributorFee").isJsonNull()) && !jsonObj.get("distributorFee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distributorFee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distributorFee").toString()));
      }
      if ((jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) && !jsonObj.get("createdDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdDate").toString()));
      }
      if ((jsonObj.get("createdIp") != null && !jsonObj.get("createdIp").isJsonNull()) && !jsonObj.get("createdIp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdIp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdIp").toString()));
      }
      if ((jsonObj.get("paymentHtml") != null && !jsonObj.get("paymentHtml").isJsonNull()) && !jsonObj.get("paymentHtml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentHtml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentHtml").toString()));
      }
      if ((jsonObj.get("paymentLanguage") != null && !jsonObj.get("paymentLanguage").isJsonNull()) && !jsonObj.get("paymentLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentLanguage").toString()));
      }
      if ((jsonObj.get("paymentPostUrl") != null && !jsonObj.get("paymentPostUrl").isJsonNull()) && !jsonObj.get("paymentPostUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentPostUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentPostUrl").toString()));
      }
      if ((jsonObj.get("paymentPostDataUrl") != null && !jsonObj.get("paymentPostDataUrl").isJsonNull()) && !jsonObj.get("paymentPostDataUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentPostDataUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentPostDataUrl").toString()));
      }
      if ((jsonObj.get("paymentAcceptedUrl") != null && !jsonObj.get("paymentAcceptedUrl").isJsonNull()) && !jsonObj.get("paymentAcceptedUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentAcceptedUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentAcceptedUrl").toString()));
      }
      if ((jsonObj.get("paymentWaitingUrl") != null && !jsonObj.get("paymentWaitingUrl").isJsonNull()) && !jsonObj.get("paymentWaitingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentWaitingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentWaitingUrl").toString()));
      }
      if ((jsonObj.get("paymentRefusedUrl") != null && !jsonObj.get("paymentRefusedUrl").isJsonNull()) && !jsonObj.get("paymentRefusedUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentRefusedUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentRefusedUrl").toString()));
      }
      if ((jsonObj.get("paymentCanceledUrl") != null && !jsonObj.get("paymentCanceledUrl").isJsonNull()) && !jsonObj.get("paymentCanceledUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentCanceledUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentCanceledUrl").toString()));
      }
      if ((jsonObj.get("paymentExceptionUrl") != null && !jsonObj.get("paymentExceptionUrl").isJsonNull()) && !jsonObj.get("paymentExceptionUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentExceptionUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentExceptionUrl").toString()));
      }
      if ((jsonObj.get("ibanFullname") != null && !jsonObj.get("ibanFullname").isJsonNull()) && !jsonObj.get("ibanFullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibanFullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibanFullname").toString()));
      }
      if ((jsonObj.get("DbtrIBAN") != null && !jsonObj.get("DbtrIBAN").isJsonNull()) && !jsonObj.get("DbtrIBAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DbtrIBAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DbtrIBAN").toString()));
      }
      if ((jsonObj.get("ibanId") != null && !jsonObj.get("ibanId").isJsonNull()) && !jsonObj.get("ibanId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibanId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibanId").toString()));
      }
      if ((jsonObj.get("ibanBic") != null && !jsonObj.get("ibanBic").isJsonNull()) && !jsonObj.get("ibanBic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibanBic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibanBic").toString()));
      }
      if ((jsonObj.get("ibanTxEndToEndId") != null && !jsonObj.get("ibanTxEndToEndId").isJsonNull()) && !jsonObj.get("ibanTxEndToEndId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibanTxEndToEndId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibanTxEndToEndId").toString()));
      }
      if ((jsonObj.get("ibanTxId") != null && !jsonObj.get("ibanTxId").isJsonNull()) && !jsonObj.get("ibanTxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibanTxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibanTxId").toString()));
      }
      if ((jsonObj.get("refundAmount") != null && !jsonObj.get("refundAmount").isJsonNull()) && !jsonObj.get("refundAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundAmount").toString()));
      }
      if ((jsonObj.get("forwardUrl") != null && !jsonObj.get("forwardUrl").isJsonNull()) && !jsonObj.get("forwardUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forwardUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forwardUrl").toString()));
      }
      if ((jsonObj.get("payinDate") != null && !jsonObj.get("payinDate").isJsonNull()) && !jsonObj.get("payinDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payinDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payinDate").toString()));
      }
      if ((jsonObj.get("creditorName") != null && !jsonObj.get("creditorName").isJsonNull()) && !jsonObj.get("creditorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditorName").toString()));
      }
      if ((jsonObj.get("creditorAddressLine") != null && !jsonObj.get("creditorAddressLine").isJsonNull()) && !jsonObj.get("creditorAddressLine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditorAddressLine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditorAddressLine").toString()));
      }
      if ((jsonObj.get("creditorCountry") != null && !jsonObj.get("creditorCountry").isJsonNull()) && !jsonObj.get("creditorCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditorCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditorCountry").toString()));
      }
      if ((jsonObj.get("creditorIban") != null && !jsonObj.get("creditorIban").isJsonNull()) && !jsonObj.get("creditorIban").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditorIban` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditorIban").toString()));
      }
      if ((jsonObj.get("creditorBIC") != null && !jsonObj.get("creditorBIC").isJsonNull()) && !jsonObj.get("creditorBIC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditorBIC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditorBIC").toString()));
      }
      if ((jsonObj.get("virtualIbanReference") != null && !jsonObj.get("virtualIbanReference").isJsonNull()) && !jsonObj.get("virtualIbanReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtualIbanReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtualIbanReference").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayinObjectPayinsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayinObjectPayinsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayinObjectPayinsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayinObjectPayinsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PayinObjectPayinsInner>() {
           @Override
           public void write(JsonWriter out, PayinObjectPayinsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PayinObjectPayinsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PayinObjectPayinsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PayinObjectPayinsInner
   * @throws IOException if the JSON string is invalid with respect to PayinObjectPayinsInner
   */
  public static PayinObjectPayinsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayinObjectPayinsInner.class);
  }

  /**
   * Convert an instance of PayinObjectPayinsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

