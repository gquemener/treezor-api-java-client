/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PostExtOperation200ResponseExternalOperation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PostExtOperation200ResponseExternalOperation {
  public static final String SERIALIZED_NAME_EXTERNAL_OPERATION_ID = "externalOperationId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_OPERATION_ID)
  @javax.annotation.Nullable
  private UUID externalOperationId;

  public static final String SERIALIZED_NAME_ACTION_NAME = "actionName";
  @SerializedName(SERIALIZED_NAME_ACTION_NAME)
  @javax.annotation.Nullable
  private String actionName;

  public static final String SERIALIZED_NAME_SCA_PROOF = "scaProof";
  @SerializedName(SERIALIZED_NAME_SCA_PROOF)
  @javax.annotation.Nullable
  private String scaProof;

  public static final String SERIALIZED_NAME_ACTION_DATE = "actionDate";
  @SerializedName(SERIALIZED_NAME_ACTION_DATE)
  @javax.annotation.Nullable
  private String actionDate;

  public static final String SERIALIZED_NAME_RESOURCE_IDS = "resourceIds";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDS)
  @javax.annotation.Nullable
  private List<String> resourceIds;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_SCA_DATE = "scaDate";
  @SerializedName(SERIALIZED_NAME_SCA_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime scaDate;

  /**
   * The type of SCA for per-operation SCA
   */
  @JsonAdapter(AmrEnum.Adapter.class)
  public enum AmrEnum {
    CLOUD_PIN("CLOUD_PIN"),
    
    HYBRID_PIN("HYBRID_PIN"),
    
    DEVICE_BIOMETRIC("DEVICE_BIOMETRIC");

    private String value;

    AmrEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AmrEnum fromValue(String value) {
      for (AmrEnum b : AmrEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AmrEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AmrEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AmrEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AmrEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AmrEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AMR = "amr";
  @SerializedName(SERIALIZED_NAME_AMR)
  @javax.annotation.Nullable
  private AmrEnum amr;

  public static final String SERIALIZED_NAME_EXTERNAL_OPERATION_NOTE = "externalOperationNote";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_OPERATION_NOTE)
  @javax.annotation.Nullable
  private OffsetDateTime externalOperationNote;

  public static final String SERIALIZED_NAME_EXTERNAL_OPERATION_RESPONSE_CODE = "externalOperationResponseCode";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_OPERATION_RESPONSE_CODE)
  @javax.annotation.Nullable
  private Integer externalOperationResponseCode;

  public PostExtOperation200ResponseExternalOperation() {
  }

  public PostExtOperation200ResponseExternalOperation externalOperationId(@javax.annotation.Nullable UUID externalOperationId) {
    this.externalOperationId = externalOperationId;
    return this;
  }

  /**
   * The unique identifier (uiid) of the ExternalOperation.
   * @return externalOperationId
   */
  @javax.annotation.Nullable
  public UUID getExternalOperationId() {
    return externalOperationId;
  }

  public void setExternalOperationId(@javax.annotation.Nullable UUID externalOperationId) {
    this.externalOperationId = externalOperationId;
  }


  public PostExtOperation200ResponseExternalOperation actionName(@javax.annotation.Nullable String actionName) {
    this.actionName = actionName;
    return this;
  }

  /**
   * The end user action that was secured by an SCA.
   * @return actionName
   */
  @javax.annotation.Nullable
  public String getActionName() {
    return actionName;
  }

  public void setActionName(@javax.annotation.Nullable String actionName) {
    this.actionName = actionName;
  }


  public PostExtOperation200ResponseExternalOperation scaProof(@javax.annotation.Nullable String scaProof) {
    this.scaProof = scaProof;
    return this;
  }

  /**
   * The valid proof that authenticated the end user&#39;s action.
   * @return scaProof
   */
  @javax.annotation.Nullable
  public String getScaProof() {
    return scaProof;
  }

  public void setScaProof(@javax.annotation.Nullable String scaProof) {
    this.scaProof = scaProof;
  }


  public PostExtOperation200ResponseExternalOperation actionDate(@javax.annotation.Nullable String actionDate) {
    this.actionDate = actionDate;
    return this;
  }

  /**
   * The date on which the declared action took place.
   * @return actionDate
   */
  @javax.annotation.Nullable
  public String getActionDate() {
    return actionDate;
  }

  public void setActionDate(@javax.annotation.Nullable String actionDate) {
    this.actionDate = actionDate;
  }


  public PostExtOperation200ResponseExternalOperation resourceIds(@javax.annotation.Nullable List<String> resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

  public PostExtOperation200ResponseExternalOperation addResourceIdsItem(String resourceIdsItem) {
    if (this.resourceIds == null) {
      this.resourceIds = new ArrayList<>();
    }
    this.resourceIds.add(resourceIdsItem);
    return this;
  }

  /**
   * The list of unique identifiers (strings) of the objects in case of a payout or transfer.
   * @return resourceIds
   */
  @javax.annotation.Nullable
  public List<String> getResourceIds() {
    return resourceIds;
  }

  public void setResourceIds(@javax.annotation.Nullable List<String> resourceIds) {
    this.resourceIds = resourceIds;
  }


  public PostExtOperation200ResponseExternalOperation createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The date and time at which the External Operation was created. (Format: RFC 3339) 
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PostExtOperation200ResponseExternalOperation scaDate(@javax.annotation.Nullable OffsetDateTime scaDate) {
    this.scaDate = scaDate;
    return this;
  }

  /**
   * The &#x60;iat&#x60; timestamp of the &#x60;scaProof&#x60; for per-operation SCA. 
   * @return scaDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScaDate() {
    return scaDate;
  }

  public void setScaDate(@javax.annotation.Nullable OffsetDateTime scaDate) {
    this.scaDate = scaDate;
  }


  public PostExtOperation200ResponseExternalOperation amr(@javax.annotation.Nullable AmrEnum amr) {
    this.amr = amr;
    return this;
  }

  /**
   * The type of SCA for per-operation SCA
   * @return amr
   */
  @javax.annotation.Nullable
  public AmrEnum getAmr() {
    return amr;
  }

  public void setAmr(@javax.annotation.Nullable AmrEnum amr) {
    this.amr = amr;
  }


  public PostExtOperation200ResponseExternalOperation externalOperationNote(@javax.annotation.Nullable OffsetDateTime externalOperationNote) {
    this.externalOperationNote = externalOperationNote;
    return this;
  }

  /**
   * Comment left by Treezor after scoring, indicating a potential issue. See [List of notes](/guide/strong-customer-authentication/endpoints-and-data.html#notes-externaloperationnote) 
   * @return externalOperationNote
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExternalOperationNote() {
    return externalOperationNote;
  }

  public void setExternalOperationNote(@javax.annotation.Nullable OffsetDateTime externalOperationNote) {
    this.externalOperationNote = externalOperationNote;
  }


  public PostExtOperation200ResponseExternalOperation externalOperationResponseCode(@javax.annotation.Nullable Integer externalOperationResponseCode) {
    this.externalOperationResponseCode = externalOperationResponseCode;
    return this;
  }

  /**
   * For Treezor purposes only.
   * @return externalOperationResponseCode
   */
  @javax.annotation.Nullable
  public Integer getExternalOperationResponseCode() {
    return externalOperationResponseCode;
  }

  public void setExternalOperationResponseCode(@javax.annotation.Nullable Integer externalOperationResponseCode) {
    this.externalOperationResponseCode = externalOperationResponseCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostExtOperation200ResponseExternalOperation postExtOperation200ResponseExternalOperation = (PostExtOperation200ResponseExternalOperation) o;
    return Objects.equals(this.externalOperationId, postExtOperation200ResponseExternalOperation.externalOperationId) &&
        Objects.equals(this.actionName, postExtOperation200ResponseExternalOperation.actionName) &&
        Objects.equals(this.scaProof, postExtOperation200ResponseExternalOperation.scaProof) &&
        Objects.equals(this.actionDate, postExtOperation200ResponseExternalOperation.actionDate) &&
        Objects.equals(this.resourceIds, postExtOperation200ResponseExternalOperation.resourceIds) &&
        Objects.equals(this.createdAt, postExtOperation200ResponseExternalOperation.createdAt) &&
        Objects.equals(this.scaDate, postExtOperation200ResponseExternalOperation.scaDate) &&
        Objects.equals(this.amr, postExtOperation200ResponseExternalOperation.amr) &&
        Objects.equals(this.externalOperationNote, postExtOperation200ResponseExternalOperation.externalOperationNote) &&
        Objects.equals(this.externalOperationResponseCode, postExtOperation200ResponseExternalOperation.externalOperationResponseCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalOperationId, actionName, scaProof, actionDate, resourceIds, createdAt, scaDate, amr, externalOperationNote, externalOperationResponseCode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostExtOperation200ResponseExternalOperation {\n");
    sb.append("    externalOperationId: ").append(toIndentedString(externalOperationId)).append("\n");
    sb.append("    actionName: ").append(toIndentedString(actionName)).append("\n");
    sb.append("    scaProof: ").append(toIndentedString(scaProof)).append("\n");
    sb.append("    actionDate: ").append(toIndentedString(actionDate)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    scaDate: ").append(toIndentedString(scaDate)).append("\n");
    sb.append("    amr: ").append(toIndentedString(amr)).append("\n");
    sb.append("    externalOperationNote: ").append(toIndentedString(externalOperationNote)).append("\n");
    sb.append("    externalOperationResponseCode: ").append(toIndentedString(externalOperationResponseCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("externalOperationId");
    openapiFields.add("actionName");
    openapiFields.add("scaProof");
    openapiFields.add("actionDate");
    openapiFields.add("resourceIds");
    openapiFields.add("createdAt");
    openapiFields.add("scaDate");
    openapiFields.add("amr");
    openapiFields.add("externalOperationNote");
    openapiFields.add("externalOperationResponseCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostExtOperation200ResponseExternalOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostExtOperation200ResponseExternalOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostExtOperation200ResponseExternalOperation is not found in the empty JSON string", PostExtOperation200ResponseExternalOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostExtOperation200ResponseExternalOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostExtOperation200ResponseExternalOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("externalOperationId") != null && !jsonObj.get("externalOperationId").isJsonNull()) && !jsonObj.get("externalOperationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalOperationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalOperationId").toString()));
      }
      if ((jsonObj.get("actionName") != null && !jsonObj.get("actionName").isJsonNull()) && !jsonObj.get("actionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actionName").toString()));
      }
      if ((jsonObj.get("scaProof") != null && !jsonObj.get("scaProof").isJsonNull()) && !jsonObj.get("scaProof").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scaProof` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scaProof").toString()));
      }
      if ((jsonObj.get("actionDate") != null && !jsonObj.get("actionDate").isJsonNull()) && !jsonObj.get("actionDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actionDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actionDate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceIds") != null && !jsonObj.get("resourceIds").isJsonNull() && !jsonObj.get("resourceIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceIds` to be an array in the JSON string but got `%s`", jsonObj.get("resourceIds").toString()));
      }
      if ((jsonObj.get("amr") != null && !jsonObj.get("amr").isJsonNull()) && !jsonObj.get("amr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amr").toString()));
      }
      // validate the optional field `amr`
      if (jsonObj.get("amr") != null && !jsonObj.get("amr").isJsonNull()) {
        AmrEnum.validateJsonElement(jsonObj.get("amr"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostExtOperation200ResponseExternalOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostExtOperation200ResponseExternalOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostExtOperation200ResponseExternalOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostExtOperation200ResponseExternalOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<PostExtOperation200ResponseExternalOperation>() {
           @Override
           public void write(JsonWriter out, PostExtOperation200ResponseExternalOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostExtOperation200ResponseExternalOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostExtOperation200ResponseExternalOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostExtOperation200ResponseExternalOperation
   * @throws IOException if the JSON string is invalid with respect to PostExtOperation200ResponseExternalOperation
   */
  public static PostExtOperation200ResponseExternalOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostExtOperation200ResponseExternalOperation.class);
  }

  /**
   * Convert an instance of PostExtOperation200ResponseExternalOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

