/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SearchBusiness200ResponseInnerBusinessinformationsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class SearchBusiness200ResponseInnerBusinessinformationsInner {
  public static final String SERIALIZED_NAME_LEGAL_NAME = "legalName";
  @SerializedName(SERIALIZED_NAME_LEGAL_NAME)
  @javax.annotation.Nullable
  private String legalName;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_LEGAL_TVA_NUMBER = "legalTvaNumber";
  @SerializedName(SERIALIZED_NAME_LEGAL_TVA_NUMBER)
  @javax.annotation.Nullable
  private String legalTvaNumber;

  public static final String SERIALIZED_NAME_LEGAL_REGISTRATION_NUMBER = "legalRegistrationNumber";
  @SerializedName(SERIALIZED_NAME_LEGAL_REGISTRATION_NUMBER)
  @javax.annotation.Nullable
  private String legalRegistrationNumber;

  /**
   * | Code | Description | | ---- | ----------- | |  D   | Deleted     | |  N   | Company non diffusible (Insee) | |  I   | Inactive (Insee) | |  A   | Economically active | |  C   | Closed | |  T   | Transfered | |  S   | Economically stopped (Insee) | |  L   | Liquidation | |  O   | Dormant company | 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    D("D"),
    
    N("N"),
    
    I("I"),
    
    A("A"),
    
    C("C"),
    
    T("T"),
    
    S("S"),
    
    L("L"),
    
    O("O");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private StatusEnum status;

  public static final String SERIALIZED_NAME_OFFICE_TYPE = "officeType";
  @SerializedName(SERIALIZED_NAME_OFFICE_TYPE)
  @javax.annotation.Nullable
  private Integer officeType;

  public static final String SERIALIZED_NAME_SAFE_NUMBER = "safeNumber";
  @SerializedName(SERIALIZED_NAME_SAFE_NUMBER)
  @javax.annotation.Nullable
  private String safeNumber;

  public static final String SERIALIZED_NAME_ACTIVITY_TYPE = "activityType";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TYPE)
  @javax.annotation.Nullable
  private String activityType;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String externalId;

  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  @javax.annotation.Nullable
  private String address1;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  @javax.annotation.Nullable
  private String postcode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  @javax.annotation.Nullable
  private String city;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  @javax.annotation.Nullable
  private String state;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  @javax.annotation.Nullable
  private String country;

  public static final String SERIALIZED_NAME_TRADENAME = "tradename";
  @SerializedName(SERIALIZED_NAME_TRADENAME)
  @javax.annotation.Nullable
  private String tradename;

  public SearchBusiness200ResponseInnerBusinessinformationsInner() {
  }

  public SearchBusiness200ResponseInnerBusinessinformationsInner legalName(@javax.annotation.Nullable String legalName) {
    this.legalName = legalName;
    return this;
  }

  /**
   * Business commercial name.
   * @return legalName
   */
  @javax.annotation.Nullable
  public String getLegalName() {
    return legalName;
  }

  public void setLegalName(@javax.annotation.Nullable String legalName) {
    this.legalName = legalName;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Business phone number.
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner legalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {
    this.legalTvaNumber = legalTvaNumber;
    return this;
  }

  /**
   * Business VAT number.
   * @return legalTvaNumber
   */
  @javax.annotation.Nullable
  public String getLegalTvaNumber() {
    return legalTvaNumber;
  }

  public void setLegalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {
    this.legalTvaNumber = legalTvaNumber;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner legalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {
    this.legalRegistrationNumber = legalRegistrationNumber;
    return this;
  }

  /**
   * Business registration number.
   * @return legalRegistrationNumber
   */
  @javax.annotation.Nullable
  public String getLegalRegistrationNumber() {
    return legalRegistrationNumber;
  }

  public void setLegalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {
    this.legalRegistrationNumber = legalRegistrationNumber;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner status(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * | Code | Description | | ---- | ----------- | |  D   | Deleted     | |  N   | Company non diffusible (Insee) | |  I   | Inactive (Insee) | |  A   | Economically active | |  C   | Closed | |  T   | Transfered | |  S   | Economically stopped (Insee) | |  L   | Liquidation | |  O   | Dormant company | 
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner officeType(@javax.annotation.Nullable Integer officeType) {
    this.officeType = officeType;
    return this;
  }

  /**
   * | Code | Description | | ---- | ----        | |  0   | Secondary establishment | |  1   | Headquarter | 
   * @return officeType
   */
  @javax.annotation.Nullable
  public Integer getOfficeType() {
    return officeType;
  }

  public void setOfficeType(@javax.annotation.Nullable Integer officeType) {
    this.officeType = officeType;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner safeNumber(@javax.annotation.Nullable String safeNumber) {
    this.safeNumber = safeNumber;
    return this;
  }

  /**
   * Business SAFE number.
   * @return safeNumber
   */
  @javax.annotation.Nullable
  public String getSafeNumber() {
    return safeNumber;
  }

  public void setSafeNumber(@javax.annotation.Nullable String safeNumber) {
    this.safeNumber = safeNumber;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner activityType(@javax.annotation.Nullable String activityType) {
    this.activityType = activityType;
    return this;
  }

  /**
   * Business sector. Code NAF in France.
   * @return activityType
   */
  @javax.annotation.Nullable
  public String getActivityType() {
    return activityType;
  }

  public void setActivityType(@javax.annotation.Nullable String activityType) {
    this.activityType = activityType;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Business external id.
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner address1(@javax.annotation.Nullable String address1) {
    this.address1 = address1;
    return this;
  }

  /**
   * Business&#39; street.
   * @return address1
   */
  @javax.annotation.Nullable
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(@javax.annotation.Nullable String address1) {
    this.address1 = address1;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner postcode(@javax.annotation.Nullable String postcode) {
    this.postcode = postcode;
    return this;
  }

  /**
   * Business&#39; postal code.
   * @return postcode
   */
  @javax.annotation.Nullable
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(@javax.annotation.Nullable String postcode) {
    this.postcode = postcode;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner city(@javax.annotation.Nullable String city) {
    this.city = city;
    return this;
  }

  /**
   * Business&#39; city.
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner state(@javax.annotation.Nullable String state) {
    this.state = state;
    return this;
  }

  /**
   * Business&#39; province.
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(@javax.annotation.Nullable String state) {
    this.state = state;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner country(@javax.annotation.Nullable String country) {
    this.country = country;
    return this;
  }

  /**
   * Business&#39; country.
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }


  public SearchBusiness200ResponseInnerBusinessinformationsInner tradename(@javax.annotation.Nullable String tradename) {
    this.tradename = tradename;
    return this;
  }

  /**
   * Business trade name
   * @return tradename
   */
  @javax.annotation.Nullable
  public String getTradename() {
    return tradename;
  }

  public void setTradename(@javax.annotation.Nullable String tradename) {
    this.tradename = tradename;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchBusiness200ResponseInnerBusinessinformationsInner searchBusiness200ResponseInnerBusinessinformationsInner = (SearchBusiness200ResponseInnerBusinessinformationsInner) o;
    return Objects.equals(this.legalName, searchBusiness200ResponseInnerBusinessinformationsInner.legalName) &&
        Objects.equals(this.phone, searchBusiness200ResponseInnerBusinessinformationsInner.phone) &&
        Objects.equals(this.legalTvaNumber, searchBusiness200ResponseInnerBusinessinformationsInner.legalTvaNumber) &&
        Objects.equals(this.legalRegistrationNumber, searchBusiness200ResponseInnerBusinessinformationsInner.legalRegistrationNumber) &&
        Objects.equals(this.status, searchBusiness200ResponseInnerBusinessinformationsInner.status) &&
        Objects.equals(this.officeType, searchBusiness200ResponseInnerBusinessinformationsInner.officeType) &&
        Objects.equals(this.safeNumber, searchBusiness200ResponseInnerBusinessinformationsInner.safeNumber) &&
        Objects.equals(this.activityType, searchBusiness200ResponseInnerBusinessinformationsInner.activityType) &&
        Objects.equals(this.externalId, searchBusiness200ResponseInnerBusinessinformationsInner.externalId) &&
        Objects.equals(this.address1, searchBusiness200ResponseInnerBusinessinformationsInner.address1) &&
        Objects.equals(this.postcode, searchBusiness200ResponseInnerBusinessinformationsInner.postcode) &&
        Objects.equals(this.city, searchBusiness200ResponseInnerBusinessinformationsInner.city) &&
        Objects.equals(this.state, searchBusiness200ResponseInnerBusinessinformationsInner.state) &&
        Objects.equals(this.country, searchBusiness200ResponseInnerBusinessinformationsInner.country) &&
        Objects.equals(this.tradename, searchBusiness200ResponseInnerBusinessinformationsInner.tradename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(legalName, phone, legalTvaNumber, legalRegistrationNumber, status, officeType, safeNumber, activityType, externalId, address1, postcode, city, state, country, tradename);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchBusiness200ResponseInnerBusinessinformationsInner {\n");
    sb.append("    legalName: ").append(toIndentedString(legalName)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    legalTvaNumber: ").append(toIndentedString(legalTvaNumber)).append("\n");
    sb.append("    legalRegistrationNumber: ").append(toIndentedString(legalRegistrationNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    officeType: ").append(toIndentedString(officeType)).append("\n");
    sb.append("    safeNumber: ").append(toIndentedString(safeNumber)).append("\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    tradename: ").append(toIndentedString(tradename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("legalName");
    openapiFields.add("phone");
    openapiFields.add("legalTvaNumber");
    openapiFields.add("legalRegistrationNumber");
    openapiFields.add("status");
    openapiFields.add("officeType");
    openapiFields.add("safeNumber");
    openapiFields.add("activityType");
    openapiFields.add("externalId");
    openapiFields.add("address1");
    openapiFields.add("postcode");
    openapiFields.add("city");
    openapiFields.add("state");
    openapiFields.add("country");
    openapiFields.add("tradename");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchBusiness200ResponseInnerBusinessinformationsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchBusiness200ResponseInnerBusinessinformationsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchBusiness200ResponseInnerBusinessinformationsInner is not found in the empty JSON string", SearchBusiness200ResponseInnerBusinessinformationsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchBusiness200ResponseInnerBusinessinformationsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchBusiness200ResponseInnerBusinessinformationsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("legalName") != null && !jsonObj.get("legalName").isJsonNull()) && !jsonObj.get("legalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalName").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("legalTvaNumber") != null && !jsonObj.get("legalTvaNumber").isJsonNull()) && !jsonObj.get("legalTvaNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalTvaNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalTvaNumber").toString()));
      }
      if ((jsonObj.get("legalRegistrationNumber") != null && !jsonObj.get("legalRegistrationNumber").isJsonNull()) && !jsonObj.get("legalRegistrationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalRegistrationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalRegistrationNumber").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("safeNumber") != null && !jsonObj.get("safeNumber").isJsonNull()) && !jsonObj.get("safeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `safeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("safeNumber").toString()));
      }
      if ((jsonObj.get("activityType") != null && !jsonObj.get("activityType").isJsonNull()) && !jsonObj.get("activityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityType").toString()));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonNull()) && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if ((jsonObj.get("postcode") != null && !jsonObj.get("postcode").isJsonNull()) && !jsonObj.get("postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcode").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("tradename") != null && !jsonObj.get("tradename").isJsonNull()) && !jsonObj.get("tradename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tradename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tradename").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchBusiness200ResponseInnerBusinessinformationsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchBusiness200ResponseInnerBusinessinformationsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchBusiness200ResponseInnerBusinessinformationsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchBusiness200ResponseInnerBusinessinformationsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchBusiness200ResponseInnerBusinessinformationsInner>() {
           @Override
           public void write(JsonWriter out, SearchBusiness200ResponseInnerBusinessinformationsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchBusiness200ResponseInnerBusinessinformationsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchBusiness200ResponseInnerBusinessinformationsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchBusiness200ResponseInnerBusinessinformationsInner
   * @throws IOException if the JSON string is invalid with respect to SearchBusiness200ResponseInnerBusinessinformationsInner
   */
  public static SearchBusiness200ResponseInnerBusinessinformationsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchBusiness200ResponseInnerBusinessinformationsInner.class);
  }

  /**
   * Convert an instance of SearchBusiness200ResponseInnerBusinessinformationsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

