/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutMerchandidrestrictiongroupsDeltaupdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PutMerchandidrestrictiongroupsDeltaupdateRequest {
  public static final String SERIALIZED_NAME_MERCHANTS = "merchants";
  @SerializedName(SERIALIZED_NAME_MERCHANTS)
  @javax.annotation.Nullable
  private List<String> merchants = new ArrayList<>();

  /**
   * Whether to &#x60;add&#x60; or &#x60;removed&#x60; the Merchant Ids.
   */
  @JsonAdapter(MerchantsOperationEnum.Adapter.class)
  public enum MerchantsOperationEnum {
    ADD("add"),
    
    REMOVE("remove");

    private String value;

    MerchantsOperationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MerchantsOperationEnum fromValue(String value) {
      for (MerchantsOperationEnum b : MerchantsOperationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MerchantsOperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MerchantsOperationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MerchantsOperationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MerchantsOperationEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MerchantsOperationEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MERCHANTS_OPERATION = "merchantsOperation";
  @SerializedName(SERIALIZED_NAME_MERCHANTS_OPERATION)
  @javax.annotation.Nullable
  private MerchantsOperationEnum merchantsOperation;

  public PutMerchandidrestrictiongroupsDeltaupdateRequest() {
  }

  public PutMerchandidrestrictiongroupsDeltaupdateRequest merchants(@javax.annotation.Nullable List<String> merchants) {
    this.merchants = merchants;
    return this;
  }

  public PutMerchandidrestrictiongroupsDeltaupdateRequest addMerchantsItem(String merchantsItem) {
    if (this.merchants == null) {
      this.merchants = new ArrayList<>();
    }
    this.merchants.add(merchantsItem);
    return this;
  }

  /**
   * The list of Merchant Ids (each item is a string)
   * @return merchants
   */
  @javax.annotation.Nullable
  public List<String> getMerchants() {
    return merchants;
  }

  public void setMerchants(@javax.annotation.Nullable List<String> merchants) {
    this.merchants = merchants;
  }


  public PutMerchandidrestrictiongroupsDeltaupdateRequest merchantsOperation(@javax.annotation.Nullable MerchantsOperationEnum merchantsOperation) {
    this.merchantsOperation = merchantsOperation;
    return this;
  }

  /**
   * Whether to &#x60;add&#x60; or &#x60;removed&#x60; the Merchant Ids.
   * @return merchantsOperation
   */
  @javax.annotation.Nullable
  public MerchantsOperationEnum getMerchantsOperation() {
    return merchantsOperation;
  }

  public void setMerchantsOperation(@javax.annotation.Nullable MerchantsOperationEnum merchantsOperation) {
    this.merchantsOperation = merchantsOperation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutMerchandidrestrictiongroupsDeltaupdateRequest putMerchandidrestrictiongroupsDeltaupdateRequest = (PutMerchandidrestrictiongroupsDeltaupdateRequest) o;
    return Objects.equals(this.merchants, putMerchandidrestrictiongroupsDeltaupdateRequest.merchants) &&
        Objects.equals(this.merchantsOperation, putMerchandidrestrictiongroupsDeltaupdateRequest.merchantsOperation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchants, merchantsOperation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutMerchandidrestrictiongroupsDeltaupdateRequest {\n");
    sb.append("    merchants: ").append(toIndentedString(merchants)).append("\n");
    sb.append("    merchantsOperation: ").append(toIndentedString(merchantsOperation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("merchants");
    openapiFields.add("merchantsOperation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutMerchandidrestrictiongroupsDeltaupdateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutMerchandidrestrictiongroupsDeltaupdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutMerchandidrestrictiongroupsDeltaupdateRequest is not found in the empty JSON string", PutMerchandidrestrictiongroupsDeltaupdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutMerchandidrestrictiongroupsDeltaupdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutMerchandidrestrictiongroupsDeltaupdateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("merchants") != null && !jsonObj.get("merchants").isJsonNull() && !jsonObj.get("merchants").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchants` to be an array in the JSON string but got `%s`", jsonObj.get("merchants").toString()));
      }
      if ((jsonObj.get("merchantsOperation") != null && !jsonObj.get("merchantsOperation").isJsonNull()) && !jsonObj.get("merchantsOperation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantsOperation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantsOperation").toString()));
      }
      // validate the optional field `merchantsOperation`
      if (jsonObj.get("merchantsOperation") != null && !jsonObj.get("merchantsOperation").isJsonNull()) {
        MerchantsOperationEnum.validateJsonElement(jsonObj.get("merchantsOperation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutMerchandidrestrictiongroupsDeltaupdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutMerchandidrestrictiongroupsDeltaupdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutMerchandidrestrictiongroupsDeltaupdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutMerchandidrestrictiongroupsDeltaupdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutMerchandidrestrictiongroupsDeltaupdateRequest>() {
           @Override
           public void write(JsonWriter out, PutMerchandidrestrictiongroupsDeltaupdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutMerchandidrestrictiongroupsDeltaupdateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutMerchandidrestrictiongroupsDeltaupdateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutMerchandidrestrictiongroupsDeltaupdateRequest
   * @throws IOException if the JSON string is invalid with respect to PutMerchandidrestrictiongroupsDeltaupdateRequest
   */
  public static PutMerchandidrestrictiongroupsDeltaupdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutMerchandidrestrictiongroupsDeltaupdateRequest.class);
  }

  /**
   * Convert an instance of PutMerchandidrestrictiongroupsDeltaupdateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

