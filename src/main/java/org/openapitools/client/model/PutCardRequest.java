/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutCardRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class PutCardRequest {
  public static final String SERIALIZED_NAME_MCC_RESTRICTION_GROUP_ID = "mccRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_MCC_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer mccRestrictionGroupId;

  public static final String SERIALIZED_NAME_MERCHANT_RESTRICTION_GROUP_ID = "merchantRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer merchantRestrictionGroupId;

  public static final String SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUP_ID = "countryRestrictionGroupId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_RESTRICTION_GROUP_ID)
  @javax.annotation.Nullable
  private Integer countryRestrictionGroupId;

  public static final String SERIALIZED_NAME_ACCESS_TAG = "accessTag";
  @SerializedName(SERIALIZED_NAME_ACCESS_TAG)
  @javax.annotation.Nullable
  private String accessTag;

  public static final String SERIALIZED_NAME_CARD_TAG = "cardTag";
  @SerializedName(SERIALIZED_NAME_CARD_TAG)
  @javax.annotation.Nullable
  private String cardTag;

  public PutCardRequest() {
  }

  public PutCardRequest mccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = mccRestrictionGroupId;
    return this;
  }

  /**
   * The merchant category restriction group (&#x60;mccRestrictionGroup&#x60;) to apply to the card. 
   * @return mccRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getMccRestrictionGroupId() {
    return mccRestrictionGroupId;
  }

  public void setMccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = mccRestrictionGroupId;
  }


  public PutCardRequest merchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = merchantRestrictionGroupId;
    return this;
  }

  /**
   * The merchant Id restriction group (&#x60;merchantRestrictionGroupId&#x60;) to apply to the card. 
   * @return merchantRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getMerchantRestrictionGroupId() {
    return merchantRestrictionGroupId;
  }

  public void setMerchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = merchantRestrictionGroupId;
  }


  public PutCardRequest countryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = countryRestrictionGroupId;
    return this;
  }

  /**
   * The country restriction group (&#x60;countryRestrictionGroupId&#x60;) to apply to the card. 
   * @return countryRestrictionGroupId
   */
  @javax.annotation.Nullable
  public Integer getCountryRestrictionGroupId() {
    return countryRestrictionGroupId;
  }

  public void setCountryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = countryRestrictionGroupId;
  }


  public PutCardRequest accessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters. 
   * @return accessTag
   */
  @javax.annotation.Nullable
  public String getAccessTag() {
    return accessTag;
  }

  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }


  public PutCardRequest cardTag(@javax.annotation.Nullable String cardTag) {
    this.cardTag = cardTag;
    return this;
  }

  /**
   * This attribute is a string which can store a maximum of 250 characters that you are free to populate to suit your needs &lt;br /&gt; You can [read more about tags](/guide/api-basics/objects-tags.html) 
   * @return cardTag
   */
  @javax.annotation.Nullable
  public String getCardTag() {
    return cardTag;
  }

  public void setCardTag(@javax.annotation.Nullable String cardTag) {
    this.cardTag = cardTag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutCardRequest putCardRequest = (PutCardRequest) o;
    return Objects.equals(this.mccRestrictionGroupId, putCardRequest.mccRestrictionGroupId) &&
        Objects.equals(this.merchantRestrictionGroupId, putCardRequest.merchantRestrictionGroupId) &&
        Objects.equals(this.countryRestrictionGroupId, putCardRequest.countryRestrictionGroupId) &&
        Objects.equals(this.accessTag, putCardRequest.accessTag) &&
        Objects.equals(this.cardTag, putCardRequest.cardTag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mccRestrictionGroupId, merchantRestrictionGroupId, countryRestrictionGroupId, accessTag, cardTag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutCardRequest {\n");
    sb.append("    mccRestrictionGroupId: ").append(toIndentedString(mccRestrictionGroupId)).append("\n");
    sb.append("    merchantRestrictionGroupId: ").append(toIndentedString(merchantRestrictionGroupId)).append("\n");
    sb.append("    countryRestrictionGroupId: ").append(toIndentedString(countryRestrictionGroupId)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    cardTag: ").append(toIndentedString(cardTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mccRestrictionGroupId");
    openapiFields.add("merchantRestrictionGroupId");
    openapiFields.add("countryRestrictionGroupId");
    openapiFields.add("accessTag");
    openapiFields.add("cardTag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutCardRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutCardRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutCardRequest is not found in the empty JSON string", PutCardRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutCardRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutCardRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessTag") != null && !jsonObj.get("accessTag").isJsonNull()) && !jsonObj.get("accessTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessTag").toString()));
      }
      if ((jsonObj.get("cardTag") != null && !jsonObj.get("cardTag").isJsonNull()) && !jsonObj.get("cardTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardTag").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutCardRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutCardRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutCardRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutCardRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutCardRequest>() {
           @Override
           public void write(JsonWriter out, PutCardRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutCardRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutCardRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutCardRequest
   * @throws IOException if the JSON string is invalid with respect to PutCardRequest
   */
  public static PutCardRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutCardRequest.class);
  }

  /**
   * Convert an instance of PutCardRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

