/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetAllUsers200ResponseDataInnerClientsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAllUsers200ResponseDataInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-26T10:05:33.742486471+01:00[Europe/Paris]", comments = "Generator version: 7.10.0")
public class GetAllUsers200ResponseDataInner {
  public static final String SERIALIZED_NAME_TRZ_CONNECT_USER_ID = "trzConnectUserId";
  @SerializedName(SERIALIZED_NAME_TRZ_CONNECT_USER_ID)
  @javax.annotation.Nullable
  private String trzConnectUserId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nullable
  private String username;

  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  @javax.annotation.Nullable
  private List<GetAllUsers200ResponseDataInnerClientsInner> clients = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private Integer userId;

  public static final String SERIALIZED_NAME_TRZ_CONNECT_USER_ONBOARDING = "trzConnectUserOnboarding";
  @SerializedName(SERIALIZED_NAME_TRZ_CONNECT_USER_ONBOARDING)
  @javax.annotation.Nullable
  private String trzConnectUserOnboarding;

  public static final String SERIALIZED_NAME_KYC_REVIEW = "kycReview";
  @SerializedName(SERIALIZED_NAME_KYC_REVIEW)
  @javax.annotation.Nullable
  private String kycReview;

  public static final String SERIALIZED_NAME_ONBOARDING_E_SIGN = "onboardingESign";
  @SerializedName(SERIALIZED_NAME_ONBOARDING_E_SIGN)
  @javax.annotation.Nullable
  private String onboardingESign;

  public static final String SERIALIZED_NAME_BRIDGE_USER_ID = "bridgeUserId";
  @SerializedName(SERIALIZED_NAME_BRIDGE_USER_ID)
  @javax.annotation.Nullable
  private String bridgeUserId;

  public GetAllUsers200ResponseDataInner() {
  }

  public GetAllUsers200ResponseDataInner trzConnectUserId(@javax.annotation.Nullable String trzConnectUserId) {
    this.trzConnectUserId = trzConnectUserId;
    return this;
  }

  /**
   * Get trzConnectUserId
   * @return trzConnectUserId
   */
  @javax.annotation.Nullable
  public String getTrzConnectUserId() {
    return trzConnectUserId;
  }

  public void setTrzConnectUserId(@javax.annotation.Nullable String trzConnectUserId) {
    this.trzConnectUserId = trzConnectUserId;
  }


  public GetAllUsers200ResponseDataInner username(@javax.annotation.Nullable String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }


  public GetAllUsers200ResponseDataInner clients(@javax.annotation.Nullable List<GetAllUsers200ResponseDataInnerClientsInner> clients) {
    this.clients = clients;
    return this;
  }

  public GetAllUsers200ResponseDataInner addClientsItem(GetAllUsers200ResponseDataInnerClientsInner clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<>();
    }
    this.clients.add(clientsItem);
    return this;
  }

  /**
   * Get clients
   * @return clients
   */
  @javax.annotation.Nullable
  public List<GetAllUsers200ResponseDataInnerClientsInner> getClients() {
    return clients;
  }

  public void setClients(@javax.annotation.Nullable List<GetAllUsers200ResponseDataInnerClientsInner> clients) {
    this.clients = clients;
  }


  public GetAllUsers200ResponseDataInner userId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }


  public GetAllUsers200ResponseDataInner trzConnectUserOnboarding(@javax.annotation.Nullable String trzConnectUserOnboarding) {
    this.trzConnectUserOnboarding = trzConnectUserOnboarding;
    return this;
  }

  /**
   * Get trzConnectUserOnboarding
   * @return trzConnectUserOnboarding
   */
  @javax.annotation.Nullable
  public String getTrzConnectUserOnboarding() {
    return trzConnectUserOnboarding;
  }

  public void setTrzConnectUserOnboarding(@javax.annotation.Nullable String trzConnectUserOnboarding) {
    this.trzConnectUserOnboarding = trzConnectUserOnboarding;
  }


  public GetAllUsers200ResponseDataInner kycReview(@javax.annotation.Nullable String kycReview) {
    this.kycReview = kycReview;
    return this;
  }

  /**
   * Get kycReview
   * @return kycReview
   */
  @javax.annotation.Nullable
  public String getKycReview() {
    return kycReview;
  }

  public void setKycReview(@javax.annotation.Nullable String kycReview) {
    this.kycReview = kycReview;
  }


  public GetAllUsers200ResponseDataInner onboardingESign(@javax.annotation.Nullable String onboardingESign) {
    this.onboardingESign = onboardingESign;
    return this;
  }

  /**
   * Get onboardingESign
   * @return onboardingESign
   */
  @javax.annotation.Nullable
  public String getOnboardingESign() {
    return onboardingESign;
  }

  public void setOnboardingESign(@javax.annotation.Nullable String onboardingESign) {
    this.onboardingESign = onboardingESign;
  }


  public GetAllUsers200ResponseDataInner bridgeUserId(@javax.annotation.Nullable String bridgeUserId) {
    this.bridgeUserId = bridgeUserId;
    return this;
  }

  /**
   * Get bridgeUserId
   * @return bridgeUserId
   */
  @javax.annotation.Nullable
  public String getBridgeUserId() {
    return bridgeUserId;
  }

  public void setBridgeUserId(@javax.annotation.Nullable String bridgeUserId) {
    this.bridgeUserId = bridgeUserId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAllUsers200ResponseDataInner getAllUsers200ResponseDataInner = (GetAllUsers200ResponseDataInner) o;
    return Objects.equals(this.trzConnectUserId, getAllUsers200ResponseDataInner.trzConnectUserId) &&
        Objects.equals(this.username, getAllUsers200ResponseDataInner.username) &&
        Objects.equals(this.clients, getAllUsers200ResponseDataInner.clients) &&
        Objects.equals(this.userId, getAllUsers200ResponseDataInner.userId) &&
        Objects.equals(this.trzConnectUserOnboarding, getAllUsers200ResponseDataInner.trzConnectUserOnboarding) &&
        Objects.equals(this.kycReview, getAllUsers200ResponseDataInner.kycReview) &&
        Objects.equals(this.onboardingESign, getAllUsers200ResponseDataInner.onboardingESign) &&
        Objects.equals(this.bridgeUserId, getAllUsers200ResponseDataInner.bridgeUserId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trzConnectUserId, username, clients, userId, trzConnectUserOnboarding, kycReview, onboardingESign, bridgeUserId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAllUsers200ResponseDataInner {\n");
    sb.append("    trzConnectUserId: ").append(toIndentedString(trzConnectUserId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    trzConnectUserOnboarding: ").append(toIndentedString(trzConnectUserOnboarding)).append("\n");
    sb.append("    kycReview: ").append(toIndentedString(kycReview)).append("\n");
    sb.append("    onboardingESign: ").append(toIndentedString(onboardingESign)).append("\n");
    sb.append("    bridgeUserId: ").append(toIndentedString(bridgeUserId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("trzConnectUserId");
    openapiFields.add("username");
    openapiFields.add("clients");
    openapiFields.add("userId");
    openapiFields.add("trzConnectUserOnboarding");
    openapiFields.add("kycReview");
    openapiFields.add("onboardingESign");
    openapiFields.add("bridgeUserId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAllUsers200ResponseDataInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAllUsers200ResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAllUsers200ResponseDataInner is not found in the empty JSON string", GetAllUsers200ResponseDataInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAllUsers200ResponseDataInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAllUsers200ResponseDataInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("trzConnectUserId") != null && !jsonObj.get("trzConnectUserId").isJsonNull()) && !jsonObj.get("trzConnectUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trzConnectUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trzConnectUserId").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull()) {
        JsonArray jsonArrayclients = jsonObj.getAsJsonArray("clients");
        if (jsonArrayclients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clients` to be an array in the JSON string but got `%s`", jsonObj.get("clients").toString()));
          }

          // validate the optional field `clients` (array)
          for (int i = 0; i < jsonArrayclients.size(); i++) {
            GetAllUsers200ResponseDataInnerClientsInner.validateJsonElement(jsonArrayclients.get(i));
          };
        }
      }
      if ((jsonObj.get("trzConnectUserOnboarding") != null && !jsonObj.get("trzConnectUserOnboarding").isJsonNull()) && !jsonObj.get("trzConnectUserOnboarding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trzConnectUserOnboarding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trzConnectUserOnboarding").toString()));
      }
      if ((jsonObj.get("kycReview") != null && !jsonObj.get("kycReview").isJsonNull()) && !jsonObj.get("kycReview").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycReview` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycReview").toString()));
      }
      if ((jsonObj.get("onboardingESign") != null && !jsonObj.get("onboardingESign").isJsonNull()) && !jsonObj.get("onboardingESign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `onboardingESign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onboardingESign").toString()));
      }
      if ((jsonObj.get("bridgeUserId") != null && !jsonObj.get("bridgeUserId").isJsonNull()) && !jsonObj.get("bridgeUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bridgeUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bridgeUserId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAllUsers200ResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAllUsers200ResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAllUsers200ResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAllUsers200ResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAllUsers200ResponseDataInner>() {
           @Override
           public void write(JsonWriter out, GetAllUsers200ResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAllUsers200ResponseDataInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAllUsers200ResponseDataInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAllUsers200ResponseDataInner
   * @throws IOException if the JSON string is invalid with respect to GetAllUsers200ResponseDataInner
   */
  public static GetAllUsers200ResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAllUsers200ResponseDataInner.class);
  }

  /**
   * Convert an instance of GetAllUsers200ResponseDataInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

