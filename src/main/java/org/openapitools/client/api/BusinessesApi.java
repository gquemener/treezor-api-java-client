/*
 * Treezor API
 * Official endpoint documentation for Treezor.
 *
 * The version of the OpenAPI document: 24.11.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetBusinessInfo200Response;
import org.openapitools.client.model.SearchBusiness200ResponseInner;
import org.openapitools.client.model.SearchBusinessDefaultResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BusinessesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BusinessesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BusinessesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getBusinessInfo
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param externalId External unique business id. As given in businesssearch reponse. (optional)
     * @param registrationNumber Unique business registration number. (optional)
     * @param vatNumber Unique business VAT number. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business information response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getBusinessInfoCall(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String externalId, String registrationNumber, String vatNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/businessinformations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (accessSignature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessSignature", accessSignature));
        }

        if (accessTag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessTag", accessTag));
        }

        if (accessUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessUserId", accessUserId));
        }

        if (accessUserIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessUserIp", accessUserIp));
        }

        if (country != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("country", country));
        }

        if (externalId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("externalId", externalId));
        }

        if (registrationNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("registrationNumber", registrationNumber));
        }

        if (vatNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vatNumber", vatNumber));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "jwt" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getBusinessInfoValidateBeforeCall(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String externalId, String registrationNumber, String vatNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling getBusinessInfo(Async)");
        }

        return getBusinessInfoCall(country, accessSignature, accessTag, accessUserId, accessUserIp, externalId, registrationNumber, vatNumber, _callback);

    }

    /**
     * Get Business Information
     * The get business information endpoint returns all already known business information. End user will have then to verify/correct it. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param externalId External unique business id. As given in businesssearch reponse. (optional)
     * @param registrationNumber Unique business registration number. (optional)
     * @param vatNumber Unique business VAT number. (optional)
     * @return GetBusinessInfo200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business information response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetBusinessInfo200Response getBusinessInfo(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String externalId, String registrationNumber, String vatNumber) throws ApiException {
        ApiResponse<GetBusinessInfo200Response> localVarResp = getBusinessInfoWithHttpInfo(country, accessSignature, accessTag, accessUserId, accessUserIp, externalId, registrationNumber, vatNumber);
        return localVarResp.getData();
    }

    /**
     * Get Business Information
     * The get business information endpoint returns all already known business information. End user will have then to verify/correct it. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param externalId External unique business id. As given in businesssearch reponse. (optional)
     * @param registrationNumber Unique business registration number. (optional)
     * @param vatNumber Unique business VAT number. (optional)
     * @return ApiResponse&lt;GetBusinessInfo200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business information response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetBusinessInfo200Response> getBusinessInfoWithHttpInfo(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String externalId, String registrationNumber, String vatNumber) throws ApiException {
        okhttp3.Call localVarCall = getBusinessInfoValidateBeforeCall(country, accessSignature, accessTag, accessUserId, accessUserIp, externalId, registrationNumber, vatNumber, null);
        Type localVarReturnType = new TypeToken<GetBusinessInfo200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Business Information (asynchronously)
     * The get business information endpoint returns all already known business information. End user will have then to verify/correct it. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param externalId External unique business id. As given in businesssearch reponse. (optional)
     * @param registrationNumber Unique business registration number. (optional)
     * @param vatNumber Unique business VAT number. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business information response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getBusinessInfoAsync(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String externalId, String registrationNumber, String vatNumber, final ApiCallback<GetBusinessInfo200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getBusinessInfoValidateBeforeCall(country, accessSignature, accessTag, accessUserId, accessUserIp, externalId, registrationNumber, vatNumber, _callback);
        Type localVarReturnType = new TypeToken<GetBusinessInfo200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchBusiness
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param nameExact Business exact name. Exclusive with &#x60;nameMatchBeginning&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameMatchBeginning Business names begin with. Exclusive with &#x60;nameExact&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameClosestKeywords Business names closed to keywords. Exclusive with &#x60;nameExact&#x60; and &#x60;nameMatchBeginning&#x60;.  (optional)
     * @param registrationNumber Business registration number. (optional)
     * @param vatNumber Business VAT number. (optional)
     * @param phoneNumber Business phone number. (optional)
     * @param addressStreet Business&#39; street address. (optional)
     * @param addressCity Business&#39; city address. (optional)
     * @param addressPostalCode Business&#39; postal code address. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business search response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchBusinessCall(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String nameExact, String nameMatchBeginning, String nameClosestKeywords, String registrationNumber, String vatNumber, String phoneNumber, String addressStreet, String addressCity, String addressPostalCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/businesssearchs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (accessSignature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessSignature", accessSignature));
        }

        if (accessTag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessTag", accessTag));
        }

        if (accessUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessUserId", accessUserId));
        }

        if (accessUserIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("accessUserIp", accessUserIp));
        }

        if (country != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("country", country));
        }

        if (nameExact != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nameExact", nameExact));
        }

        if (nameMatchBeginning != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nameMatchBeginning", nameMatchBeginning));
        }

        if (nameClosestKeywords != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nameClosestKeywords", nameClosestKeywords));
        }

        if (registrationNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("registrationNumber", registrationNumber));
        }

        if (vatNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vatNumber", vatNumber));
        }

        if (phoneNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phoneNumber", phoneNumber));
        }

        if (addressStreet != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("addressStreet", addressStreet));
        }

        if (addressCity != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("addressCity", addressCity));
        }

        if (addressPostalCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("addressPostalCode", addressPostalCode));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "jwt" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchBusinessValidateBeforeCall(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String nameExact, String nameMatchBeginning, String nameClosestKeywords, String registrationNumber, String vatNumber, String phoneNumber, String addressStreet, String addressCity, String addressPostalCode, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling searchBusiness(Async)");
        }

        return searchBusinessCall(country, accessSignature, accessTag, accessUserId, accessUserIp, nameExact, nameMatchBeginning, nameClosestKeywords, registrationNumber, vatNumber, phoneNumber, addressStreet, addressCity, addressPostalCode, _callback);

    }

    /**
     * Search Businesses
     * The search endpoint returns some business information. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param nameExact Business exact name. Exclusive with &#x60;nameMatchBeginning&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameMatchBeginning Business names begin with. Exclusive with &#x60;nameExact&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameClosestKeywords Business names closed to keywords. Exclusive with &#x60;nameExact&#x60; and &#x60;nameMatchBeginning&#x60;.  (optional)
     * @param registrationNumber Business registration number. (optional)
     * @param vatNumber Business VAT number. (optional)
     * @param phoneNumber Business phone number. (optional)
     * @param addressStreet Business&#39; street address. (optional)
     * @param addressCity Business&#39; city address. (optional)
     * @param addressPostalCode Business&#39; postal code address. (optional)
     * @return List&lt;SearchBusiness200ResponseInner&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business search response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public List<SearchBusiness200ResponseInner> searchBusiness(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String nameExact, String nameMatchBeginning, String nameClosestKeywords, String registrationNumber, String vatNumber, String phoneNumber, String addressStreet, String addressCity, String addressPostalCode) throws ApiException {
        ApiResponse<List<SearchBusiness200ResponseInner>> localVarResp = searchBusinessWithHttpInfo(country, accessSignature, accessTag, accessUserId, accessUserIp, nameExact, nameMatchBeginning, nameClosestKeywords, registrationNumber, vatNumber, phoneNumber, addressStreet, addressCity, addressPostalCode);
        return localVarResp.getData();
    }

    /**
     * Search Businesses
     * The search endpoint returns some business information. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param nameExact Business exact name. Exclusive with &#x60;nameMatchBeginning&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameMatchBeginning Business names begin with. Exclusive with &#x60;nameExact&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameClosestKeywords Business names closed to keywords. Exclusive with &#x60;nameExact&#x60; and &#x60;nameMatchBeginning&#x60;.  (optional)
     * @param registrationNumber Business registration number. (optional)
     * @param vatNumber Business VAT number. (optional)
     * @param phoneNumber Business phone number. (optional)
     * @param addressStreet Business&#39; street address. (optional)
     * @param addressCity Business&#39; city address. (optional)
     * @param addressPostalCode Business&#39; postal code address. (optional)
     * @return ApiResponse&lt;List&lt;SearchBusiness200ResponseInner&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business search response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<SearchBusiness200ResponseInner>> searchBusinessWithHttpInfo(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String nameExact, String nameMatchBeginning, String nameClosestKeywords, String registrationNumber, String vatNumber, String phoneNumber, String addressStreet, String addressCity, String addressPostalCode) throws ApiException {
        okhttp3.Call localVarCall = searchBusinessValidateBeforeCall(country, accessSignature, accessTag, accessUserId, accessUserIp, nameExact, nameMatchBeginning, nameClosestKeywords, registrationNumber, vatNumber, phoneNumber, addressStreet, addressCity, addressPostalCode, null);
        Type localVarReturnType = new TypeToken<List<SearchBusiness200ResponseInner>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search Businesses (asynchronously)
     * The search endpoint returns some business information. 
     * @param country In which country to search. Format [ISO 3166-1 alpha-2](/guide/api-basics/data-format.html#countries)  (required)
     * @param accessSignature Legacy attribute, do not use.  (optional)
     * @param accessTag A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). Max length: 250 characters.  (optional)
     * @param accessUserId Legacy attribute, do not use.  (optional)
     * @param accessUserIp Legacy attribute, do not use.  (optional)
     * @param nameExact Business exact name. Exclusive with &#x60;nameMatchBeginning&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameMatchBeginning Business names begin with. Exclusive with &#x60;nameExact&#x60; and &#x60;nameClosestKeywords&#x60;.  (optional)
     * @param nameClosestKeywords Business names closed to keywords. Exclusive with &#x60;nameExact&#x60; and &#x60;nameMatchBeginning&#x60;.  (optional)
     * @param registrationNumber Business registration number. (optional)
     * @param vatNumber Business VAT number. (optional)
     * @param phoneNumber Business phone number. (optional)
     * @param addressStreet Business&#39; street address. (optional)
     * @param addressCity Business&#39; city address. (optional)
     * @param addressPostalCode Business&#39; postal code address. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A business search response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchBusinessAsync(String country, String accessSignature, String accessTag, Integer accessUserId, String accessUserIp, String nameExact, String nameMatchBeginning, String nameClosestKeywords, String registrationNumber, String vatNumber, String phoneNumber, String addressStreet, String addressCity, String addressPostalCode, final ApiCallback<List<SearchBusiness200ResponseInner>> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchBusinessValidateBeforeCall(country, accessSignature, accessTag, accessUserId, accessUserIp, nameExact, nameMatchBeginning, nameClosestKeywords, registrationNumber, vatNumber, phoneNumber, addressStreet, addressCity, addressPostalCode, _callback);
        Type localVarReturnType = new TypeToken<List<SearchBusiness200ResponseInner>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
